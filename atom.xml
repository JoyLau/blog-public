<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JoyLau&#39;s Blog | JoyLau</title>
  
  <subtitle>刘法的技术学习与思考</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.joylau.cn/"/>
  <updated>2018-10-26T03:28:19.392Z</updated>
  <id>http://blog.joylau.cn/</id>
  
  <author>
    <name>JoyLau</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>记录 -- Docker 三种方式部署 ownCloud</title>
    <link href="http://blog.joylau.cn/2018/10/26/Docker-ownCloud/"/>
    <id>http://blog.joylau.cn/2018/10/26/Docker-ownCloud/</id>
    <published>2018-10-26T01:15:55.000Z</published>
    <updated>2018-10-26T03:28:19.392Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>ownCloud 除了传统的部署方式,在如今 docker 大行其道的环境下,使用 docker 部署 ownCloud 才是最方便的</p><h3 id="第一种-owncloud-镜像直接安装"><a href="#第一种-owncloud-镜像直接安装" class="headerlink" title="第一种 owncloud 镜像直接安装"></a>第一种 owncloud 镜像直接安装</h3><p>直接部署 owncloud 镜像,该镜像地址: <a href="https://hub.docker.com/r/_/owncloud/" target="_blank" rel="noopener">https://hub.docker.com/r/_/owncloud/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull owncloud</span><br><span class="line">docker run -d -p 80:80 owncloud</span><br></pre></td></tr></table></figure><p>这种方式的需要你提前装好 MariaDb 数据库,在启动完成后打开页面会按照流程填写数据库的链接信息,之后就可以使用 ownCloud 了</p><h3 id="第二种-分别安装"><a href="#第二种-分别安装" class="headerlink" title="第二种 分别安装"></a>第二种 分别安装</h3><p>分别先后使用 docker 按照 redis,mariadb,ownCloud<br>安装 redis 的 mariadb</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">docker volume create owncloud_redis</span><br><span class="line"></span><br><span class="line">docker run -d \</span><br><span class="line">  --name redis \</span><br><span class="line">  -e REDIS_DATABASES=1 \</span><br><span class="line">  --volume owncloud_redis:/var/lib/redis \</span><br><span class="line">  webhippie/redis:latest</span><br><span class="line"></span><br><span class="line">docker volume create owncloud_mysql</span><br><span class="line">docker volume create owncloud_backup</span><br><span class="line"></span><br><span class="line">docker run -d \</span><br><span class="line">  --name mariadb \</span><br><span class="line">  -e MARIADB_ROOT_PASSWORD=owncloud \</span><br><span class="line">  -e MARIADB_USERNAME=owncloud \</span><br><span class="line">  -e MARIADB_PASSWORD=owncloud \</span><br><span class="line">  -e MARIADB_DATABASE=owncloud \</span><br><span class="line">  --volume owncloud_mysql:/var/lib/mysql \</span><br><span class="line">  --volume owncloud_backup:/var/lib/backup \</span><br><span class="line">  webhippie/mariadb:latest</span><br></pre></td></tr></table></figure><p>接着我们配置一些 ownCloud web 服务的环境变量,并在启动容器时使用这些变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">export OWNCLOUD_VERSION=10.0</span><br><span class="line">export OWNCLOUD_DOMAIN=localhost</span><br><span class="line">export ADMIN_USERNAME=admin</span><br><span class="line">export ADMIN_PASSWORD=admin</span><br><span class="line">export HTTP_PORT=80</span><br><span class="line"></span><br><span class="line">docker volume create owncloud_files</span><br><span class="line"></span><br><span class="line">docker run -d \</span><br><span class="line">  --name owncloud \</span><br><span class="line">  --link mariadb:db \</span><br><span class="line">  --link redis:redis \</span><br><span class="line">  -p $&#123;HTTP_PORT&#125;:8080 \</span><br><span class="line">  -e OWNCLOUD_DOMAIN=$&#123;OWNCLOUD_DOMAIN&#125; \</span><br><span class="line">  -e OWNCLOUD_DB_TYPE=mysql \</span><br><span class="line">  -e OWNCLOUD_DB_NAME=owncloud \</span><br><span class="line">  -e OWNCLOUD_DB_USERNAME=owncloud \</span><br><span class="line">  -e OWNCLOUD_DB_PASSWORD=owncloud \</span><br><span class="line">  -e OWNCLOUD_DB_HOST=db \</span><br><span class="line">  -e OWNCLOUD_ADMIN_USERNAME=$&#123;ADMIN_USERNAME&#125; \</span><br><span class="line">  -e OWNCLOUD_ADMIN_PASSWORD=$&#123;ADMIN_PASSWORD&#125; \</span><br><span class="line">  -e OWNCLOUD_REDIS_ENABLED=true \</span><br><span class="line">  -e OWNCLOUD_REDIS_HOST=redis \</span><br><span class="line">  --volume owncloud_files:/mnt/data \</span><br><span class="line">  owncloud/server:$&#123;OWNCLOUD_VERSION&#125;</span><br></pre></td></tr></table></figure><p>之后稍等片刻,打开网页即可</p><h3 id="第三种-docker-compose-部署"><a href="#第三种-docker-compose-部署" class="headerlink" title="第三种 docker-compose 部署"></a>第三种 docker-compose 部署</h3><p>首先保证 docker-compose 的版本在 1.12.0+ </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 创建一个新的目录</span><br><span class="line">mkdir owncloud-docker-server</span><br><span class="line"></span><br><span class="line">cd owncloud-docker-server</span><br><span class="line"></span><br><span class="line"># 下载 docker-compose.yml 文件</span><br><span class="line">wget https://raw.githubusercontent.com/owncloud-docker/server/master/docker-compose.yml</span><br><span class="line"></span><br><span class="line"># 配置环境变量文件</span><br><span class="line">cat &lt;&lt; EOF &gt; .env</span><br><span class="line">OWNCLOUD_VERSION=10.0</span><br><span class="line">OWNCLOUD_DOMAIN=localhost</span><br><span class="line">ADMIN_USERNAME=admin</span><br><span class="line">ADMIN_PASSWORD=admin</span><br><span class="line">HTTP_PORT=80</span><br><span class="line">HTTPS_PORT=443</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 构建并启动容器</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>当上面的流程都完成时，通过运行 <code>docker-compose ps</code> 检查所有容器是否已成功启动<br>还可以使用 <code>docker-compose logs --follow owncloud</code> 来查看日志<br><code>docker-compose stop</code> 停止容器<br><code>docker-compose down</code> 停止和删除容器</p><h4 id="版本更新"><a href="#版本更新" class="headerlink" title="版本更新"></a>版本更新</h4><ol><li>进入 .yaml 或 .env 目录</li><li>将 ownCloud 设置维护模式,<code>docker-compose exec server occ maintenance:mode --on</code></li><li>停止容器, <code>docker-compose down</code></li><li>修改. env 文件的版本号,手动或者 <code>sed -i &#39;s/^OWNCLOUD_VERSION=.*$/OWNCLOUD_VERSION=&lt;newVersion&gt;/&#39; /compose/*/.env</code></li><li>重新构建并启动, <code>docker-compose up -d</code></li></ol><p>配置说明<br>OWNCLOUD_VERSION:  ownCloud 版本<br>OWNCLOUD_DOMAIN: ownCloud 可访问的域<br>ADMIN_USERNAME: 管理员用户名<br>ADMIN_PASSWORD: 管理员密码<br>HTTP_PORT: 使用的端口<br>HTTPS_PORT: SSL使用的端口</p><p>总结来说,推荐使用第三种方式来部署.</p>]]></content>
    
    <summary type="html">
    
      ownCloud 除了传统的部署方式,在如今 docker 大行其道的环境下,使用 docker 部署 ownCloud 才是最方便的
    
    </summary>
    
      <category term="Docker篇" scheme="http://blog.joylau.cn/categories/Docker%E7%AF%87/"/>
    
    
      <category term="Docker" scheme="http://blog.joylau.cn/tags/Docker/"/>
    
      <category term="ownCloud" scheme="http://blog.joylau.cn/tags/ownCloud/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch 关键字自动补全的实现</title>
    <link href="http://blog.joylau.cn/2018/08/13/Elasticsearch-AutoComplete/"/>
    <id>http://blog.joylau.cn/2018/08/13/Elasticsearch-AutoComplete/</id>
    <published>2018-08-13T03:01:12.000Z</published>
    <updated>2018-10-26T07:01:31.187Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>我们经常能看到在各大电商网站搜索关键字的时候,底下下拉框会补全你要搜索的商品,或者类似的商品,有时候甚至连错别字也能纠正过来,其实ElasticSearch也能实现这样的功能</p><h3 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h3><p>首先,能够被自动补全的需要设置索引类型为”completion”,其次,还可以设置自动提示为中文分词</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"settings"</span>: &#123;</span><br><span class="line">    <span class="attr">"analysis"</span>: &#123;</span><br><span class="line">      <span class="attr">"analyzer"</span>: &#123;</span><br><span class="line">        <span class="attr">"ik"</span>: &#123;</span><br><span class="line">          <span class="attr">"tokenizer"</span>: <span class="string">"ik_max_word"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"ngram_analyzer"</span>: &#123;</span><br><span class="line">          <span class="attr">"tokenizer"</span>: <span class="string">"ngram_tokenizer"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"tokenizer"</span>: &#123;</span><br><span class="line">        <span class="attr">"ngram_tokenizer"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"ngram"</span>,</span><br><span class="line">          <span class="attr">"min_gram"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"max_gram"</span>: <span class="number">30</span>,</span><br><span class="line">          <span class="attr">"token_chars"</span>: [</span><br><span class="line">            <span class="string">"letter"</span>,</span><br><span class="line">            <span class="string">"digit"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"mappings"</span>: &#123;</span><br><span class="line">    <span class="attr">"knowledge_info"</span>: &#123;</span><br><span class="line">      <span class="attr">"properties"</span>: &#123;</span><br><span class="line">        <span class="attr">"infoId"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"string"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"infoTitle"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"string"</span>,</span><br><span class="line">          <span class="attr">"search_analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">          <span class="attr">"analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">          <span class="attr">"fields"</span>: &#123;</span><br><span class="line">            <span class="attr">"suggest"</span>: &#123;</span><br><span class="line">              <span class="attr">"max_input_length"</span>: <span class="number">30</span>,</span><br><span class="line">              <span class="attr">"preserve_position_increments"</span>: <span class="literal">false</span>,</span><br><span class="line">              <span class="attr">"type"</span>: <span class="string">"completion"</span>,</span><br><span class="line">              <span class="attr">"preserve_separators"</span>: <span class="literal">false</span>,</span><br><span class="line">              <span class="attr">"analyzer"</span>: <span class="string">"ik_max_word"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">"wordCloud"</span>: &#123;</span><br><span class="line">              <span class="attr">"type"</span>: <span class="string">"string"</span>,</span><br><span class="line">              <span class="attr">"analyzer"</span>: <span class="string">"ik_smart"</span>,</span><br><span class="line">              <span class="attr">"fielddata"</span>:<span class="string">"true"</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"infoKeywords"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"string"</span>,</span><br><span class="line">          <span class="attr">"search_analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">          <span class="attr">"analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">          <span class="attr">"fields"</span>: &#123;</span><br><span class="line">            <span class="attr">"suggest"</span>: &#123;</span><br><span class="line">              <span class="attr">"max_input_length"</span>: <span class="number">30</span>,</span><br><span class="line">              <span class="attr">"preserve_position_increments"</span>: <span class="literal">false</span>,</span><br><span class="line">              <span class="attr">"type"</span>: <span class="string">"completion"</span>,</span><br><span class="line">              <span class="attr">"preserve_separators"</span>: <span class="literal">false</span>,</span><br><span class="line">              <span class="attr">"analyzer"</span>: <span class="string">"ik_max_word"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">"wordCloud"</span>: &#123;</span><br><span class="line">              <span class="attr">"type"</span>: <span class="string">"string"</span>,</span><br><span class="line">              <span class="attr">"analyzer"</span>: <span class="string">"ik_smart"</span>,</span><br><span class="line">              <span class="attr">"fielddata"</span>:<span class="string">"true"</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"infoSummary"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"string"</span>,</span><br><span class="line">          <span class="attr">"search_analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">          <span class="attr">"analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">          <span class="attr">"fields"</span>: &#123;</span><br><span class="line">            <span class="attr">"suggest"</span>: &#123;</span><br><span class="line">              <span class="attr">"max_input_length"</span>: <span class="number">30</span>,</span><br><span class="line">              <span class="attr">"preserve_position_increments"</span>: <span class="literal">false</span>,</span><br><span class="line">              <span class="attr">"type"</span>: <span class="string">"completion"</span>,</span><br><span class="line">              <span class="attr">"preserve_separators"</span>: <span class="literal">false</span>,</span><br><span class="line">              <span class="attr">"analyzer"</span>: <span class="string">"ik_max_word"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">"wordCloud"</span>: &#123;</span><br><span class="line">              <span class="attr">"type"</span>: <span class="string">"string"</span>,</span><br><span class="line">              <span class="attr">"analyzer"</span>: <span class="string">"ik_smart"</span>,</span><br><span class="line">              <span class="attr">"fielddata"</span>:<span class="string">"true"</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"infoContent"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">          <span class="attr">"search_analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">          <span class="attr">"analyzer"</span>: <span class="string">"ik_max_word"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"propertyAuthor"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"string"</span>,</span><br><span class="line">          <span class="attr">"search_analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">          <span class="attr">"analyzer"</span>: <span class="string">"ik_max_word"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"propertyIssueUnit"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"string"</span>,</span><br><span class="line">          <span class="attr">"search_analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">          <span class="attr">"analyzer"</span>: <span class="string">"ik_max_word"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"propertyStandardCode"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"string"</span>,</span><br><span class="line">          <span class="attr">"search_analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">          <span class="attr">"analyzer"</span>: <span class="string">"ik_max_word"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"propertyLiteratureCategory"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"string"</span>,</span><br><span class="line">          <span class="attr">"search_analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">          <span class="attr">"analyzer"</span>: <span class="string">"ik_max_word"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"propertyLcCode"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"string"</span>,</span><br><span class="line">          <span class="attr">"search_analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">          <span class="attr">"analyzer"</span>: <span class="string">"ik_max_word"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"propertyLiteratureCode"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"string"</span>,</span><br><span class="line">          <span class="attr">"search_analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">          <span class="attr">"analyzer"</span>: <span class="string">"ik_max_word"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"data"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"text"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"attachment.content"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">          <span class="attr">"search_analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">          <span class="attr">"analyzer"</span>: <span class="string">"ik_max_word"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"auditState"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"string"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"infoType"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"string"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"infoFileUrl"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"string"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"infoFileName"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"string"</span>,</span><br><span class="line">          <span class="attr">"search_analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">          <span class="attr">"analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">          <span class="attr">"fields"</span>: &#123;</span><br><span class="line">            <span class="attr">"suggest"</span>: &#123;</span><br><span class="line">              <span class="attr">"max_input_length"</span>: <span class="number">60</span>,</span><br><span class="line">              <span class="attr">"preserve_position_increments"</span>: <span class="literal">false</span>,</span><br><span class="line">              <span class="attr">"type"</span>: <span class="string">"completion"</span>,</span><br><span class="line">              <span class="attr">"preserve_separators"</span>: <span class="literal">false</span>,</span><br><span class="line">              <span class="attr">"analyzer"</span>: <span class="string">"ik_max_word"</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"createTime"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"string"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 elasticsearch 需要安装中文分词 ik 插件和附件处理插件 ingest-attachment</p><h3 id="Java-API-调用"><a href="#Java-API-调用" class="headerlink" title="Java API 调用"></a>Java API 调用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自动完成提示</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> search search</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> MessageBody</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> MessageBody <span class="title">autoCompleteKnowledgeInfo</span><span class="params">(KnowledgeSearch search)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//设置搜索建议</span></span><br><span class="line">    CompletionSuggestionBuilder infoTitleSuggestion = <span class="keyword">new</span> CompletionSuggestionBuilder(<span class="string">"infoTitle.suggest"</span>)</span><br><span class="line">            .text(search.getQuery())</span><br><span class="line">            .size(<span class="number">6</span>);</span><br><span class="line">    CompletionSuggestionBuilder infoKeywordsSuggestion = <span class="keyword">new</span> CompletionSuggestionBuilder(<span class="string">"infoKeywords.suggest"</span>)</span><br><span class="line">            .text(search.getQuery())</span><br><span class="line">            .size(<span class="number">6</span>);</span><br><span class="line">    CompletionSuggestionBuilder infoSummarySuggestion = <span class="keyword">new</span> CompletionSuggestionBuilder(<span class="string">"infoSummary.suggest"</span>)</span><br><span class="line">            .text(search.getQuery())</span><br><span class="line">            .size(<span class="number">6</span>);</span><br><span class="line">    CompletionSuggestionBuilder infoFileNameSuggestion = <span class="keyword">new</span> CompletionSuggestionBuilder(<span class="string">"infoFileName.suggest"</span>)</span><br><span class="line">            .text(search.getQuery())</span><br><span class="line">            .size(<span class="number">6</span>);</span><br><span class="line">    SuggestBuilder suggestBuilder = <span class="keyword">new</span> SuggestBuilder()</span><br><span class="line">            .addSuggestion(<span class="string">"标题"</span>, infoTitleSuggestion)</span><br><span class="line">            .addSuggestion(<span class="string">"关键字"</span>, infoKeywordsSuggestion)</span><br><span class="line">            .addSuggestion(<span class="string">"摘要"</span>, infoSummarySuggestion)</span><br><span class="line">            .addSuggestion(<span class="string">"附件"</span>,infoFileNameSuggestion);</span><br><span class="line">    SearchRequestBuilder searchRequest = client.prepareSearch(ES_KNOWLEDGE_INDEX)</span><br><span class="line">            .setFetchSource(<span class="keyword">false</span>)</span><br><span class="line">            .suggest(suggestBuilder);</span><br><span class="line">    List&lt;JSONObject&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询结果</span></span><br><span class="line">    SearchResponse searchResponse = searchRequest.get();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*没查到结果*/</span></span><br><span class="line">    <span class="keyword">if</span> (searchResponse.getSuggest() == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> MessageBody.success(list);</span><br><span class="line">    &#125;</span><br><span class="line">    searchResponse.getSuggest().forEach(entries -&gt; &#123;</span><br><span class="line">        String name = entries.getName();</span><br><span class="line">        <span class="keyword">for</span> (Suggest.Suggestion.Entry&lt;? extends Suggest.Suggestion.Entry.Option&gt; entry : entries) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Suggest.Suggestion.Entry.Option option : entry.getOptions()) &#123;</span><br><span class="line">                JSONObject object = <span class="keyword">new</span> JSONObject();</span><br><span class="line">                object.put(<span class="string">"name"</span>,name);</span><br><span class="line">                object.put(<span class="string">"text"</span>,option.getText().string());</span><br><span class="line">                list.add(object);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> MessageBody.success(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码摘取自项目中的部分, 另外前端还可以配合自动完成的插件,最终来实现效果.</p>]]></content>
    
    <summary type="html">
    
      我们经常能看到在各大电商网站搜索关键字的时候,底下下拉框会补全你要搜索的商品,或者类似的商品,有时候甚至连错别字也能纠正过来,其实ElasticSearch也能实现这样的功能
    
    </summary>
    
      <category term="大数据篇" scheme="http://blog.joylau.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AF%87/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.joylau.cn/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch 查询全部数据</title>
    <link href="http://blog.joylau.cn/2018/08/09/Elasticsearch-SearchAll/"/>
    <id>http://blog.joylau.cn/2018/08/09/Elasticsearch-SearchAll/</id>
    <published>2018-08-09T07:27:16.000Z</published>
    <updated>2018-08-13T02:51:53.682Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>有时我们希望查询 固定条件下的全部数据<br>ES 默认的策略是返回10条数据<br>虽然可以 setSize()<br>但是默认上限是 10 万还是 100 万条数据,这不够优雅,一般不这么干</p><h3 id="TransportClient-方法"><a href="#TransportClient-方法" class="headerlink" title="TransportClient 方法"></a>TransportClient 方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">TimeValue keepAlive = TimeValue.timeValueMinutes(<span class="number">30</span>);</span><br><span class="line">    SearchRequestBuilder searchRequest = client.prepareSearch(ES_KNOWLEDGE_INDEX)</span><br><span class="line">            .setScroll(keepAlive)</span><br><span class="line">            .setSize(<span class="number">10000</span>);</span><br><span class="line">    SearchResponse searchResponse = searchRequest.get();</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="comment">//处理的业务 saveIds(searchResponse);</span></span><br><span class="line">        searchResponse = client.prepareSearchScroll(searchResponse.getScrollId()).setScroll(keepAlive).execute()</span><br><span class="line">                .actionGet();</span><br><span class="line">    &#125; <span class="keyword">while</span> (searchResponse.getHits().getHits().length != <span class="number">0</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      记录下 ES 查询全部数据的 API 使用用法
    
    </summary>
    
      <category term="大数据篇" scheme="http://blog.joylau.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AF%87/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.joylau.cn/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>$(...).autocomplete is not a function 问题的解决</title>
    <link href="http://blog.joylau.cn/2018/08/09/Jquery-Load-Plugins/"/>
    <id>http://blog.joylau.cn/2018/08/09/Jquery-Load-Plugins/</id>
    <published>2018-08-09T02:04:52.000Z</published>
    <updated>2018-08-09T02:29:19.757Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>因项目需求,需要一个自动提示的功能,想到之前有 jquery 的 jQuery-Autocomplete 插件,于是就直接拿来用了,<br>直接在github 上找到了一个 starts 最多的项目 <a href="https://github.com/devbridge/jQuery-Autocomplete.git" target="_blank" rel="noopener">jQuery-Autocomplete</a><br>看了下插件的 API 可配置项很多,有一个 appendTo 配置,是我想要的,于是就决定使用这个差价</p><p>直接把 插件下载下来 放到项目中去,直接 $(…).autocomplete is not a function<br>……</p><p>项目中我写的只是其中的一个模块,页面的代码是纯 html 页面写的,然后通过 panel 引入 html 代码片段<br>很奇怪,为什么插件无法加载</p><p>于是就就把官方的demo跑了一下,没有问题</p><p>又怀疑是 jQuery 版本的问题,<br>官方的demo jQuery 版本是 1.8.2,项目使用的是1.11.1,<br>于是又在官方的 demo 下替换jQuery的版本<br>发现使用没有问题</p><p>又怀疑是插件的版本过高,于是再 GitHub 的 release 上找了个2014年发布的1.2.2的版本,这已经是能找到的最低版本了<br>发现还是不行</p><p>这就奇怪了,我之前也引入过其他的插件,正常使用都没有问题,偏偏使用这个有问题<br>于是想着插件的引入方式有问题,打开一看,jQuery插件的引入方式都是大同小异的<br>本人前端不擅长,也不知道怎么改…..</p><p>于是又在 GitHub上找了其他的插件,有的能用,但是没有我想要的功能….</p><p>一直这么来来回回的测试,已经晚上 10 点了…..<br>从吃完晚饭一直研究到现在还是没有解决<br>心里好气啊!!!!!<br>空调一关,直接回家了!!!!</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>今天早上来又差了点资料,找到了个不太靠谱,但又想尝试了下的方法<br><a href="https://blog.verysu.com/article/328" target="_blank" rel="noopener">TypeError: $(…).autocomplete is not a function</a></p><p>试一下吧,没想到真的可以</p><p>发一张对比图</p><p><img src="http://image.joylau.cn/blog/Jquery-Load-Plugins.md.png" alt="query-Load-Plugins"></p>]]></content>
    
    <summary type="html">
    
      因项目需求,需要一个自动提示的功能,想到之前有 jquery 的 jQuery-Autocomplete 插件,于是就直接拿来用了,但是使用情况却不是如此
    
    </summary>
    
      <category term="前端篇" scheme="http://blog.joylau.cn/categories/%E5%89%8D%E7%AB%AF%E7%AF%87/"/>
    
    
      <category term="Jquery" scheme="http://blog.joylau.cn/tags/Jquery/"/>
    
  </entry>
  
  <entry>
    <title>Git 使用 ss 代理和 Ubuntu 使用 ss 全局代理</title>
    <link href="http://blog.joylau.cn/2018/08/07/Git-Proxy-And-Ubuntu-Global-Proxy/"/>
    <id>http://blog.joylau.cn/2018/08/07/Git-Proxy-And-Ubuntu-Global-Proxy/</id>
    <published>2018-08-07T08:12:53.000Z</published>
    <updated>2018-08-07T08:38:59.790Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>这一段时间 GitHub 在国内的访问又出问题,代码提交不上去,需要在 Git 上走代理了</p><h2 id="Git-使用-ss-代理配置"><a href="#Git-使用-ss-代理配置" class="headerlink" title="Git 使用 ss 代理配置"></a>Git 使用 ss 代理配置</h2><ol><li>需要全局 git 都走代理</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy <span class="string">'socks5://127.0.0.1:1080'</span></span><br><span class="line">git config --global https.proxy <span class="string">'socks5://127.0.0.1:1080'</span></span><br></pre></td></tr></table></figure><p>取消</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> http.proxy</span><br><span class="line">git config --global --<span class="built_in">unset</span> https.proxy</span><br></pre></td></tr></table></figure><p>但是有时候我们并不需要所有的 git 仓库都走代理,可以去掉上述的命令中的 <code>--global</code>,然后到你需要走代理的那个 git 仓库下执行命令,或者添加配置:</p><ol start="2"><li>单独配置 git 走代理<br>在 .git =&gt; config 文件中加入配置</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[https]</span><br><span class="line">proxy = socks5://127.0.0.1:1080</span><br><span class="line">[http]</span><br><span class="line">proxy = socks5://127.0.0.1:1080</span><br></pre></td></tr></table></figure><p>其实,也就是上述命令执行后添加的配置.配置后就可以愉快的 clone push 了.</p><h2 id="Ubuntu-使用全局代理"><a href="#Ubuntu-使用全局代理" class="headerlink" title="Ubuntu 使用全局代理"></a>Ubuntu 使用全局代理</h2><p>Windows 和 MacOS 下的 ss 全局代理很方便,点击切换下就可以了,而 Ubuntu 下需要多点操作:</p><ol><li>启动 shadowsocks-qt5，并连接上</li><li>生成 pac 文件,如果有现成的 pac 文件,直接进入第四步</li><li>生成 pac 文件</li></ol><p>安装 pip </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo pip install genpac</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pip install --upgrade genpac</span></span><br></pre></td></tr></table></figure><p>创建 user-rules.txt 文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir vpnPAC</span><br><span class="line">cd vpnPAC</span><br><span class="line">touch user-rules.txt</span><br></pre></td></tr></table></figure><p>生成 autoproxy.pac 文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">genpac -p "SOCKS5 127.0.0.1:1080" --gfwlist-proxy="SOCKS5 127.0.0.1:1080" --output="autoproxy.pac" --gfwlist-url="https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt" --user-rule-from="user-rules.txt"</span><br></pre></td></tr></table></figure><p>github 上的 gfwlist.txt 文件可能读取不到,多试几次</p><ol start="4"><li>配置使用</li></ol><p><img src="http://image.joylau.cn/blog/ubuntu-global-proxy.png" alt="配置使用"></p>]]></content>
    
    <summary type="html">
    
      这一段时间 GitHub 在国内的访问又出问题,代码提交不上去,需要在 Git 上走代理了
    
    </summary>
    
      <category term="Git篇" scheme="http://blog.joylau.cn/categories/Git%E7%AF%87/"/>
    
    
      <category term="Git" scheme="http://blog.joylau.cn/tags/Git/"/>
    
      <category term="Ubuntu" scheme="http://blog.joylau.cn/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>宽带速率转换</title>
    <link href="http://blog.joylau.cn/2018/08/03/BroadbandSpeedConversion/"/>
    <id>http://blog.joylau.cn/2018/08/03/BroadbandSpeedConversion/</id>
    <published>2018-08-03T00:51:16.000Z</published>
    <updated>2018-08-03T01:06:00.890Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>昨天和别人吃饭谈起了家里宽带的问题，办了多少兆的宽带，网速能有多少等云云，对方是个小白，和他说了半天，但是有些深层次的原理我也弄不清楚，后来我上网科普了一下，现在整理如下</p><h3 id="什么是宽带速率？"><a href="#什么是宽带速率？" class="headerlink" title="什么是宽带速率？"></a>什么是宽带速率？</h3><p>宽带速率是指技术上所能达到的理论最高信息传送比特率，一般是上传和下载的速度，速率越高，上传和下载的越快。用户申请的宽带业务速率指技术上所能达到的最大理论速率值。但用户上网时还受到用户电脑软硬件的配置、所浏览网站的地址、终端网站带宽等情况的影响。因此，用户上网时的速率通常低于理论速率值。</p><p>理论上，2M，即2Mb/s，宽带理论速率是 256KB/S。实际速率大约为103–200KB/S。（其原因是受用户计算机性能、网络设备质量、资源使用情况、网络高峰期、网站服务能力、线路衰耗、信号衰减等多因素的影响而造成的）。4M，即4Mb/s宽带理论速率是 512KB/S 实际速率大约为200—440KB/S。</p><h3 id="计算方法"><a href="#计算方法" class="headerlink" title="计算方法"></a>计算方法</h3><p>在计算机科学中，bit是表示信息的最小单位，叫做二进制位；一般用0和1表示。Byte叫做字节，由8个位（8bit）组成一个字节(1Byte)，用于表示计算机中的一个字符。bit与Byte之间可以进行换算，其换算关系为：1Byte=8bit（或简写为：1B=8b）；在实际应用中一般用简称，即1bit简写为1b(注意是小写英文字母b)，1Byte简写为1B（注意是大写英文字母B）。</p><p>在计算机网络或者是网络运营商中，一般，宽带速率的单位用bps(或b/s)表示；bps表示比特每秒即表示每秒钟传输多少位信息，是bit per second的缩写。在实际所说的1M带宽的意思是1Mbps（是兆比特每秒Mbps不是兆字节每秒MBps）。</p><p>换算公式：<code>1B=8b 1B/s=8b/s(或1Bps=8bps)</code></p><p>规范提示：实际书写规范中B应表示Byte(字节)，b应表示bit(比特)，但在平时的实际书写中有的把bit和Byte都混写为b ，如把Mb/s和MB/s都混写为Mb/s，导致人们在实际计算中因单位的混淆而出错。</p><p>实例： 在我们实际上网应用中，下载软件时常常看到诸如下载速度显示为128KBps（KB/s），103KB/s等等宽带速率大小字样，因为ISP提供的线路带宽使用的单位是比特，而一般下载软件显示的是字节（1字节=8比特），所以要通过换算，才能得实际值。然而我们可以按照换算公式换算一下：</p><p><code>1Mb/s = 1024Kb/s = 128×8(Kb/s) = 128KB/s</code></p><p><code>即 1Mb/s = 128KB/s</code></p><h3 id="宽带速率对照表"><a href="#宽带速率对照表" class="headerlink" title="宽带速率对照表"></a>宽带速率对照表</h3><table><thead><tr><th>常见宽带</th><th>理论最高速率（Mbps）</th><th>理论最高速率（KB/S）</th><th>常见下载速率（供参考）</th></tr></thead><tbody><tr><td>1M</td><td>1 Mbps</td><td>128 KB/S</td><td>77~128 KB/S</td></tr><tr><td>2M</td><td>2 Mbps</td><td>256 KB/S</td><td>154~256 KB/S</td></tr><tr><td>3M</td><td>3 Mbps</td><td>384 KB/S</td><td>231~384 KB/S</td></tr><tr><td>4M</td><td>4 Mbps</td><td>512 KB/S</td><td>307~512 KB/S</td></tr><tr><td>6M</td><td>6 Mbps</td><td>620 KB/S</td><td>462~620 KB/S</td></tr><tr><td>8M</td><td>8 Mbps</td><td>1024 KB/S</td><td>614~1024 KB/S</td></tr><tr><td>10M</td><td>10 Mbps</td><td>1280 KB/S</td><td>768~1280 KB/S</td></tr><tr><td>12M</td><td>12 Mbps</td><td>1536 KB/S</td><td>922~1536 KB/S</td></tr><tr><td>20M</td><td>20 Mbps</td><td>2560 KB/S</td><td>1536~2560 KB/S</td></tr><tr><td>30M</td><td>30 Mbps</td><td>3840 KB/S</td><td>2560~3840 KB/S</td></tr><tr><td>50M</td><td>50 Mbps</td><td>6400 KB/S</td><td>3840~6400 KB/S</td></tr><tr><td>100M</td><td>100 Mbps</td><td>12800 KB/S</td><td>7680~12800 KB/S</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      昨天和别人吃饭谈起了家里宽带的问题，办了多少兆的宽带，网速能有多少等云云，对方是个小白，和他说了半天，但是有些深层次的原理我也弄不清楚，后来我上网科普了一下，现在整理如下
    
    </summary>
    
      <category term="其他篇" scheme="http://blog.joylau.cn/categories/%E5%85%B6%E4%BB%96%E7%AF%87/"/>
    
    
      <category term="技能" scheme="http://blog.joylau.cn/tags/%E6%8A%80%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>NamedParameterJdbcTemplate 使用具名参数记录</title>
    <link href="http://blog.joylau.cn/2018/07/30/Spring-NamedParameterJdbcTemplate/"/>
    <id>http://blog.joylau.cn/2018/07/30/Spring-NamedParameterJdbcTemplate/</id>
    <published>2018-07-30T01:18:05.000Z</published>
    <updated>2018-07-30T02:10:59.578Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>最近维护了一个比较老的项目，操作数据库直接用的 Spring 的 JdbcTemplate，有很多地方我们传入的参数都是不确定的<br>简单的还好，复杂的 sql 语句在代码里用字符串拼接起来简直不能忍，<br>又不想对原来的项目有什么大的改动，就想这能不能在现在的基础上优化一下<br>还好有 NamedParameterJdbcTemplate</p><h3 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h3><p>具名参数: SQL 按名称(以冒号开头)而不是按位置进行指定. 具名参数更易于维护, 也提升了可读性. 具名参数由框架类在运行时用占位符取代<br>具名参数只在 NamedParameterJdbcTemplate 中得到支持。NamedParameterJdbcTemplate可以使用全部jdbcTemplate方法</p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><ol><li>该类位于 <code>org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate</code></li><li>有2个构造方法，参数分别是 DataSource 和 JdbcOperations</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Create a new NamedParameterJdbcTemplate for the given &#123;<span class="doctag">@link</span> DataSource&#125;.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Creates a classic Spring &#123;<span class="doctag">@link</span> org.springframework.jdbc.core.JdbcTemplate&#125; and wraps it.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> dataSource the JDBC DataSource to access</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">NamedParameterJdbcTemplate</span><span class="params">(DataSource dataSource)</span> </span>&#123;</span><br><span class="line">    Assert.notNull(dataSource, <span class="string">"DataSource must not be null"</span>);</span><br><span class="line">    <span class="keyword">this</span>.classicJdbcTemplate = <span class="keyword">new</span> JdbcTemplate(dataSource);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Create a new NamedParameterJdbcTemplate for the given classic</span></span><br><span class="line"><span class="comment"> * Spring &#123;<span class="doctag">@link</span> org.springframework.jdbc.core.JdbcTemplate&#125;.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> classicJdbcTemplate the classic Spring JdbcTemplate to wrap</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">NamedParameterJdbcTemplate</span><span class="params">(JdbcOperations classicJdbcTemplate)</span> </span>&#123;</span><br><span class="line">    Assert.notNull(classicJdbcTemplate, <span class="string">"JdbcTemplate must not be null"</span>);</span><br><span class="line">    <span class="keyword">this</span>.classicJdbcTemplate = classicJdbcTemplate;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>实例化 bean 只要将 dataSource 或者 JdbcTemplate 传入到构造参数即可</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"namedParameterJdbcTemplate"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ol><li>注入 namedParameterJdbcTemplate</li></ol><h3 id="参数的传入"><a href="#参数的传入" class="headerlink" title="参数的传入"></a>参数的传入</h3><p>namedParameterJdbcTemplate 参数传入有 2 中方法：</p><ol><li><code>Map&lt;String, ?&gt; paramMap</code> 我们熟知的 map</li><li><p><code>SqlParameterSource paramSource</code><br> 该接口默认的实现有三个类：</p><p> <code>MapSqlParameterSource</code> 实现非常简单，只是封装了java.util.Map；<br> 当 Map&lt;String, ?&gt; paramMap 用吧 或者 new MapSqlParameterSource(paramMap) 参数为 map</p><p> <code>BeanPropertySqlParameterSource</code> 封装了一个JavaBean对象，通过JavaBean对象属性来决定命名参数的值。<br>  new BeanPropertySqlParameterSource(dto) new 出一个 BeanPropertySqlParameterSource 对象，构造方法传入实体类即可，绝大部分情况下我们都使用这种方式</p><p> <code>EmptySqlParameterSource</code> 一个空的SqlParameterSource ，常用来占位使用<br>  没用过</p></li></ol><h3 id="数据返回"><a href="#数据返回" class="headerlink" title="数据返回"></a>数据返回</h3><ol><li>返回 Map</li><li><p>返回 RowMapper 包装好的实体类，该类有2中实现<br> SingleColumnRowMapper ，sql结果为一个单列的数据，如List<string> , List<integer>,String,Integer等</integer></string></p><p> BeanPropertyRowMapper， sql结果匹配到对象 List&lt; XxxVO&gt; , XxxVO</p></li></ol><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">KnowledgeInfo info = <span class="keyword">new</span> KnowledgeInfo();</span><br><span class="line">info.setAuditState(<span class="string">"1"</span>);</span><br><span class="line">List&lt;KnowledgeInfo&gt; infos = namedParameterJdbcTemplate.query(</span><br><span class="line">        sql,</span><br><span class="line">        <span class="keyword">new</span> BeanPropertySqlParameterSource(info),</span><br><span class="line">        <span class="keyword">new</span> BeanPropertyRowMapper&lt;&gt;(KnowledgeInfo.class)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>注意： sql 语句中的参数使用 <code>:参数名</code> 进行占位</p>]]></content>
    
    <summary type="html">
    
      最近维护了一个比较老的项目，操作数据库直接用的 Spring 的 JdbcTemplate.....
    
    </summary>
    
      <category term="Spring" scheme="http://blog.joylau.cn/categories/Spring/"/>
    
    
      <category term="Spring" scheme="http://blog.joylau.cn/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Oracle 里 number 类型对应 JdbcType bean 类型记录</title>
    <link href="http://blog.joylau.cn/2018/07/29/OracleNubmer-JdbcType/"/>
    <id>http://blog.joylau.cn/2018/07/29/OracleNubmer-JdbcType/</id>
    <published>2018-07-29T02:31:44.000Z</published>
    <updated>2018-07-30T01:16:30.911Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><table><thead><tr><th>number长度</th><th>Java类型</th></tr></thead><tbody><tr><td>1~4</td><td>Short</td></tr><tr><td>5~9</td><td>Integer</td></tr><tr><td>10~18</td><td>Long</td></tr><tr><td>18+</td><td>BigDecimal</td></tr></tbody></table><p>须指定number类型的大小。</p>]]></content>
    
    <summary type="html">
    
      Oracle 里 number 类型对应 JdbcType bean 类型记录
    
    </summary>
    
      <category term="Java" scheme="http://blog.joylau.cn/categories/Java/"/>
    
    
      <category term="Java" scheme="http://blog.joylau.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>DenyHosts 清除黑名单 IP 地址</title>
    <link href="http://blog.joylau.cn/2018/07/19/Linux-Cancel-DenyHosts/"/>
    <id>http://blog.joylau.cn/2018/07/19/Linux-Cancel-DenyHosts/</id>
    <published>2018-07-19T02:47:25.000Z</published>
    <updated>2018-07-19T03:32:00.283Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>今天连接远程服务器发生了以下的错误<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh_exchange_identification: <span class="built_in">read</span>: Connection reset</span><br></pre></td></tr></table></figure></p><p>我想应该是我当前的 IP 地址被 DenyHosts 加入了黑名单<br>本来想只要将当前的 ip 地址在黑名单中去掉就可以了<br>没想到事实并不是如此,为此还查资料花费了一点功夫<br>现记录下来</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><ol><li>停用 DenyHosts : <code>systemctl stop denyhosts.service</code></li><li>删除黑名单中当前的ip地址: <code>vim /etc/hosts.deny</code></li><li>进入  <code>/var/lib/denyhosts</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-rw-r--r-- 1 root root    39 2月  16 2015 allowed-hosts</span><br><span class="line">-rw-r--r-- 1 root root 71451 7月  19 10:58 hosts</span><br><span class="line">-rw-r--r-- 1 root root 71270 7月  19 10:58 hosts-restricted</span><br><span class="line">-rw-r--r-- 1 root root 71433 7月  19 10:58 hosts-root</span><br><span class="line">-rw-r--r-- 1 root root 71280 7月  19 10:58 hosts-valid</span><br><span class="line">-rw-r--r-- 1 root root   105 7月  19 10:58 offset</span><br><span class="line">-rw-r--r-- 1 root root     0 7月  19 10:58 suspicious-logins</span><br><span class="line">-rw-r--r-- 1 root root 44731 7月  19 10:58 users-hosts</span><br><span class="line">-rw-r--r-- 1 root root 50925 7月  19 10:58 users-invalid</span><br><span class="line">-rw-r--r-- 1 root root   643 7月  19 10:58 users-valid</span><br></pre></td></tr></table></figure><ol start="4"><li>依次在上面各个文件中移除自己当前的IP地址</li><li>如果要将当前的IP地址添加到白名单中,可以在 /etc/hosts.allow 添加<br>sshd: ip地址<br>allowed-hosts 添加 IP地址</li><li>重启 DenyHosts</li></ol><blockquote><p>注意: 这些文件里有很多被拉入黑名单的IP地址,vim编辑的时候可以在命令行模式下使用 <code>/ip地址</code> 来查找, n 和 N 上下翻动,再在命令行模式下 <code>:noh</code> 取消查找</p></blockquote>]]></content>
    
    <summary type="html">
    
      今天连接远程服务器发生了错误,我想应该是我当前的 IP 地址被 DenyHosts 加入了黑名单,想取消的话还是花了一点的功夫
    
    </summary>
    
      <category term="Linux篇" scheme="http://blog.joylau.cn/categories/Linux%E7%AF%87/"/>
    
    
      <category term="Linux" scheme="http://blog.joylau.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 最佳编程字体 Monaco 的优化显示</title>
    <link href="http://blog.joylau.cn/2018/07/13/Ubuntu-Fonts-Monaco/"/>
    <id>http://blog.joylau.cn/2018/07/13/Ubuntu-Fonts-Monaco/</id>
    <published>2018-07-13T03:03:44.000Z</published>
    <updated>2018-07-18T06:22:55.427Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>自从入了 MBP 后就被其默认的字体显示效果吸引了，在编辑器里写代码更是舒服，于是想着把 Mac 下的字体也移植到 Ubuntu 下，但是显示效果并不是特别的好，尤其是粗体字的显示</p><h2 id="前后对比"><a href="#前后对比" class="headerlink" title="前后对比"></a>前后对比</h2><p>左侧使用前，右侧使用后</p><figure class="half"><img src="http://image.joylau.cn/blog/Monaco1.png" width="50%"><img src="http://image.joylau.cn/blog/Monaco4.png" width="50%"></figure><figure class="half"><img src="http://image.joylau.cn/blog/Monaco2.png" width="50%"><img src="http://image.joylau.cn/blog/Monaco5.png" width="50%"></figure><figure class="half"><img src="http://image.joylau.cn/blog/Monaco3.png" width="50%"><img src="http://image.joylau.cn/blog/Monaco6.png" width="50%"></figure><h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><ol><li>该字体为开源字体，字体地址： <a href="https://github.com/vjpr/monaco-bold" target="_blank" rel="noopener">https://github.com/vjpr/monaco-bold</a></li><li>复制到 <code>/usr/share/fonts</code></li><li><code>fc-cache -fv</code> 生成字体缓存</li></ol><p>我的 1080P 分辨率，我的配置如下：<br><img src="http://image.joylau.cn/blog/Monaco7.png" alt="MonacoB2"></p><h2 id="2018-07-18-14-22-05-更新"><a href="#2018-07-18-14-22-05-更新" class="headerlink" title="2018-07-18 14:22:05 更新"></a>2018-07-18 14:22:05 更新</h2><p>看到一篇关于 Ubuntu 字体渲染问题的文章: 修复 Ubuntu 中文字体渲染  <a href="https://i-meto.com/fix-chinese-font-display/" target="_blank" rel="noopener">https://i-meto.com/fix-chinese-font-display/</a></p>]]></content>
    
    <summary type="html">
    
      自从入了 MBP 后就被其默认的字体显示效果吸引了，在编辑器里写代码更是舒服，于是想着把 Mac 下的字体也移植到 Ubuntu 下，但是显示效果并不是特别的好，尤其是粗体字的显示
    
    </summary>
    
      <category term="Ubuntu篇" scheme="http://blog.joylau.cn/categories/Ubuntu%E7%AF%87/"/>
    
    
      <category term="Ubuntu" scheme="http://blog.joylau.cn/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Docker 使用阿里云个人专属加速器</title>
    <link href="http://blog.joylau.cn/2018/07/12/Docker-AliAccelerator/"/>
    <id>http://blog.joylau.cn/2018/07/12/Docker-AliAccelerator/</id>
    <published>2018-07-12T01:48:38.000Z</published>
    <updated>2018-07-12T01:53:22.650Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><ol start="0"><li>原来阿里云给每个账户都有分配专属的加速器地址</li><li>登录阿里云控制台</li><li>进入容器镜像服务，点击最下方的镜像加速器，会出现个人的专属加速器地址，我的是： <a href="https://0ppztvl0.mirror.aliyuncs.com" target="_blank" rel="noopener">https://0ppztvl0.mirror.aliyuncs.com</a></li><li><p>Docker客户端版本大于1.10.0的用户，创建 <code>/etc/docker/daemon.json</code><br> {<br>   “registry-mirrors”: [“<a href="https://0ppztvl0.mirror.aliyuncs.com&quot;]" target="_blank" rel="noopener">https://0ppztvl0.mirror.aliyuncs.com&quot;]</a><br> }</p><p> sudo systemctl daemon-reload<br> sudo systemctl restart docker</p></li></ol>]]></content>
    
    <summary type="html">
    
      原来阿里云给每个账户都有分配专属的加速器地址
    
    </summary>
    
      <category term="Docker篇" scheme="http://blog.joylau.cn/categories/Docker%E7%AF%87/"/>
    
    
      <category term="Docker" scheme="http://blog.joylau.cn/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>以非 root 用户身份管理 Docker</title>
    <link href="http://blog.joylau.cn/2018/07/05/Docker-Manager-NonRoot/"/>
    <id>http://blog.joylau.cn/2018/07/05/Docker-Manager-NonRoot/</id>
    <published>2018-07-05T08:51:49.000Z</published>
    <updated>2018-07-05T08:59:34.722Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>docker 安装完成后，其他用户只能使用 sudo 访问它。docker 守护进程始终以 root 用户身份运行，这样每次在使用命令时都需要在前面加上sudo,这很不方便。<br>有没有什么方式能够解决？<br>官方文档地址： <a href="https://docs.docker.com/install/linux/linux-postinstall/" target="_blank" rel="noopener">https://docs.docker.com/install/linux/linux-postinstall/</a></p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>docker 守护进程绑定至 Unix 套接字，而不是 TCP 端口。默认情况下，该 Unix 套接字由用户 root 所有，而其他用户只能使用 sudo 访问它。docker 守护进程始终以 root 用户身份运行。</p><p>在使用 docker 命令时，如果您不想使用 sudo，请创建名为 docker 的 Unix 组并向其中添加用户。docker 守护进程启动时，它将使 Unix 套接字的所有权可由 docker 组进行读取/写入。</p><blockquote><blockquote><blockquote><p>警告： docker 组将授予等同于 root 用户的特权。如需有关此操作如何影响系统安全性的详细信息，请参阅 Docker 守护进程攻击面。</p></blockquote></blockquote></blockquote><p>如需创建 docker 组并添加您的用户，请执行下列操作：</p><ol><li>创建 docker 组。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo groupadd docker</span></span><br></pre></td></tr></table></figure><p>向 docker 组中添加您的用户。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo usermod -aG docker <span class="variable">$USER</span></span></span><br></pre></td></tr></table></figure><p>注销并重新登录，以便对您的组成员资格进行重新评估。</p><p>如果在虚拟机上进行测试，可能必须重启此虚拟机才能使更改生效。</p><p>在桌面 Linux 环境（例如，X Windows）中，彻底从您的会话中注销，然后重新登录。</p><p>验证您是否可以在不使用 sudo 的情况下运行 docker 命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker run hello-world</span></span><br></pre></td></tr></table></figure><p>此命令将下载一个测试镜像并在容器中运行它。容器运行时，它将输出一条参考消息并退出。</p><p>经过实测，Ubuntu通过源添加安装最新版 Docker 时，已经自动添加了 docker 组，只需要将 当前用户添加到组里面在重新登录就可以了。</p>]]></content>
    
    <summary type="html">
    
      docker 安装完成后，其他用户只能使用 sudo 访问它。docker 守护进程始终以 root 用户身份运行，这样每次在使用命令时都需要在前面加上sudo,这很不方便。
    
    </summary>
    
      <category term="Docker篇" scheme="http://blog.joylau.cn/categories/Docker%E7%AF%87/"/>
    
    
      <category term="Docker" scheme="http://blog.joylau.cn/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>office 套件的一系列研究记录</title>
    <link href="http://blog.joylau.cn/2018/07/02/OfficeSuiteStudy/"/>
    <id>http://blog.joylau.cn/2018/07/02/OfficeSuiteStudy/</id>
    <published>2018-07-02T09:06:58.000Z</published>
    <updated>2018-07-02T09:08:59.779Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="ElasticSearch-环境准备"><a href="#ElasticSearch-环境准备" class="headerlink" title="ElasticSearch 环境准备"></a>ElasticSearch 环境准备</h2><p>略</p><h2 id="中文分词实现"><a href="#中文分词实现" class="headerlink" title="中文分词实现"></a>中文分词实现</h2><ol><li><p>安装插件 <a href="https://github.com/medcl/elasticsearch-analysis-ik" target="_blank" rel="noopener">https://github.com/medcl/elasticsearch-analysis-ik</a></p></li><li><p>测试分词：</p><p>ik_max_word会将文本做最细粒度的拆分；<br>ik_smart 会做最粗粒度的拆分。</p></li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.10.74:9200/_analyze/ POST</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">  <span class="attr">"text"</span>: <span class="string">"绝地求生是最好玩的游戏"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">和</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"analyzer"</span>: <span class="string">"ik_smart"</span>,</span><br><span class="line">  <span class="attr">"text"</span>: <span class="string">"绝地求生是最好玩的游戏"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">和</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"analyzer"</span>: <span class="string">"standard"</span>,</span><br><span class="line">  <span class="attr">"text"</span>: <span class="string">"绝地求生是最好玩的游戏"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><p>创建索引</p><p> <a href="http://192.168.10.74:9200/ik-index" target="_blank" rel="noopener">http://192.168.10.74:9200/ik-index</a>  PUT<br> 指定使用 ik_max_word 分词器</p></li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"settings"</span> : &#123;</span><br><span class="line">        <span class="attr">"analysis"</span> : &#123;</span><br><span class="line">            <span class="attr">"analyzer"</span> : &#123;</span><br><span class="line">                <span class="attr">"ik"</span> : &#123;</span><br><span class="line">                    <span class="attr">"tokenizer"</span> : <span class="string">"ik_max_word"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"mappings"</span> : &#123;</span><br><span class="line">        <span class="attr">"article"</span> : &#123;</span><br><span class="line">            <span class="attr">"dynamic"</span> : <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">"properties"</span> : &#123;</span><br><span class="line">                <span class="attr">"subject"</span> : &#123;</span><br><span class="line">                    <span class="attr">"type"</span> : <span class="string">"string"</span>,</span><br><span class="line">                    <span class="attr">"analyzer"</span> : <span class="string">"ik_max_word"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">"content"</span> : &#123;</span><br><span class="line">                    <span class="attr">"type"</span> : <span class="string">"string"</span>,</span><br><span class="line">                    <span class="attr">"analyzer"</span> : <span class="string">"ik_max_word"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    </p><ol start="4"><li><p>添加数据<br> 略</p></li><li><p>查询：<br> <a href="http://192.168.10.74:9200/index/_search" target="_blank" rel="noopener">http://192.168.10.74:9200/index/_search</a>    POST</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"query"</span>: &#123;</span><br><span class="line">    <span class="attr">"match"</span>: &#123;</span><br><span class="line">      <span class="attr">"subject"</span>: <span class="string">"合肥送餐冲突"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"highlight"</span>: &#123;</span><br><span class="line">    <span class="attr">"pre_tags"</span>: [<span class="string">"&lt;span style = 'color:red'&gt;"</span>],</span><br><span class="line">    <span class="attr">"post_tags"</span>: [<span class="string">"&lt;/span&gt;"</span>],</span><br><span class="line">    <span class="attr">"fields"</span>: &#123;<span class="attr">"subject"</span>: &#123;&#125;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>热更新<br> IKAnalyzer.cfg.xml</p> <entry key="remote_ext_dict"><a href="http://localhost/hotload.dic" target="_blank" rel="noopener">http://localhost/hotload.dic</a></entry><p> 放入到 静态资源服务器下面</p></li></ol><ol start="7"><li>同义词配置<br> <a href="http://192.168.10.74:9200/synonyms-ik-index" target="_blank" rel="noopener">http://192.168.10.74:9200/synonyms-ik-index</a>  PUT</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"settings"</span>: &#123;</span><br><span class="line"><span class="attr">"analysis"</span>: &#123;</span><br><span class="line">  <span class="attr">"analyzer"</span>: &#123;</span><br><span class="line"><span class="attr">"by_smart"</span>: &#123;</span><br><span class="line">  <span class="attr">"type"</span>: <span class="string">"custom"</span>,</span><br><span class="line">  <span class="attr">"tokenizer"</span>: <span class="string">"ik_smart"</span>,</span><br><span class="line">  <span class="attr">"filter"</span>: [</span><br><span class="line"><span class="string">"by_tfr"</span>,</span><br><span class="line"><span class="string">"by_sfr"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"char_filter"</span>: [</span><br><span class="line"><span class="string">"by_cfr"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"by_max_word"</span>: &#123;</span><br><span class="line">  <span class="attr">"type"</span>: <span class="string">"custom"</span>,</span><br><span class="line">  <span class="attr">"tokenizer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">  <span class="attr">"filter"</span>: [</span><br><span class="line"><span class="string">"by_tfr"</span>,</span><br><span class="line"><span class="string">"by_sfr"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"char_filter"</span>: [</span><br><span class="line"><span class="string">"by_cfr"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"filter"</span>: &#123;</span><br><span class="line"><span class="attr">"by_tfr"</span>: &#123;</span><br><span class="line">  <span class="attr">"type"</span>: <span class="string">"stop"</span>,</span><br><span class="line">  <span class="attr">"stopwords"</span>: [</span><br><span class="line"><span class="string">" "</span></span><br><span class="line">  ]</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"by_sfr"</span>: &#123;</span><br><span class="line">  <span class="attr">"type"</span>: <span class="string">"synonym"</span>,</span><br><span class="line">  <span class="attr">"synonyms_path"</span>: <span class="string">"synonyms.dic"</span></span><br><span class="line">&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"char_filter"</span>: &#123;</span><br><span class="line"><span class="attr">"by_cfr"</span>: &#123;</span><br><span class="line">  <span class="attr">"type"</span>: <span class="string">"mapping"</span>,</span><br><span class="line">  <span class="attr">"mappings"</span>: [</span><br><span class="line"><span class="string">"| =&gt; |"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"mappings"</span>: &#123;</span><br><span class="line"><span class="attr">"article"</span>: &#123;</span><br><span class="line">  <span class="attr">"dynamic"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"properties"</span>: &#123;</span><br><span class="line"><span class="attr">"subject"</span>: &#123;</span><br><span class="line">  <span class="attr">"type"</span>: <span class="string">"string"</span>,</span><br><span class="line">  <span class="attr">"analyzer"</span>: <span class="string">"by_max_word"</span>,</span><br><span class="line">  <span class="attr">"search_analyzer"</span>: <span class="string">"by_smart"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">"content"</span>: &#123;</span><br><span class="line">  <span class="attr">"type"</span>: <span class="string">"string"</span>,</span><br><span class="line">  <span class="attr">"analyzer"</span>: <span class="string">"by_max_word"</span>,</span><br><span class="line">  <span class="attr">"search_analyzer"</span>: <span class="string">"by_smart"</span></span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="8"><li><p>测试同义词</p><p> <a href="http://192.168.10.74:9200/synonyms-ik-index/_analyze" target="_blank" rel="noopener">http://192.168.10.74:9200/synonyms-ik-index/_analyze</a>  POST</p></li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"analyzer"</span>: <span class="string">"by_smart"</span>,</span><br><span class="line">  <span class="attr">"text"</span>: <span class="string">"绝地求生是最好玩的游戏"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="9"><li>查询同义词<br> <a href="http://192.168.10.74:9200/synonyms-ik-index/_search" target="_blank" rel="noopener">http://192.168.10.74:9200/synonyms-ik-index/_search</a>  POST</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"query"</span>: &#123;</span><br><span class="line"><span class="attr">"match"</span>: &#123;</span><br><span class="line">  <span class="attr">"subject"</span>: <span class="string">"吃鸡"</span></span><br><span class="line">&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"highlight"</span>: &#123;</span><br><span class="line"><span class="attr">"pre_tags"</span>: [</span><br><span class="line">  <span class="string">"&lt;span style = 'color:red'&gt;"</span></span><br><span class="line">],</span><br><span class="line"><span class="attr">"post_tags"</span>: [</span><br><span class="line">  <span class="string">"&lt;/span&gt;"</span></span><br><span class="line">],</span><br><span class="line"><span class="attr">"fields"</span>: &#123;</span><br><span class="line">  <span class="attr">"subject"</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数据导入/导出 ： <a href="https://github.com/taskrabbit/elasticsearch-dump" target="_blank" rel="noopener">elasticdump</a> </p><p>github 地址： <a href="https://github.com/taskrabbit/elasticsearch-dump" target="_blank" rel="noopener">https://github.com/taskrabbit/elasticsearch-dump</a></p><h2 id="文件搜索实现"><a href="#文件搜索实现" class="headerlink" title="文件搜索实现"></a>文件搜索实现</h2><ol><li><p>文档地址： <a href="https://www.elastic.co/guide/en/elasticsearch/plugins/5.3/using-ingest-attachment.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/plugins/5.3/using-ingest-attachment.html</a></p></li><li><p>安装插件<br>./bin/elasticsearch-plugin install ingest-attachment</p></li><li><p>创建管道single_attachment<br> <a href="http://192.168.10.74:9200/_ingest/pipeline/single_attachment" target="_blank" rel="noopener">http://192.168.10.74:9200/_ingest/pipeline/single_attachment</a>  PUT</p></li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">"Extract single attachment information"</span>,</span><br><span class="line">  <span class="attr">"processors"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"attachment"</span>: &#123;</span><br><span class="line">        <span class="attr">"field"</span>: <span class="string">"data"</span>,</span><br><span class="line">        <span class="attr">"indexed_chars"</span>: <span class="number">-1</span>,</span><br><span class="line">        <span class="attr">"ignore_missing"</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>创建索引<br> <a href="http://192.168.10.74:9200/file_attachment/" target="_blank" rel="noopener">http://192.168.10.74:9200/file_attachment/</a>  PUT</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"settings"</span>: &#123;</span><br><span class="line">    <span class="attr">"analysis"</span>: &#123;</span><br><span class="line">      <span class="attr">"analyzer"</span>: &#123;</span><br><span class="line">        <span class="attr">"ik"</span>: &#123;</span><br><span class="line">          <span class="attr">"tokenizer"</span>: <span class="string">"ik_max_word"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"mappings"</span>: &#123;</span><br><span class="line">    <span class="attr">"attachment"</span>: &#123;</span><br><span class="line">      <span class="attr">"properties"</span>: &#123;</span><br><span class="line">        <span class="attr">"filename"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">          <span class="attr">"search_analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">          <span class="attr">"analyzer"</span>: <span class="string">"ik_max_word"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"data"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"text"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"time"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"string"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"attachment.content"</span>: &#123;</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">          <span class="attr">"search_analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">          <span class="attr">"analyzer"</span>: <span class="string">"ik_max_word"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>添加数据<br> <a href="http://192.168.10.74:9200/file_attachment/attachment/1?pipeline=single_attachment&amp;refresh=true&amp;pretty=1/" target="_blank" rel="noopener">http://192.168.10.74:9200/file_attachment/attachment/1?pipeline=single_attachment&amp;refresh=true&amp;pretty=1/</a>  POST</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"filename"</span>: <span class="string">"测试文档.txt"</span>,</span><br><span class="line">  <span class="attr">"time"</span>: <span class="string">"2018-06-13 15:14:00"</span>,</span><br><span class="line">  <span class="attr">"data"</span>: <span class="string">"6L+Z5piv56ys5LiA5Liq55So5LqO5rWL6K+V5paH5pys6ZmE5Lu255qE5YaF5a6577yb5paH5Lu25qC85byP5Li6dHh0LOaWh+acrOS4uuS4reaWhw=="</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>文档查询<br> <a href="http://192.168.10.74:9200/file_attachment/_search" target="_blank" rel="noopener">http://192.168.10.74:9200/file_attachment/_search</a> POST</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"query"</span>: &#123;</span><br><span class="line">    <span class="attr">"match"</span>: &#123;</span><br><span class="line">      <span class="attr">"attachment.content"</span>: <span class="string">"测试"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"highlight"</span>: &#123;</span><br><span class="line">    <span class="attr">"pre_tags"</span>: [</span><br><span class="line">      <span class="string">"&lt;span style = 'color:red'&gt;"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"post_tags"</span>: [</span><br><span class="line">      <span class="string">"&lt;/span&gt;"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"fields"</span>: &#123;</span><br><span class="line">      <span class="attr">"attachment.content"</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意： 使用 nginx 的静态资源目录作为 文件的存放，那么在下载文件时，想要 txt ,html ,pdf 等文件直接被下载而不被浏览器打开时，可在 nginx 的配置文件加入以下配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$request_filename</span> ~* ^.*?.(txt|doc|pdf|rar|gz|zip|docx|exe|xlsx|ppt|pptx|jpg|png|html|xml)$)&#123;</span><br><span class="line">                        add_header Content-Disposition attachment; </span><br><span class="line">                        add_header Content-Type <span class="string">'APPLICATION/OCTET-STREAM'</span>;                 </span><br><span class="line">                 &#125; </span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    root           html;</span></span><br><span class="line">        <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">        <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">        <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">        <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># deny access to .htaccess files, if Apache's document root</span></span><br><span class="line">        <span class="comment"># concurs with nginx's one</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">        <span class="comment">#    deny  all;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>重点是 :<br>if ($request_filename ~<em> ^.</em>?.(txt|doc|pdf|rar|gz|zip|docx|exe|xlsx|ppt|pptx|jpg|png|html|xml)$){<br>      add_header Content-Disposition attachment;<br>      add_header Content-Type ‘APPLICATION/OCTET-STREAM’;<br>   }<br>或者也可以这样处理：<br>if ($args ~* “target=download”) {<br>      add_header Content-Disposition ‘attachment’;<br>      add_header Content-Type ‘APPLICATION/OCTET-STREAM’;<br> }</p><p>这样的话只要在 get请求加上 target=download 参数就可以下载了。</p><h2 id="Office-套件研究"><a href="#Office-套件研究" class="headerlink" title="Office 套件研究"></a>Office 套件研究</h2><h3 id="OpenOffice-服务搭建"><a href="#OpenOffice-服务搭建" class="headerlink" title="OpenOffice 服务搭建"></a>OpenOffice 服务搭建</h3><h4 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h4><ol><li><p>下载 rpm 包 ： 官网： <a href="https://www.openoffice.org/download/" target="_blank" rel="noopener">https://www.openoffice.org/download/</a></p></li><li><p>解压，进入 /zh-CN/RPMS/ ， 安装 rpm 包： <code>rpm -ivh *.rpm</code></p></li><li><p>安装完成后，生成 desktop-integration 目录，进入，因为我的系统是 centos 的 ，我选择安装 <code>rpm -ivh openoffice4.1.5-redhat-menus-4.1.5-9789.noarch.rpm</code></p></li><li><p>安装完成后，目录在 /opt/openoffice4 下<br> 启动： <code>/opt/openoffice4/program/soffice -headless -accept=&quot;socket,host=0.0.0.0,port=8100;urp;&quot; -nofirststartwizard &amp;</code></p></li></ol><h4 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h4><ol><li><p>libXext.so.6: cannot open shared object file: No such file or directory<br> 解决 ： <code>yum install libXext.x86_64</code></p></li><li><p>no suitable windowing system found, exiting.<br> 解决： <code>yum groupinstall &quot;X Window System&quot;</code></p></li></ol><p>之后再启动，查看监听端口 <code>netstat -lnp |grep 8100</code><br>已经可以了。</p><h4 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h4><p>对很多中文字体的支持并不是很好，很多中文字符及特殊字符无法显示</p><h3 id="LibreOffice-服务搭建"><a href="#LibreOffice-服务搭建" class="headerlink" title="LibreOffice 服务搭建"></a>LibreOffice 服务搭建</h3><h4 id="安装步骤-1"><a href="#安装步骤-1" class="headerlink" title="安装步骤"></a>安装步骤</h4><ol><li><p>下载 Linux系统下的 rpm 安装包</p></li><li><p>将安装包解压缩到目录下</p></li><li><p>安装<br>$ sudo yum install ./RPMS/<em>.rpm  /</em> 安装主安装程序的所有rpm包 <em>/<br>$ sudo yum install ./RPMS/</em>.rpm  /<em> 安装中文语言包中的所有rpm包 </em>/<br>$ sudo yum install ./RPMS/<em>.rpm  /</em> 安装中文离线帮助文件中的所有rpm包 */</p></li><li><p>卸载<br> $ sudo apt-get remove –purge libreoffice6.x-<em>  /</em> 移除所有类似libreoffice6.x-<em>的包。–purge表示卸载的同时移除所有相关的配置文件 </em>/</p></li></ol><h4 id="使用总结"><a href="#使用总结" class="headerlink" title="使用总结"></a>使用总结</h4><p>LibreOffice 的安装表示没有像 OpenOffice 那样遇到很多问题，且对中文字符的支持较为友好，官网也提供了相应的中文字体下载。</p><h3 id="Spring-Boot-连接并调用-Office-服务"><a href="#Spring-Boot-连接并调用-Office-服务" class="headerlink" title="Spring Boot 连接并调用 Office 服务"></a>Spring Boot 连接并调用 Office 服务</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">preview</span><span class="params">(@PathVariable String fileName)</span></span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Resource resource = <span class="keyword">new</span> UrlResource(remoteAddr + fileName);</span><br><span class="line">        <span class="keyword">if</span> (FilenameUtils.getExtension(resource.getFilename()).equalsIgnoreCase(<span class="string">"pdf"</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"Is the PDF file"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> (ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream()) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">final</span> DocumentFormat targetFormat =</span><br><span class="line">                    DefaultDocumentFormatRegistry.getFormatByExtension(<span class="string">"pdf"</span>);</span><br><span class="line">            converter</span><br><span class="line">                    .convert(resource.getInputStream())</span><br><span class="line">                    .as(</span><br><span class="line">                            DefaultDocumentFormatRegistry.getFormatByExtension(</span><br><span class="line">                                    FilenameUtils.getExtension(resource.getFilename())))</span><br><span class="line">                    .to(baos)</span><br><span class="line">                    .as(targetFormat)</span><br><span class="line">                    .execute();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">final</span> HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">            headers.setContentType(MediaType.parseMediaType(targetFormat.getMediaType()));</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ResponseEntity&lt;&gt;(baos.toByteArray(), headers, HttpStatus.OK);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (OfficeException | IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"convert error: "</span> + e.getMessage();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"File does not exist;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Collabora-Office-服务搭建"><a href="#Collabora-Office-服务搭建" class="headerlink" title="Collabora Office 服务搭建"></a>Collabora Office 服务搭建</h3><p>官方地址： <a href="https://www.collaboraoffice.com/solutions/collabora-office/" target="_blank" rel="noopener">https://www.collaboraoffice.com/solutions/collabora-office/</a></p><h4 id="Collabora-CODE-服务搭建"><a href="#Collabora-CODE-服务搭建" class="headerlink" title="Collabora CODE 服务搭建"></a>Collabora CODE 服务搭建</h4><p>官方建议采用docker来安装</p><h5 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull collabora/code</span><br><span class="line">$ docker run -t -d -p 127.0.0.1:9980:9980 -e <span class="string">"domain=&lt;your-dot-escaped-domain&gt;"</span> \</span><br><span class="line">        -e <span class="string">"username=admin"</span> -e <span class="string">"password=S3cRet"</span> --restart always --<span class="built_in">cap</span>-add MKNOD collabora/code</span><br></pre></td></tr></table></figure><h5 id="Linux-packages"><a href="#Linux-packages" class="headerlink" title="Linux packages"></a>Linux packages</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> import the signing key</span></span><br><span class="line">wget https://www.collaboraoffice.com/repos/CollaboraOnline/CODE-centos7/repodata/repomd.xml.key &amp;&amp; rpm --import repomd.xml.key</span><br><span class="line"><span class="meta">#</span><span class="bash"> add the repository URL to yum</span></span><br><span class="line">yum-config-manager --add-repo https://www.collaboraoffice.com/repos/CollaboraOnline/CODE-centos7</span><br><span class="line"><span class="meta">#</span><span class="bash"> perform the installation</span></span><br><span class="line">yum install loolwsd CODE-brand</span><br></pre></td></tr></table></figure><h3 id="Office-套件文档在线协作"><a href="#Office-套件文档在线协作" class="headerlink" title="Office 套件文档在线协作"></a>Office 套件文档在线协作</h3><p> 需要域名和SSL证书，尚未实际研究</p>]]></content>
    
    <summary type="html">
    
      包含 es 的中文分词检索，附件检索，office 套件在线预览等等
    
    </summary>
    
      <category term="大数据篇" scheme="http://blog.joylau.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AF%87/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.joylau.cn/tags/Elasticsearch/"/>
    
      <category term="OpenOffice" scheme="http://blog.joylau.cn/tags/OpenOffice/"/>
    
      <category term="LibreOffice" scheme="http://blog.joylau.cn/tags/LibreOffice/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 自用配置记录</title>
    <link href="http://blog.joylau.cn/2018/06/28/Ubuntu-SystemConfig/"/>
    <id>http://blog.joylau.cn/2018/06/28/Ubuntu-SystemConfig/</id>
    <published>2018-06-28T07:16:22.000Z</published>
    <updated>2018-07-19T01:14:51.525Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="安装完系统后的一些配置"><a href="#安装完系统后的一些配置" class="headerlink" title="安装完系统后的一些配置"></a>安装完系统后的一些配置</h2><ol><li><p>关闭并禁用 swap 分区： sudo swapoff 并且 sudo vim /etc/fstab 注释掉 swap 那行</p></li><li><p>开启点击图标最小化： gsettings set org.compiz.unityshell:/org/compiz/profiles/unity/plugins/unityshell/ launcher-minimize-window true</p></li><li><p>开机开启小键盘： sudo apt-get install numlockx 然后 sudo vim /usr/share/lightdm/lightdm.conf.d/50-unity-greeter.conf 在最后添加：greeter-setup-script=/usr/bin/numlockx on</p></li><li><p>用久显示隐藏文件夹： Edit -&gt; Preferences -&gt; Views 勾选 Show hidden and backup files</p></li><li><p>禁用客人会话： <a href="https://blog.csdn.net/thuyx/article/details/78503870" target="_blank" rel="noopener">https://blog.csdn.net/thuyx/article/details/78503870</a></p></li><li><p>jdk 10 的配置？？<br> 分别下载 jdk10 和 jre 10 解压缩到 /usr/java目录下<br> 配置如下环境变量</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#set java environment</span></span><br><span class="line">JAVA_HOME=/usr/java/jdk-10</span><br><span class="line">JRE_HOME=/usr/java/jre-10</span><br><span class="line">CLASS_PATH=.:<span class="variable">$JAVA_HOME</span>/lib:<span class="variable">$JRE_HOME</span>/lib</span><br><span class="line"></span><br><span class="line">MAVEN_HOME=/usr/maven/apache-maven-3.5.3</span><br><span class="line">NODE_HOME=/usr/nodejs/node-v8.11.2-linux-x64</span><br><span class="line"></span><br><span class="line">PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$MAVEN_HOME</span>/bin:<span class="variable">$&#123;NODE_HOME&#125;</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME JRE_HOME CLASS_PATH MAVEN_HOME NODE_HOME PATH</span><br></pre></td></tr></table></figure><ol start="7"><li><p>安装中文字体文泉译：sudo apt-get install fonts-wqy-microhei</p></li><li><p>防火墙配置<br> sudo ufw enable</p><p> sudo ufw default deny</p><p> 运行以上两条命令后，开启了防火墙，并在系统启动时自动开启。关闭所有外部对本机的访问，但本机访问外部正常</p><p> sudo ufw disable 关闭防火墙</p></li><li><p>鼠标移动速度调整<br> xset m N<br> 其中，N是速度，估计取值为0-10<br> 恢复默认 xset m default</p></li></ol><h2 id="apt-get-命令的记录"><a href="#apt-get-命令的记录" class="headerlink" title="apt-get 命令的记录"></a>apt-get 命令的记录</h2><ol><li>卸载软件： sudo apt-get purge docker-ce</li><li>查看软件版本： apt-cache madison docker-ce </li></ol><h2 id="2018年07月19日09-10-55-更新"><a href="#2018年07月19日09-10-55-更新" class="headerlink" title="2018年07月19日09:10:55 更新"></a>2018年07月19日09:10:55 更新</h2><p>indicator-sysmonitor 显示网速时,在状态栏会左右移动,解决方法是:<br>修改源代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi  /usr/lib/indicator-sysmonitor/sensors.py</span><br></pre></td></tr></table></figure><p>打开后，修改第29行的B_UNITS:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B_UNITS = [<span class="string">'MB'</span>, <span class="string">'GB'</span>, <span class="string">'TB'</span>]</span><br></pre></td></tr></table></figure><p>接着修改下面的bytes_to_human函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bytes_to_human</span><span class="params">(bytes_)</span>:</span>                 </span><br><span class="line">unit = <span class="number">0</span>    </span><br><span class="line">bytes_ = bytes_ / <span class="number">1024</span> / <span class="number">1024</span>    </span><br><span class="line"><span class="keyword">while</span> bytes_ &gt; <span class="number">1024</span>:    </span><br><span class="line">    unit += <span class="number">1</span>    </span><br><span class="line">    bytes_ /= <span class="number">1024</span>    </span><br><span class="line"><span class="comment"># 做成00.00MB/s的形式，避免变化     </span></span><br><span class="line"><span class="keyword">return</span> <span class="string">'&#123;:0&gt;5.2f&#125;&#123;:0&gt;2&#125;'</span>.format(bytes_, B_UNITS[unit])</span><br></pre></td></tr></table></figure><p>然后保存退出，重启就可以了。</p>]]></content>
    
    <summary type="html">
    
      安装完 Ubuntu 后自定义的一些配置记录
    
    </summary>
    
      <category term="Ubuntu篇" scheme="http://blog.joylau.cn/categories/Ubuntu%E7%AF%87/"/>
    
    
      <category term="Ubuntu" scheme="http://blog.joylau.cn/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ IDEA 自用配置记录</title>
    <link href="http://blog.joylau.cn/2018/06/25/IntelliJIDEA-MyConfigs/"/>
    <id>http://blog.joylau.cn/2018/06/25/IntelliJIDEA-MyConfigs/</id>
    <published>2018-06-25T08:57:59.000Z</published>
    <updated>2018-10-26T03:24:04.330Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>我自己在多个系统中都有使用 IDEA， IDEA登录账户的话是支持配置同步的。但是由于每个系统的环境变量配置（JAVA_HOME,MAVEN_HOME,GIT,NODE,…..），文件目录结构，字体，快捷键等等不同,导致一套配置并不能很好的通用，于是我在此记录下我平时的一些配置，忘了的话翻出来看看，马上就能达到我要的配置</p><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><ol><li>UI 菜单字体</li><li>编辑器字体 注意：在 Ubuntu 系统下中文字体显得很难看，这时候设置支持中文的第二字体</li><li>控制台字体</li></ol><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><p>插件我使用的是 IDEA 的自动同步功能，在一台客户端下载过的插件都会自动同步，这个不需担心</p><h3 id="编辑器变量颜色"><a href="#编辑器变量颜色" class="headerlink" title="编辑器变量颜色"></a>编辑器变量颜色</h3><p>进入设置： File | Settings | Editor | Color Scheme | Language Defaults， 开启 Semantic highlighting 功能</p><h3 id="代码改动后目录颜色"><a href="#代码改动后目录颜色" class="headerlink" title="代码改动后目录颜色"></a>代码改动后目录颜色</h3><p>File | Settings | Version Control， 开启 show directoris with ….</p><h3 id="自动导包优化"><a href="#自动导包优化" class="headerlink" title="自动导包优化"></a>自动导包优化</h3><p>File | Settings | Editor | General | Auto Import， 勾选 fly</p><h3 id="设置-alt"><a href="#设置-alt" class="headerlink" title="设置 alt + /"></a>设置 alt + /</h3><p>File | Settings | Keymap | main menu | code | completion | basic 设为 alt + /<br>同时 取消 cyclic expand word 的 快捷键</p><h3 id="自动提示忽略大小写"><a href="#自动提示忽略大小写" class="headerlink" title="自动提示忽略大小写"></a>自动提示忽略大小写</h3><p>File | Settings | Editor | General | Code Completion，将 case sensitive completion 修改为NONE</p><h3 id="编辑器设置多Tab页"><a href="#编辑器设置多Tab页" class="headerlink" title="编辑器设置多Tab页"></a>编辑器设置多Tab页</h3><p>File | Settings | Editor | General | Editor Tabs 去掉 show tabs in single row</p><h3 id="提示-serialVersionUID-的生成"><a href="#提示-serialVersionUID-的生成" class="headerlink" title="提示 serialVersionUID 的生成"></a>提示 serialVersionUID 的生成</h3><p>File | Settings | Editor | Inspections | Serialization issues | Serializable class without ’serialVersionUID’ </p><h3 id="显示内存占用"><a href="#显示内存占用" class="headerlink" title="显示内存占用"></a>显示内存占用</h3><p>Preferences | Appearance &amp; Behavior | Appearance | Show memory indicator</p><h3 id="idea64-vmoptions-配置"><a href="#idea64-vmoptions-配置" class="headerlink" title="idea64.vmoptions 配置"></a>idea64.vmoptions 配置</h3><p>16G 以上的机器：<br>    -Xms512m<br>    -Xmx1500m<br>    -XX:ReservedCodeCacheSize=500m<br>    -XX:SoftRefLRUPolicyMSPerMB=100<br>添加编码 ：<br>    -Dfile.encoding=UTF-8</p><h3 id="idea-properties-配置"><a href="#idea-properties-配置" class="headerlink" title="idea.properties 配置"></a>idea.properties 配置</h3><p>控制台打印日志的行数：默认为 1024，不限制的话：<br>    idea.cycle.buffer.size=disabled</p><h3 id="Mac-OS-下-IDEA-文件位置"><a href="#Mac-OS-下-IDEA-文件位置" class="headerlink" title="Mac OS 下 IDEA 文件位置"></a>Mac OS 下 IDEA 文件位置</h3><p>配置文件位置: /Users/joylau/Library/Preferences/IntelliJIdea201x.x<br>索引文件位置: /Users/joylau/Library/Caches/IntelliJIdea201x.x</p>]]></content>
    
    <summary type="html">
    
      我自己在多个系统中都有使用 IDEA， IDEA登录账户的话是支持配置同步的。但是由于每个系统的环境变量配置，字体，快捷键等等不同,导致一套配置并不能很好的通用，于是我在此记录下我平时的一些配置，忘了的话翻出来看看，马上就能达到我要的配置
    
    </summary>
    
      <category term="IntelliJ IDEA篇" scheme="http://blog.joylau.cn/categories/IntelliJ-IDEA%E7%AF%87/"/>
    
    
      <category term="IntelliJ IDEA" scheme="http://blog.joylau.cn/tags/IntelliJ-IDEA/"/>
    
  </entry>
  
  <entry>
    <title>Linux 安装 OpenOffice 服务小记</title>
    <link href="http://blog.joylau.cn/2018/06/22/Linux-OpenOffice/"/>
    <id>http://blog.joylau.cn/2018/06/22/Linux-OpenOffice/</id>
    <published>2018-06-22T03:53:49.000Z</published>
    <updated>2018-06-25T08:53:48.429Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><ol><li><p>下载 rpm 包 ： 官网： <a href="https://www.openoffice.org/download/" target="_blank" rel="noopener">https://www.openoffice.org/download/</a></p></li><li><p>解压，进入 /zh-CN/RPMS/ ， 安装 rpm 包： <code>rpm -ivh *.rpm</code></p></li><li><p>安装完成后，生成 desktop-integration 目录，进入，因为我的系统是 centos 的 ，我选择安装 <code>rpm -ivh openoffice4.1.5-redhat-menus-4.1.5-9789.noarch.rpm</code></p></li><li><p>安装完成后，目录在 /opt/openoffice4 下<br> 启动： <code>/opt/openoffice4/program/soffice -headless -accept=&quot;socket,host=0.0.0.0,port=8100;urp;&quot; -nofirststartwizard &amp;</code></p></li></ol><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><ol><li><p>libXext.so.6: cannot open shared object file: No such file or directory<br> 解决 ： <code>yum install libXext.x86_64</code></p></li><li><p>no suitable windowing system found, exiting.<br> 解决： <code>yum groupinstall &quot;X Window System&quot;</code></p></li></ol><p>之后再启动，查看监听端口 <code>netstat -lnp |grep 8100</code><br>已经可以了。</p>]]></content>
    
    <summary type="html">
    
      最近在研究 office 套件在线预览的功能 ，在此记下安装过程和出错的解决方式
    
    </summary>
    
      <category term="Linux篇" scheme="http://blog.joylau.cn/categories/Linux%E7%AF%87/"/>
    
    
      <category term="linux" scheme="http://blog.joylau.cn/tags/linux/"/>
    
      <category term="openoffice" scheme="http://blog.joylau.cn/tags/openoffice/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch 文档文本内容搜索</title>
    <link href="http://blog.joylau.cn/2018/06/21/Elasticsearch-ingest-attachment/"/>
    <id>http://blog.joylau.cn/2018/06/21/Elasticsearch-ingest-attachment/</id>
    <published>2018-06-21T08:53:49.000Z</published>
    <updated>2018-06-25T08:53:48.429Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p><img src="http://image.joylau.cn/blog/attachment.gif" alt="IdiomsDictionary"></p><p><a href="https://github.com/JoyLau/es-doc-node" target="_blank" rel="noopener">https://github.com/JoyLau/es-doc-node</a></p>]]></content>
    
    <summary type="html">
    
      整合之前的 IK 分词插件 + 文件搜索（TXT,WORD,EXCEL,PPT,PDF,HTML）
    
    </summary>
    
      <category term="大数据篇" scheme="http://blog.joylau.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AF%87/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.joylau.cn/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>React 项目使用 IDEA 进行调试</title>
    <link href="http://blog.joylau.cn/2018/06/20/React-DebugWithIDEA/"/>
    <id>http://blog.joylau.cn/2018/06/20/React-DebugWithIDEA/</id>
    <published>2018-06-19T17:02:35.000Z</published>
    <updated>2018-06-25T08:53:48.429Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><ol><li><p>You would need to have WebStorm and JetBrains IDE Support Chrome extension installed.<br> 需要安装 JetBrains IDE Support 的 chrome 插件</p></li><li><p>In the WebStorm menu Run select Edit Configurations…. Then click + and select JavaScript Debug. Paste <a href="http://localhost:3000" target="_blank" rel="noopener">http://localhost:3000</a> into the URL field and save the configuration.<br> 在 Edit Configurations 选项里添加一个 JavaScript Debug 的项目，并且地址写上 <a href="http://localhost:3000" target="_blank" rel="noopener">http://localhost:3000</a></p></li></ol><blockquote><blockquote><p>Note: the URL may be different if you’ve made adjustments via the HOST or PORT environment variables.<br>    地址根据配置环境而异</p></blockquote></blockquote><ol start="3"><li>Start your app by running npm start, then press ^D on macOS or F9 on Windows and Linux or click the green debug icon to start debugging in WebStorm.<br> 运行项目，点击 debug 按钮调试项目，注意在页面上开启插件的调试功能，此后就能像调式Java 一样调试 js 代码了。</li></ol>]]></content>
    
    <summary type="html">
    
      react 项目使用 IDEA 进行调试
    
    </summary>
    
      <category term="React篇" scheme="http://blog.joylau.cn/categories/React%E7%AF%87/"/>
    
    
      <category term="nodejs" scheme="http://blog.joylau.cn/tags/nodejs/"/>
    
      <category term="react" scheme="http://blog.joylau.cn/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>MacOS 修改 mac 地址</title>
    <link href="http://blog.joylau.cn/2018/06/14/MacOS-ChangeMacAddr/"/>
    <id>http://blog.joylau.cn/2018/06/14/MacOS-ChangeMacAddr/</id>
    <published>2018-06-14T01:03:16.000Z</published>
    <updated>2018-06-25T08:53:48.429Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>公司的网络接入是需要 ip 地址和 mac 地址绑定在一起的，笔记接入的 WiFi 没绑定就无法上网，公司那么多电脑不用，就使用他们已经绑定好的 静态 IP 地址和 mac 地址来上网</p><ol><li>随机生成一个全新的MAC网卡地址</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//'</span><br></pre></td></tr></table></figure><ol start="2"><li>断开airport无线网卡连接</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z</span><br></pre></td></tr></table></figure><ol start="3"><li>修改 mac 地址</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ifconfig en0 ether xx:xx:xx:xx:xx:xx</span><br></pre></td></tr></table></figure><p>xx:xx:xx:xx:xx:xx ＝输入你想要修改成的MAC地址来代替。</p><p>en0 ＝ 输入你想要修改成的网卡代替。一般 en0 就为无线网卡</p><ol start="4"><li>重新打开网络</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">networksetup -detectnewhardware</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      公司的网络接入是需要 ip 地址和 mac 地址绑定在一起的，笔记接入的 WiFi 没绑定就无法上网，公司那么多电脑不用，就使用他们已经绑定好的 静态 IP 地址和 mac 地址来上网
    
    </summary>
    
      <category term="MacOS篇" scheme="http://blog.joylau.cn/categories/MacOS%E7%AF%87/"/>
    
    
      <category term="MacOS" scheme="http://blog.joylau.cn/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch 分词插件的使用及 demo</title>
    <link href="http://blog.joylau.cn/2018/06/12/Elasticsearch-Ik/"/>
    <id>http://blog.joylau.cn/2018/06/12/Elasticsearch-Ik/</id>
    <published>2018-06-12T02:53:54.000Z</published>
    <updated>2018-06-25T08:53:48.429Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p><img src="http://image.joylau.cn/blog/idioms.gif" alt="IdiomsDictionary"></p><p><a href="https://github.com/JoyLau/es-doc-node" target="_blank" rel="noopener">https://github.com/JoyLau/es-doc-node</a></p>]]></content>
    
    <summary type="html">
    
      记录下 ik 分词插件的使用,及使用 react + antd 做了一个小 demo
    
    </summary>
    
      <category term="大数据篇" scheme="http://blog.joylau.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AF%87/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.joylau.cn/tags/Elasticsearch/"/>
    
  </entry>
  
</feed>
