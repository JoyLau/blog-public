<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JoyLau&#39;s Blog | JoyLau</title>
  
  <subtitle>刘法的技术学习与思考</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.joylau.cn/"/>
  <updated>2020-08-07T08:06:49.003Z</updated>
  <id>http://blog.joylau.cn/</id>
  
  <author>
    <name>JoyLau</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ubuntu --- 调整状态栏托盘图标的顺序</title>
    <link href="http://blog.joylau.cn/2020/08/08/Ubuntu-Tray-Icon-Order/"/>
    <id>http://blog.joylau.cn/2020/08/08/Ubuntu-Tray-Icon-Order/</id>
    <published>2020-08-08T07:54:55.000Z</published>
    <updated>2020-08-07T08:06:49.003Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>继上一篇文章 【indicator-sysmonitor 状态栏监控工具开启对磁盘读写的监控】，这里我想让监控的数据放到状态栏的最左侧， 可发现事情并不简单。。。</p><p>因为 Ubuntu 下并不像 Mac 下按住 option 键可随意拖动</p><h3 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h3><pre><code class="bash">    sudo vim /usr/share/indicator-application/ordering-override.keyfile</code></pre><p>修改顺序， 数字越小越靠左</p><p>修改完毕使用 <code>restart unity-panel-service</code> 重启生效</p><p>但发现修改完后顺序并没有改变</p><p>这个时候需要结合状态栏实际已有的托盘图标来操作顺序</p><p>获取状态栏图标的脚本：</p><pre><code class="bash">    #!/bin/sh    dbus-send --type=method_call --print-reply --dest=com.canonical.indicator.application /com/canonical/indicator/application/service com.canonical.indicator.application.service.GetApplications | grep &quot;string&quot; &gt; /tmp/indicators.txt    c=$(wc -l &lt; /tmp/indicators.txt)    i=$((c / 8))    s=6    while [ &quot;$i&quot; != &quot;0&quot; ]; do        echo $(awk -v n=$s &#39;/string/ &amp;&amp; !--n {getline; print; exit}&#39; /tmp/indicators.txt)        s=$(( $s + 8 ))        i=$(( $i - 1 ))    done</code></pre><p>执行这个脚本获取图标的程序名称， 再修改 <code>ordering-override.keyfile</code> 的顺序， <code>restart unity-panel-service</code> 重启生效</p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><p>按照上述方式操作后， 顺序得以改变， 但是如果后续打开了新的程序有托盘图标， 则新程序的图标会在最左边</p>]]></content>
    
    <summary type="html">
    
      继上一篇文章 【indicator-sysmonitor 状态栏监控工具开启对磁盘读写的监控】，这里我想让监控的数据放到状态栏的最左侧， 可发现事情并不简单
    
    </summary>
    
    
      <category term="Ubuntu篇" scheme="http://blog.joylau.cn/categories/Ubuntu%E7%AF%87/"/>
    
    
      <category term="Ubuntu" scheme="http://blog.joylau.cn/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu --- indicator-sysmonitor 状态栏监控工具开启对磁盘读写的监控</title>
    <link href="http://blog.joylau.cn/2020/08/07/Ubuntu-Disk-Stat/"/>
    <id>http://blog.joylau.cn/2020/08/07/Ubuntu-Disk-Stat/</id>
    <published>2020-08-07T07:06:08.000Z</published>
    <updated>2020-08-07T08:06:49.003Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>indicator-sysmonitor 默认的模式可以监控 CPU 使用率， 内存使用， 网络 I/O 等， 但是却缺少了很关键的对当前磁盘 I/O 的监控，于是我就想着把他给加上去</p><h3 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h3><p>indicator-sysmonitor 可以新建传感器，可以自定义命令来显示输出， 于是我想着使用 shell 命令获取当前磁盘的 I/O 在输出即可</p><h3 id="dstat-方式"><a href="#dstat-方式" class="headerlink" title="dstat 方式"></a>dstat 方式</h3><ol><li>使用 <code>dstat</code> 命令， 需要机器上事先安装 <code>dstat</code> </li></ol><pre><code class="shell">    dstat  --disk</code></pre><p>该命令可以监控磁盘使用情况</p><p>我在稍对结果做下过滤的优化， 使用下面的命令</p><pre><code class="shell">    dstat  --disk 1 1 | sed -n &#39;4p&#39; | awk &#39;{printf &quot;r: &quot;}{printf $1}{printf &quot;   w: &quot;}{printf $2}&#39;</code></pre><p>上述的命令的解释为 1s 输出一次， 一次输出一行， 取第四行， 取第一列和第二列，在加上读写的标识 <code>r:</code> 和 <code>w:</code> 的前缀</p><p>输出的结果为：</p><pre><code class="text">    r: 0   w: 6244kj</code></pre><p>在 indicator-sysmonitor 里新建一项， 复制上述命令，效果如下</p><p><img src="http://image.joylau.cn/blog/stat-disk_001.png" alt="disk-dstat"></p><h3 id="iotop"><a href="#iotop" class="headerlink" title="iotop"></a>iotop</h3><ol><li>使用 <code>iotop</code> 命令， 需要机器上事先安装 <code>iotop</code> </li></ol><pre><code class="shell">    sudo iotop</code></pre><p>在美化下输出结果：</p><pre><code class="bash">    sudo iotop -o -b -n 1 | sed -n &#39;2p&#39; | awk &#39;{printf &quot;r: &quot;}{printf  $4 $5}{printf &quot;  w: &quot;}{printf $10 $11}&#39;</code></pre><p>命令的意思同上</p><p>输出的结果为：</p><pre><code class="text">    r: 0.00B/s  w: 0.00B/s</code></pre><p>同上操作， 命令更换下，效果如下：</p><p><img src="http://image.joylau.cn/blog/stat-disk_002.png" alt="disk-iotop"></p><h3 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h3><ol><li>输出单位不一样，第一种方式单位只有 k,m 这样的， 第二种是 B/s, KB/s, MB/s 这样的， 不过第一种方式的单位也可以手动给补全上</li><li>第一种方式 <code>dstat</code> 命令不需要 root 权限即可执行， 第二种方式 <code>iotop</code> 命令需要 root 权限即需要加 <code>sudo</code></li></ol><p>使用 sudo 的常用方式为：</p><pre><code class="bash">    echo &quot;你的 root 的密码&quot; | sudo iotop ....</code></pre><p>但是这样的方式在终端执行可以输出结果， 在 indicator-sysmonitor 执行却不能输出结果。。。。。</p><p>于是需要解决这个问题， 即使用普通用户执行 <code>iotop</code> 命令时不需要输入密码</p><p>这里我的解决方案如下：</p><pre><code class="bash">    sudo visudo    ## 添加下面几行    User_Alias NET_USERS = joylau    Cmnd_Alias SYS_STATUS = /usr/sbin/iotop # 多个命令逗号隔开    NET_USERS ALL=(root)   NOPASSWD:SYS_STATUS</code></pre><p><code>Ctrl + O</code> 保存后，普通用户 joylau 使用 <code>sudo iotop</code> 就不需要输入密码了， 也就实现了第二种方式的效果了</p><ol start="3"><li>性能对比： 实测第一种方式的性能（CPU使用平均在 2%）要稍好于第二种（CPU使用平均在 5%）</li></ol>]]></content>
    
    <summary type="html">
    
      indicator-sysmonitor 默认的模式可以监控 CPU 使用率， 内存使用， 网络 I/O 等， 但是却缺少了很关键的对当前磁盘 I/O 的监控，于是我就想着把他给加上去
    
    </summary>
    
    
      <category term="Ubuntu篇" scheme="http://blog.joylau.cn/categories/Ubuntu%E7%AF%87/"/>
    
    
      <category term="Ubuntu" scheme="http://blog.joylau.cn/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>MacBook Pro 使用绿联 TypeC 网卡关闭笔记本盖子时导致局域网网络不可用的问题解决</title>
    <link href="http://blog.joylau.cn/2020/08/04/MacBookPro-uGreen-TypeC-Hub/"/>
    <id>http://blog.joylau.cn/2020/08/04/MacBookPro-uGreen-TypeC-Hub/</id>
    <published>2020-08-04T09:06:29.000Z</published>
    <updated>2020-08-04T14:40:18.596Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>我的 MacBook Pro 使用的是绿联的外接扩展坞, 其中有一个网口<br>在京东购买的: <a href="https://item.jd.com/4445121.html" target="_blank" rel="noopener">https://item.jd.com/4445121.html</a></p><p>型号为: CM179<br>网卡芯片为: RTL8153B</p><p>最近发现只要我的 MacBook Pro 关闭了盖子, 会导致接在同一交换机下的路由器就无法上网<br>打开盖子后,网络又恢复正常了  </p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>搜索了一番没找到解决方式</p><p>于是就找到当时购买的这款产品的京东介绍页面看了看</p><p>想着去绿联的官网找找驱动试试: <a href="https://www.lulian.cn/download/list-34-cn.html" target="_blank" rel="noopener">https://www.lulian.cn/download/list-34-cn.html</a></p><p>找到对应的型号和网卡芯片: <a href="https://www.lulian.cn/download/38-cn.html" target="_blank" rel="noopener">https://www.lulian.cn/download/38-cn.html</a></p><p>下载并解压驱动压缩包，双击“RTUNICv1.0.20.pkg”文件，一直点击继续，安装完成后重启电脑即可。</p><p>重启后又试了下关闭盖子, 问题解决了!!!</p>]]></content>
    
    <summary type="html">
    
      MacBook Pro 使用绿联 TypeC 网卡关闭笔记本盖子时导致局域网网络不可用的问题解决
    
    </summary>
    
    
      <category term="MacOS篇" scheme="http://blog.joylau.cn/categories/MacOS%E7%AF%87/"/>
    
    
      <category term="MacOS" scheme="http://blog.joylau.cn/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>Awtrix App --- 开发一款显示个人博客访问人数的 App</title>
    <link href="http://blog.joylau.cn/2020/08/02/Awtrix-BlogViews/"/>
    <id>http://blog.joylau.cn/2020/08/02/Awtrix-BlogViews/</id>
    <published>2020-08-02T05:00:31.000Z</published>
    <updated>2020-08-07T08:06:49.002Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>Awtrix App 开发入门之开发一款显示个人博客访问人数的 App</p><ol><li>具备 Awtrix 硬件设备</li><li>博客的计数工具是<strong>不蒜子</strong></li></ol><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ol><li>JDK 8 的环境</li><li>开发工具： <a href="https://www.b4x.com/b4j.html" target="_blank" rel="noopener">B4J</a></li></ol><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="http://image.joylau.cn/blog/Awtrix-preview-gif.gif" alt="gif"><br><img src="http://image.joylau.cn/blog/Awtrix-web-app.png" alt="app"><br><img src="http://image.joylau.cn/blog/Awtrix-web-config.png" alt="config"></p><h3 id="开发准备"><a href="#开发准备" class="headerlink" title="开发准备"></a>开发准备</h3><ol><li>模板文件</li></ol><p>AWTRIX.bas： 这个文件的内容不需要改动直接复制即可</p><pre><code class="text">    B4J=true    Group=Default Group    ModulesStructureVersion=1    Type=Class    Version=7.31    @EndOfDesignText@    &#39;This Class takes control of the Interface to AWTRIX, the Icon Renderer    &#39;and some useful functions to make the development more easier.    &#39;Usually you dont need to modify this Class!    #Event: Started    #Event: controllerButton(button as int,dir as boolean)    #Event: controllerAxis(axis as int, dir as float)    #Event: Exited    #Event: iconRequest    #Event: settingsChanged    #Event: startDownload(jobNr As Int) As String    #Event: evalJobResponse(Resp As JobResponse)    private Sub Class_Globals        Private Appduration As Int        Private mscrollposition As Int        Private show As Boolean = True        Private forceDown As Boolean        Private LockApp As Boolean = False        Private Icon As List        Private appName As String        Private AppVersion As String        Private TickInterval As Int        Private NeedDownloads As Int = 0        Private UpdateInterval As Int = 0        Private AppDescription As String        Private AppAuthor As String        Private SetupInfos As String        Private MatrixInfo As Map        Private appSettings As Map = CreateMap()        Private ServerVersion As String        Private DisplayTime As Int        Private MatrixWidth As Int = 32        Private MatrixHeight As Int = 8        Private DownloadHeader As Map        Private pluginversion As Int = 1        Private Tag As List = Array As String()        Private playdescription As String        Private Cover As Int        Private Game As Boolean        Private startTimestamp As Long        Private icoMap As Map        Private RenderedIcons As Map        Private animCounter As Map        Private iconList As List&#39;ignore        Private timermap As Map        Private set As Map &#39;ignore        Private Target As Object        Private commandList As List        Private colorCounter As Int        Private startTime As String =&quot;0&quot;        Private endtime As String = &quot;0&quot;        Private CharMap As Map        Private TextBuffer As String        Private TextLength As Int        Private UppercaseLetters As Boolean        Private SystemColor() As Int        Private event As String        Private Enabled As Boolean = True        Private noIcon() As Short = Array As Short(0, 0, 0, 63488, 63488, 0, 0, 0, 0, 0, 63488, 0, 0, 63488, 0, 0, 0, 0, 0, 0, 0, 63488, 0, 0, 0, 0, 0, 0, 63488, 0, 0, 0, 0, 0, 0, 63488, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63488, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)        Private isRunning As Boolean        Private Menu As Map        Private MenuList As List        Private bc As B4XSerializator        Private noIconMessage As Boolean        Private verboseLog As Boolean        Private finishApp As Boolean        Type JobResponse (jobNr As Int,Success As Boolean,ResponseString As String,Stream As InputStream)        Private httpMap As Map        Private OAuthToken As String        Private OAuth As Boolean        Private oauthmap As Map        Private mContentType As String        Private poll As Map = CreateMap(&quot;enable&quot;:False,&quot;sub&quot;:&quot;&quot;)        Private mHidden As Boolean    End Sub    &#39;Initializes the Helperclass.    Public Sub Initialize(class As Object, Eventname As String)        oauthmap.Initialize        Tag.Initialize        httpMap.Initialize        DownloadHeader.Initialize        event=Eventname        iconList.Initialize        Icon.Initialize        commandList.Initialize        RenderedIcons.Initialize        icoMap.Initialize        animCounter.Initialize        timermap.Initialize        set.Initialize        Menu.Initialize        MatrixInfo.Initialize        MenuList.Initialize        Target=class    End Sub    &#39;Checks if the app should shown    Private Sub timesComparative  As Boolean        Try            If startTime = endtime Then Return True            Dim startT() As String=Regex.Split(&quot;:&quot;,startTime)            Dim EndT() As String=Regex.Split(&quot;:&quot;,endtime)            Dim hour As Int=DateTime.GetHour(DateTime.Now)            Dim minute As Int=DateTime.GetMinute(DateTime.Now)            Dim second As Int=DateTime.GetSecond(DateTime.Now)            Dim now, start, stop As Int            now = ((hour * 3600) + (minute * 60) + second)            start = (startT(0) * 3600) + (startT(1) * 60)            stop = ( EndT(0)* 3600) + (EndT(1) * 60)            If (start &lt; stop) Then                Return (now &gt;= start And now &lt;= stop )            Else                Return (now &gt;= start Or now &lt;= stop)            End If        Catch            Log(&quot;Got Error from &quot; &amp; appName)            Log(&quot;Error in TimesComparative:&quot;)            Log(LastException)            Return True        End Try    End Sub    #Region IconRenderer    Private Sub startIconRenderer        isRunning=True        FirstTick        For Each k As Timer In timermap.Keys            k.Enabled=True            Sleep(1)        Next    End Sub    Private Sub stopIconRenderer        isRunning=False        For Each k As Timer In timermap.Keys            k.Enabled=False            Sleep(1)        Next    End Sub    Private Sub FirstTick        For Each IconID As Int In icoMap.Keys            Try                If icoMap.ContainsKey(IconID) Then                    Dim ico As List=icoMap.get(IconID)                    Dim parse As JSONParser                    If animCounter.Get(IconID)&gt;ico.Size-1 Then animCounter.put(IconID,0)                    parse.Initialize(ico.Get(animCounter.Get(IconID)))                    Dim bmproot As List = parse.NextArray                    Dim bmp(bmproot.Size) As Short                    For i=0 To bmproot.Size-1                        bmp(i)=bmproot.Get(i)                    Next                    RenderedIcons.Put(IconID,bmp)                    animCounter.put(IconID,animCounter.Get(IconID)+1)                Else                    Log(&quot;IconID&quot; &amp; IconID  &amp; &quot;doesnt exists&quot;)                End If            Catch                Log(&quot;Got Error from &quot; &amp; appName)                Log(&quot;Error in IconPreloader:&quot;)                Log(&quot;IconID:&quot; &amp; IconID)                Log(LastException)            End Try        Next    End Sub    Private Sub Timer_Tick        Try            Dim iconid As Int=timermap.Get(Sender)            If icoMap.ContainsKey(iconid) Then                Dim ico As List= icoMap.get(iconid)                Dim parse As JSONParser                If animCounter.Get(iconid)&gt;ico.Size-1 Then animCounter.put(iconid,0)                parse.Initialize(ico.Get(animCounter.Get(iconid)))                Dim bmproot As List = parse.NextArray                Dim bpm(bmproot.Size) As Short                For i=0 To bmproot.Size-1                    bpm(i)=bmproot.Get(i)                Next                RenderedIcons.Put(iconid,bpm)                animCounter.put(iconid,animCounter.Get(iconid)+1)            Else                Logger(&quot;IconID&quot; &amp; iconid  &amp; &quot;doesnt exists&quot;)            End If        Catch            Log(&quot;Got Error from &quot; &amp; appName)            Log(&quot;Error in IconRenderer:&quot;)            Log(LastException)            stopIconRenderer        End Try    End Sub    Private Sub addToIconRenderer(iconMap As Map)        Try            If iconMap.Size=0 Then Return            Dim runMarker As Boolean            If isRunning Then                stopIconRenderer                runMarker=True            End If            timermap.Clear            icoMap.Clear            animCounter.Clear            RenderedIcons.Clear            For Each ico As Int In iconMap.Keys                Dim ico1 As Map = iconMap.get(ico)                If ico1.ContainsKey(&quot;tick&quot;) Then                    icoMap.Put(ico,ico1.Get(&quot;data&quot;))                    animCounter.Put(ico,0)                    Dim timer As Timer                    timer.Initialize(&quot;Timer&quot;,ico1.Get(&quot;tick&quot;))                    Dim icoExists As Boolean=False                    For Each timerico As Int In timermap.Values                        If timerico=ico Then icoExists=True                    Next                    If Not(icoExists) Then timermap.Put(timer,ico)                Else                    RenderedIcons.Put(ico,ico1.Get(&quot;data&quot;))                End If            Next            If runMarker Then                startIconRenderer            End If        Catch            Log(&quot;Got Error from &quot; &amp; appName)            Log(&quot;Error in IconAdder:&quot;)            Log(LastException)        End Try    End Sub    &#39;returns the rendered Icon    Public Sub getIcon(ID As Int) As Short()        If RenderedIcons.ContainsKey(ID) Then            Return RenderedIcons.Get(ID)        Else            If noIconMessage = False Then                Logger(&quot;Icon &quot; &amp; ID &amp; &quot; not found&quot;)                noIconMessage=True            End If            Return noIcon        End If    End Sub    #End Region    &#39;This is the interface between AWTRIX and the App    Public Sub interface(function As String, Params As Map) As Object        Select Case function            Case &quot;start&quot;                mscrollposition=MatrixWidth                If SubExists(Target,event&amp;&quot;_Started&quot;) Then                    CallSub(Target,event&amp;&quot;_Started&quot;)                End If                Try                    Appduration = Params.Get(&quot;AppDuration&quot;)                    If DisplayTime&gt;0 Then                        Appduration=DisplayTime                    End If                    verboseLog =Params.Get(&quot;verboseLog&quot;)                    ServerVersion =    Params.Get(&quot;ServerVersion&quot;)                    MatrixWidth = Params.Get(&quot;MatrixWidth&quot;)                    MatrixHeight = Params.Get(&quot;MatrixHeight&quot;)                    UppercaseLetters = Params.Get(&quot;UppercaseLetters&quot;)                    CharMap = Params.Get(&quot;CharMap&quot;)                    SystemColor = Params.Get(&quot;SystemColor&quot;)                    MatrixInfo=Params.Get(&quot;MatrixInfo&quot;)                    set.Put(&quot;interval&quot;,TickInterval)                    set.Put(&quot;needDownload&quot;,NeedDownloads)                    set.Put(&quot;DisplayTime&quot;, DisplayTime)                    set.Put(&quot;forceDownload&quot;, forceDown)                Catch                    Log(&quot;Got Error from &quot; &amp; appName)                    Log(&quot;Error in start procedure&quot;)                    Log(LastException)                End Try                startTimestamp=DateTime.now                noIconMessage=False                If show Then                    set.Put(&quot;show&quot;,timesComparative)                Else                    set.Put(&quot;show&quot;,show)                End If                set.Put(&quot;isGame&quot;,Game)                set.Put(&quot;hold&quot;,LockApp)                set.Put(&quot;iconList&quot;,Icon)                Return set            Case &quot;downloadCount&quot;                Return NeedDownloads            Case &quot;startDownload&quot;                httpMap.Initialize                DownloadHeader.Initialize                mContentType=&quot;&quot;                If SubExists(Target,event&amp;&quot;_startDownload&quot;) Then                    CallSub2(Target,event&amp;&quot;_startDownload&quot;,Params.Get(&quot;jobNr&quot;))                End If                If DownloadHeader.Size&gt;0 Then                    httpMap.Put(&quot;Header&quot;,DownloadHeader)                End If                If mContentType.Length&gt;0 Then                    httpMap.Put(&quot;ContentType&quot;,mContentType)                End If                Return httpMap            Case &quot;httpResponse&quot;                Dim res As JobResponse                res.Initialize                res.jobNr=Params.Get(&quot;jobNr&quot;)                res.Success=Params.Get(&quot;success&quot;)                res.ResponseString=Params.Get(&quot;response&quot;)                res.Stream=Params.Get(&quot;InputStream&quot;)                If SubExists(Target,event&amp;&quot;_evalJobResponse&quot;) Then                    CallSub2(Target,event&amp;&quot;_evalJobResponse&quot;,res)                End If                Return True            Case &quot;running&quot;                startIconRenderer            Case &quot;tick&quot;                commandList.Clear                If finishApp Then                    finishApp=False                    commandList.Add(CreateMap(&quot;type&quot;:&quot;finish&quot;))                Else                    If SubExists(Target,event&amp;&quot;_genFrame&quot;) Then                        CallSub(Target,event&amp;&quot;_genFrame&quot;)&#39;ignore                    End If                End If                Return commandList            Case &quot;infos&quot;                Dim infos As Map                infos.Initialize                Dim isconfigured As Boolean = True                If File.Exists(File.Combine(File.DirApp,&quot;Apps&quot;),appName&amp;&quot;.ax&quot;) Then                    Dim m As Map = bc.ConvertBytesToObject(File.ReadBytes(File.Combine(File.DirApp,&quot;Apps&quot;),appName&amp;&quot;.ax&quot;))                    For Each v As Object In m.Values                        If v=&quot;null&quot; Or v=&quot;&quot; Then                            isconfigured=False                        End If                    Next                    If OAuth And OAuthToken.Length=0 Then isconfigured=False                End If                infos.Put(&quot;isconfigured&quot;,isconfigured)                infos.Put(&quot;AppVersion&quot;,AppVersion)                infos.Put(&quot;tags&quot;,Tag)                infos.Put(&quot;poll&quot;,poll)                infos.Put(&quot;oauth&quot;,OAuth)                infos.Put(&quot;oauthmap&quot;,oauthmap)                infos.Put(&quot;isGame&quot;,Game)                infos.Put(&quot;CoverIcon&quot;,Cover)                infos.Put(&quot;pluginversion&quot;,pluginversion)                infos.Put(&quot;author&quot;,AppAuthor)                infos.Put(&quot;howToPLay&quot;,playdescription)                infos.Put(&quot;description&quot;,AppDescription)                infos.Put(&quot;setupInfos&quot;,SetupInfos)                infos.Put(&quot;hidden&quot;,mHidden)                Return infos            Case &quot;setSettings&quot;                makeSettings                Return True            Case &quot;getUpdateInterval&quot;                Return UpdateInterval            Case &quot;setEnabled&quot;                saveSingleSetting(&quot;Enabled&quot;,Params.Get(&quot;Enabled&quot;))                makeSettings            Case &quot;getEnable&quot;                Return Enabled            Case &quot;stop&quot;                If Game Then                    finishApp=False                    show=False                End If                stopIconRenderer                If SubExists(Target,event&amp;&quot;_Exited&quot;) Then                    CallSub(Target,event&amp;&quot;_Exited&quot;)                End If            Case &quot;getIcon&quot;                If SubExists(Target,event&amp;&quot;_iconRequest&quot;) Then                    CallSub(Target,event&amp;&quot;_iconRequest&quot;)                End If                Return CreateMap(&quot;iconList&quot;:Icon)            Case &quot;iconList&quot;                addToIconRenderer(Params)            Case &quot;externalCommand&quot;                externalCommand(Params)            Case &quot;controller&quot;                Control(Params)            Case &quot;getMenu&quot;                Menu.Initialize                Menu.Put(&quot;Version&quot;,&quot;1.6&quot;)                Menu.Put(&quot;Theme&quot;,&quot;Light Theme&quot;)                Menu.Put(&quot;Items&quot;,MenuList)                Return Menu            Case &quot;setToken&quot;                OAuthToken=Params.Get(&quot;token&quot;)            Case &quot;isReady&quot;                If SubExists(Target,event&amp;&quot;_isReady&quot;) Then                    Return CallSub(Target,event&amp;&quot;_isReady&quot;)                Else                    Return True                End If            Case &quot;shouldShow&quot;                Return show            Case &quot;poll&quot;                Dim s As String=Params.Get(&quot;sub&quot;)                If SubExists(Target,event &amp; &quot;_&quot; &amp; s) Then                    CallSub(Target,event &amp; &quot;_&quot; &amp; s)                End If        End Select        Return True    End Sub    &#39;This function calculates the ammount of pixels wich a text needs    Public Sub calcTextLength(text As String) As Int        If UppercaseLetters Then text = text.ToUpperCase        If TextBuffer&lt;&gt;text Then            Dim Length As Int            For i=0 To text.Length-1                If CharMap.ContainsKey(Asc(text.CharAt(i))) Then                    Length=Length+(CharMap.Get(Asc(text.CharAt(i))))                Else                    Length=Length+4                End If            Next            TextBuffer=text            TextLength=Length            Return Length        End If        Return TextLength    End Sub    &#39;This Helper automaticly display a text in a default app style    &#39;If the text is longer than the Matrixwitdh it will scroll the text    &#39;otherwise it will center the text. Call drawText to handle it manually.    &#39;    &#39;Text - the text to be displayed    &#39;IconOffset - wether you need an offset if you place an icon on the left side.    &#39;yPostition    &#39;Color - custom text color. Pass Null to use the Global textcolor (recommended).    &#39;    &#39;&lt;code&gt;App.genText(&quot;Hello World&quot;,True,Array as int(255,0,0),false)&lt;/code&gt;    Public Sub genText(Text As String,IconOffset As Boolean,yPostition As Int,Color() As Int,callFinish As Boolean)        If Text.Length=0 Then            finish            Return        End If        calcTextLength(Text)        Dim offset As Int        If IconOffset Then offset = 24 Else offset = 32        If TextLength&gt;offset Then            drawText(Text,mscrollposition,yPostition,Color)            mscrollposition=mscrollposition-1            If mscrollposition&lt; 0-TextLength  Then                If LockApp And callFinish Then                    finish                    Return                Else                    mscrollposition=MatrixWidth                End If            End If        Else            Dim x As Int            If TextLength&lt;offset+1 Then                If IconOffset Then                    x=((MatrixWidth/2)-TextLength/2)+4                Else                    x=(MatrixWidth/2)-TextLength/2                End If            End If            drawText(Text,x,yPostition,Color)        End If    End Sub    &#39;This functions build and savee the settings. You dont need to call this manually    Public Sub makeSettings        If Game Then show=False        If File.Exists(File.Combine(File.DirApp,&quot;Apps&quot;),appName&amp;&quot;.ax&quot;) Then            Dim data() As Byte = File.ReadBytes(File.Combine(File.DirApp,&quot;Apps&quot;),appName&amp;&quot;.ax&quot;)            Dim m As Map = bc.ConvertBytesToObject(data)            For Each k As String In appSettings.Keys                If Not(m.ContainsKey(k)) Then                    m.Put(k,appSettings.Get(k))                Else                    appSettings.Put(k,m.Get(k))                End If            Next            For Counter = m.Size -1 To 0 Step -1                Dim SettingsKey As String = m.GetKeyAt(Counter)                If Not(SettingsKey=&quot;UpdateInterval&quot; Or SettingsKey=&quot;StartTime&quot; Or SettingsKey=&quot;EndTime&quot; Or SettingsKey=&quot;DisplayTime&quot; Or SettingsKey=&quot;Enabled&quot;)   Then                    If Not(appSettings.ContainsKey(SettingsKey)) Then m.Remove(SettingsKey)                End If            Next            Try                Enabled=m.Get(&quot;Enabled&quot;)                startTime=m.Get(&quot;StartTime&quot;)                endtime=m.Get(&quot;EndTime&quot;)                UpdateInterval=m.Get(&quot;UpdateInterval&quot;)                DisplayTime=m.Get(&quot;DisplayTime&quot;)                File.WriteBytes(File.Combine(File.DirApp,&quot;Apps&quot;),appName&amp;&quot;.ax&quot;,bc.ConvertObjectToBytes(m))                If SubExists(Target,event&amp;&quot;_settingsChanged&quot;) Then                    CallSub(Target,event&amp;&quot;_settingsChanged&quot;)&#39;ignore                End If            Catch                Log(&quot;Got Error from &quot; &amp; appName)                Log(&quot;Error while saving settings&quot;)                Log(LastException)            End Try        Else            Dim m As Map            m.Initialize            m.Put(&quot;UpdateInterval&quot;,UpdateInterval)            m.Put(&quot;StartTime&quot;,&quot;00:00&quot;)            m.Put(&quot;EndTime&quot;,&quot;00:00&quot;)            m.Put(&quot;DisplayTime&quot;,&quot;0&quot;)            m.Put(&quot;Enabled&quot;,True)            For Each k As String In appSettings.Keys                m.Put(k,appSettings.Get(k))            Next            File.WriteBytes(File.Combine(File.DirApp,&quot;Apps&quot;),appName&amp;&quot;.ax&quot;,bc.ConvertObjectToBytes(m))        End If    End Sub    &#39;Returns the value of a Settingskey    public Sub get(SettingsKey As String) As Object        If appSettings.ContainsKey(SettingsKey) Then            Return appSettings.Get(SettingsKey)        Else            Log(SettingsKey &amp; &quot; not found&quot;)            Return &quot;&quot;        End If    End Sub    Public Sub  saveSingleSetting(key As String, value As Object)        If File.Exists(File.Combine(File.DirApp,&quot;Apps&quot;),appName&amp;&quot;.ax&quot;) Then            Dim data() As Byte = File.ReadBytes(File.Combine(File.DirApp,&quot;Apps&quot;),appName&amp;&quot;.ax&quot;)            Dim m As Map = bc.ConvertBytesToObject(data)            m.Put(key,value)            File.WriteBytes(File.Combine(File.DirApp,&quot;Apps&quot;),appName&amp;&quot;.ax&quot;,bc.ConvertObjectToBytes(m))        End If    End Sub    &#39;Draws a Bitmap    Public Sub drawBMP(x As Int,y As Int,bmp() As Short,width As Int, height As Int)        commandList.Add(CreateMap(&quot;type&quot;:&quot;bmp&quot;,&quot;x&quot;:x,&quot;y&quot;:y,&quot;bmp&quot;:bmp,&quot;width&quot;:width,&quot;height&quot;:height))    End Sub    &#39;Draws a Text    Public Sub drawText(text As String,x As Int, y As Int,Color() As Int)        If Color=Null Then            commandList.Add(CreateMap(&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:text,&quot;x&quot;:x,&quot;y&quot;:y))        Else            commandList.Add(CreateMap(&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:text,&quot;x&quot;:x,&quot;y&quot;:y,&quot;color&quot;:Color))        End If    End Sub    &#39;Draws a Circle    Public Sub drawCircle(X As Int, Y As Int, Radius As Int, Color() As Int)        If Color=Null Then            commandList.Add(CreateMap(&quot;type&quot;:&quot;circle&quot;,&quot;x&quot;:x,&quot;y&quot;:y,&quot;r&quot;:Radius,&quot;color&quot;:SystemColor))        Else            commandList.Add(CreateMap(&quot;type&quot;:&quot;circle&quot;,&quot;x&quot;:x,&quot;y&quot;:y,&quot;r&quot;:Radius,&quot;color&quot;:Color))        End If    End Sub    &#39;Draws a filled Circle    Public Sub fillCircle(X As Int, Y As Int, Radius As Int, Color() As Int)        If Color=Null Then            commandList.Add(CreateMap(&quot;type&quot;:&quot;fillCircle&quot;,&quot;x&quot;:x,&quot;y&quot;:y,&quot;r&quot;:Radius,&quot;color&quot;:SystemColor))        Else            commandList.Add(CreateMap(&quot;type&quot;:&quot;fillCircle&quot;,&quot;x&quot;:x,&quot;y&quot;:y,&quot;r&quot;:Radius,&quot;color&quot;:Color))        End If    End Sub    &#39;Draws a single Pixel    Public Sub drawPixel(X As Int,Y As Int,Color() As Int)        If Color=Null Then            commandList.Add(CreateMap(&quot;type&quot;:&quot;pixel&quot;,&quot;x&quot;:x,&quot;y&quot;:y,&quot;color&quot;:SystemColor))        Else            commandList.Add(CreateMap(&quot;type&quot;:&quot;pixel&quot;,&quot;x&quot;:x,&quot;y&quot;:y,&quot;color&quot;:Color))        End If    End Sub    &#39;Draws a Rectangle    Public Sub drawRect(X As Int,Y As Int,Width  As Int,Height As Int,Color() As Int)        If Color=Null Then            commandList.Add(CreateMap(&quot;type&quot;:&quot;rect&quot;,&quot;x&quot;:x,&quot;y&quot;:y,&quot;w&quot;:Width,&quot;h&quot;:Height,&quot;color&quot;:SystemColor))        Else            commandList.Add(CreateMap(&quot;type&quot;:&quot;rect&quot;,&quot;x&quot;:x,&quot;y&quot;:y,&quot;w&quot;:Width,&quot;h&quot;:Height,&quot;color&quot;:Color))        End If    End Sub    &#39;Draws a Line    Public Sub drawLine(X0 As Int,Y0 As Int,X1  As Int,Y1 As Int,Color() As Int)        If Color=Null Then            commandList.Add(CreateMap(&quot;type&quot;:&quot;line&quot;,&quot;x0&quot;:X0,&quot;y0&quot;:Y0,&quot;x1&quot;:X1,&quot;y1&quot;:Y1,&quot;color&quot;:SystemColor))        Else            commandList.Add(CreateMap(&quot;type&quot;:&quot;line&quot;,&quot;x0&quot;:X0,&quot;y0&quot;:Y0,&quot;x1&quot;:X1,&quot;y1&quot;:Y1,&quot;color&quot;:Color))        End If    End Sub    &#39;Sends a custom or undocumented command    Public Sub customCommand(cmd As Map)        commandList.Add(cmd)    End Sub    &#39;Fills the screen with a color    Public Sub fill(Color() As Int)        If Color=Null Then            commandList.Add(CreateMap(&quot;type&quot;:&quot;fill&quot;,&quot;color&quot;:SystemColor))        Else            commandList.Add(CreateMap(&quot;type&quot;:&quot;fill&quot;,&quot;color&quot;:Color))        End If    End Sub    &#39;Exits the app and force AWTRIX to switch to the next App    &#39;only needed if you have set LockApp to true    Public Sub finish        finishApp=True    End Sub    &#39;Returns a rainbowcolor wich is fading each tick    Public Sub rainbow As Int()        colorCounter=colorCounter+1        If colorCounter&gt;255 Then colorCounter=0        Return(wheel(colorCounter))    End Sub    Private Sub wheel(Wheelpos As Int) As Int() &#39;ignore        If(Wheelpos &lt; 85) Then            Return Array As Int(Wheelpos * 3, 255 - Wheelpos * 3, 0)        else if(Wheelpos &lt; 170) Then            Wheelpos =Wheelpos- 85            Return  Array As Int(255 - Wheelpos * 3, 0, Wheelpos * 3)        Else            Wheelpos =Wheelpos- 170            Return  Array As Int(0, Wheelpos * 3, 255 - Wheelpos * 3)        End If    End Sub    Public Sub Logger(msg As String)        If verboseLog Then            DateTime.DateFormat=DateTime.DeviceDefaultTimeFormat            Log(DateTime.Date(DateTime.Now) &amp;&quot;      &quot; &amp; appName &amp; &quot;:&quot; &amp; CRLF &amp;  msg)        End If    End Sub    Private Sub Control(controller As Map)        If controller.ContainsKey(&quot;GameStart&quot;) And Game Then            Dim state As Boolean = controller.Get(&quot;GameStart&quot;)            If state Then                show=True            Else                finishApp=True                show=False            End If            Return        End If        If controller.ContainsKey(&quot;button&quot;) Then            Dim buttonNR As Int = controller.Get(&quot;button&quot;)            Dim buttonDIR As Boolean = controller.Get(&quot;dir&quot;)            If SubExists(Target,event&amp;&quot;_controllerButton&quot;) Then                CallSub3(Target,event&amp;&quot;_controllerButton&quot;,buttonNR,buttonDIR)            End If            If verboseLog Then                If buttonDIR Then Logger($&quot;Button ${buttonNR} down&quot;$) Else Logger($&quot;Button ${buttonNR} up&quot;$)            End If            Return        End If        If controller.ContainsKey(&quot;axis&quot;) Then            Dim AxisNR As Int = controller.Get(&quot;axis&quot;)            Dim val As Float = controller.Get(&quot;dir&quot;)            If SubExists(Target,event&amp;&quot;_controllerAxis&quot;) Then                CallSub3(Target,event&amp;&quot;_controllerAxis&quot;,AxisNR,val)            End If            Return        End If    End Sub    Private Sub externalCommand(cmd As Map)        If SubExists(Target,event&amp;&quot;_externalCommand&quot;) Then            CallSub2(Target,event&amp;&quot;_externalCommand&quot;,cmd)        End If    End Sub    Public Sub throwError(message As String)        Logger(message)    End Sub    &#39;Returns the timestamp when the app was started.    Sub getstartedAt As Long        Return startTimestamp    End Sub    &#39;Gets or sets the app tags    Sub gettags As List        Return Tag    End Sub    Sub settags(Tags As List)        Tag=Tags    End Sub    &#39;Returns the runtime of the app    Sub getduration As Int        Return Appduration    End Sub    &#39;If set to true, awtrix will skip this app    Sub setshouldShow(shouldShow As Boolean)        show=shouldShow    End Sub    &#39;If set to true, AWTRIX will download new data before each start.    Sub setforceDownload(forceDownload As Boolean)        forceDown=forceDownload    End Sub    &#39;If set to true AWTRIX will wait for the &quot;finish&quot; command before switch to the next app.    Sub setlock(lock As Boolean)        LockApp=lock    End Sub    &#39;IconIDs from AWTRIXER. You can add multiple if you need more    Sub seticons(icons As List)        Icon=icons    End Sub    &#39;Sets or gets the appname    Sub getname As String        Return appName    End Sub    Sub setname(name As String)        appName=name    End Sub    &#39;Sets or gets the app description    Sub getdescription As String        Return AppDescription    End Sub    Sub setdescription(description As String)        AppDescription=description    End Sub    &#39;The developer if this App    Sub getauthor As String        Return AppAuthor    End Sub    Sub setauthor(author As String)        AppAuthor=author    End Sub    &#39;Sets or gets the appversion    Sub getversion As String        Return AppVersion    End Sub    Sub setversion(version As String)        AppVersion=version    End Sub    &#39;Sets or gets the tickinterval    Sub gettick As String        Return TickInterval    End Sub    Sub settick(tick As String)        TickInterval=tick    End Sub    &#39;How many downloadhandlers should be generated    Sub setdownloads(downloads As Int)        NeedDownloads=downloads    End Sub    &#39;Setup Instructions. You can use HTML to format it    Sub setsetupDescription(setupDescription As String)        SetupInfos=setupDescription    End Sub    &#39;gets all informations from the matrix as a map    Sub getmatrix As Map        Return MatrixInfo    End Sub    &#39;needed Settings for this App (wich can be configurate from user via webinterface)    Sub setsettings(settings As Map)        appSettings=settings    End Sub    &#39;returns the version of the serever    Sub getserver As String        Return ServerVersion    End Sub    &#39;returns the size of the Matrix as an array (height,width)    Sub getmatrixSize As Int()        Dim size() As Int = Array As Int(MatrixHeight,MatrixWidth)        Return size    End Sub    &#39;if this is a game you can set your play instructions here    Sub sethowToPlay(howToPlay As String)        playdescription=howToPlay    End Sub    &#39;Icon (ID) to be displayed in the Appstore and MyApps    Sub setcoverIcon(coverIcon As Int)        Cover=coverIcon    End Sub    &#39;set this to true if this is a game.    Sub setisGame(isGame As Boolean)        Game=isGame    End Sub    public Sub InitializeOAuth (AuthorizeURL As String, TokenURL As String, ClientId As String, ClientSecret As String, Scope As String)        OAuth=True        oauthmap=CreateMap(&quot;AuthorizeURL&quot;:AuthorizeURL,&quot;TokenURL&quot;:TokenURL,&quot;ClientId&quot;:ClientId,&quot;ClientSecret&quot;:ClientSecret,&quot;Scope&quot;:Scope)    End Sub    Sub getToken As String        Return OAuthToken    End Sub    Sub getScrollposition As Int        Return mscrollposition    End Sub    &#39;Sends a POST request with the given data as the post data.    Public Sub PostString(Link As String, Text As String)        httpMap=CreateMap(&quot;type&quot;:&quot;PostString&quot;,&quot;Link&quot;:Link,&quot;Text&quot;:Text)    End Sub    &#39;Sends a POST request with the given string as the post data    Public Sub PostBytes(Link As String, Data() As Byte)        httpMap=CreateMap(&quot;type&quot;:&quot;PostBytes&quot;,&quot;Link&quot;:Link,&quot;Data&quot;:Data)    End Sub    &#39;Sends a PUT request with the given data as the post data.    Public Sub PutString(Link As String, Text As String)        httpMap=CreateMap(&quot;type&quot;:&quot;PutString&quot;,&quot;Link&quot;:Link,&quot;Text&quot;:Text)    End Sub    &#39;Sends a PUT request with the given string as the post data    Public Sub PutBytes(Link As String, Data() As Byte)        httpMap=CreateMap(&quot;type&quot;:&quot;PutBytes&quot;,&quot;Link&quot;:Link,&quot;Data&quot;:Data)    End Sub    &#39;Sends a PATCH request with the given string as the request payload.    Public Sub PatchString(Link As String, Text As String)        httpMap=CreateMap(&quot;type&quot;:&quot;PatchString&quot;,&quot;Link&quot;:Link,&quot;Text&quot;:Text)    End Sub    &#39;Sends a PATCH request with the given data as the request payload.    Public Sub PatchBytes(Link As String, Data() As Byte)        httpMap=CreateMap(&quot;type&quot;:&quot;PatchBytes&quot;,&quot;Link&quot;:Link,&quot;Data&quot;:Data)    End Sub    &#39;Sends a HEAD request.    Public Sub Head(Link As String)        httpMap=CreateMap(&quot;type&quot;:&quot;Head&quot;,&quot;Link&quot;:Link)    End Sub    &#39;Sends a multipart POST request.    &#39;NameValues - A map with the keys and values. Pass Null if not needed.    &#39;Files - List of MultipartFileData items. Pass Null if not needed.    Public Sub PostMultipart(Link As String, NameValues As Map, Files As List)        httpMap=CreateMap(&quot;type&quot;:&quot;PostMultipart&quot;,&quot;Link&quot;:Link,&quot;NameValues&quot;:NameValues,&quot;Files&quot;:Files)    End Sub    &#39;Sends a POST request with the given file as the post data.    &#39;This method doesn&#39;t work with assets files.    Public Sub PostFile(Link As String, Dir As String, FileName As String)        httpMap=CreateMap(&quot;type&quot;:&quot;PostFile&quot;,&quot;Link&quot;:Link,&quot;Dir&quot;:Dir,&quot;FileName&quot;:FileName)    End Sub    &#39;Submits a HTTP GET request.    &#39;Consider using Download2 if the parameters should be escaped.    Public Sub Download(Link As String)        httpMap=CreateMap(&quot;type&quot;:&quot;Download&quot;,&quot;Link&quot;:Link)    End Sub    &#39;Submits a HTTP GET request.    &#39;Encodes illegal parameter characters.    &#39;&lt;code&gt;Example:    &#39;job.Download2(&quot;http://www.example.com&quot;, _    &#39;    Array As String(&quot;key1&quot;, &quot;value1&quot;, &quot;key2&quot;, &quot;value2&quot;))&lt;/code&gt;    Public Sub Download2(Link As String, Parameters() As String)        httpMap=CreateMap(&quot;type&quot;:&quot;Download2&quot;,&quot;Link&quot;:Link,&quot;Parameters&quot;:Parameters)    End Sub    &#39;Sets the header for the request as an map    &#39;(Headername,Headervalue)    Public Sub setHeader(header As Map)        DownloadHeader=header    End Sub    &#39;Sets the Mime header of the request.    &#39;This method should only be used with requests that have a payload.    Public Sub SetContentType(ContentType As String)        mContentType=ContentType    End Sub    &#39;enables pollingmode    &#39;pass the subname wich should be called every 5s. e.g for App_mySub :    &#39;&lt;code&gt;app.pollig(&quot;mySub&quot;):&lt;/code&gt;    &#39;if you pass a empty String (&quot;&quot;) AWTRIX will start the download    Public Sub polling(enable As Boolean,subname As String)        poll=CreateMap(&quot;enable&quot;:enable,&quot;sub&quot;:subname)    End Sub    &#39;hide this app from apploop    Sub setHidden(hide As Boolean)        mHidden=hide    End Sub</code></pre><ol start="2"><li>BlogViews.b4j: b4j 工程配置文件</li></ol><pre><code class="text">    AppType=StandardJava    Build1=Default,b4j.example    Group=Default Group    Library1=jcore    Library2=json    Library3=jrandomaccessfile    Module1=AWTRIX    Module2=BlogViews    NumberOfFiles=0    NumberOfLibraries=3    NumberOfModules=2    Version=8.5    @EndOfDesignText@    &#39;Draws a Rectangle&#39;Non-UI application (console / server application)    #Region Project Attributes         #LibraryName:BlogViews    #End Region    Sub Process_Globals    End Sub    Sub AppStart (Args() As String)    End Sub    &#39;Return true to allow the default exceptions handler to handle the uncaught exception.    Sub Application_Error (Error As Exception, StackTrace As String) As Boolean        Return True    End Sub</code></pre><p>其中修改：</p><ul><li>Module2</li><li>LibraryName</li></ul><ol start="3"><li>BlogViews.bas： 程序主文件</li></ol><pre><code class="text">    B4J=true    Group=Default Group    ModulesStructureVersion=1    Type=Class    Version=4.2    @EndOfDesignText@    Sub Class_Globals        Dim App As AWTRIX        &#39;Declare your variables here        Dim followers As Int = 0        Dim iconId As Int = 8    End Sub    &#39; ignore    public Sub GetNiceName() As String        Return App.Name    End Sub    &#39; ignore    public Sub Run(Tag As String, Params As Map) As Object        Return App.interface(Tag,Params)    End Sub    &#39; Config your App    Public Sub Initialize() As String        App.Initialize(Me,&quot;App&quot;)        &#39;App name (must be unique, avoid spaces)        App.Name=&quot;BlogViews&quot;        &#39;Version of the App        App.Version=&quot;1.0&quot;        &#39;Description of the App. You can use HTML to format it        App.Description=$&quot;Shows your website unique visitor on &lt;b&gt;busuanzi&lt;/b&gt; statistical tools&quot;$        App.Author=&quot;JoyLau&quot;        App.CoverIcon=iconId        &#39;SetupInstructions. You can use HTML to format it        App.setupDescription= $&quot;        &lt;b&gt;Website:&lt;/b&gt;  Your Website Address&lt;br/&gt;        &lt;b&gt;IconID:&lt;/b&gt;  Icon id&lt;br/&gt;        &quot;$        &#39;How many downloadhandlers should be generated        App.Downloads=1        &#39;IconIDs from AWTRIXER. You can add multiple if you want to display them at the same time        App.Icons=Array As Int(iconId)        &#39;Tickinterval in ms (should be 65 by default, for smooth scrolling))p://        App.Tick=65        &#39;needed Settings for this App (Wich can be configurate from user via webinterface)        App.settings=CreateMap(&quot;Website&quot;:&quot;http://blog.joylau.cn&quot;,&quot;IconID&quot;:iconId)        App.MakeSettings        Return &quot;AWTRIX20&quot;    End Sub    &#39;this sub is called right before AWTRIX will display your App    Sub App_Started    End Sub    &#39;Called with every update from Awtrix    &#39;return one URL for each downloadhandler    Sub App_startDownload(jobNr As Int)        Select jobNr            Case 1                App.Download(&quot;http://busuanzi.ibruce.info/busuanzi?jsonpCallback=callback&quot;)                App.Header = CreateMap(&quot;Referer&quot;:App.Get(&quot;Website&quot;),&quot;Cookie&quot;:&quot;busuanziId=D58737A150864C68B83F962028616CD6&quot;)        End Select    End Sub    &#39;process the response from each download handler    &#39;if youre working with JSONs you can use this online parser    &#39;to generate the code automaticly    &#39;https://json.blueforcer.de/     Sub App_evalJobResponse(Resp As JobResponse)        Try            If Resp.success Then                Select Resp.jobNr                    Case 1                        Dim parser As JSONParser                        parser.Initialize(Resp.ResponseString.replace(&quot;try{callback(&quot;,&quot;&quot;).replace(&quot;);}catch(e){}&quot;,&quot;&quot;))                        Dim root As Map = parser.NextObject                        followers = root.Get(&quot;site_uv&quot;)                End Select            End If        Catch            Log(&quot;Error in: &quot;&amp; App.Name &amp; CRLF &amp; LastException)            Log(&quot;API response: &quot; &amp; CRLF &amp; Resp.ResponseString)        End Try    End Sub    &#39;this sub is called right before AWTRIX will display your App    Sub App_iconRequest        App.Icons=Array As Int(App.Get(&quot;IconID&quot;))    End Sub    &#39;With this sub you build your frame.    Sub App_genFrame        App.genText(followers,True,1,Null,True)        App.drawBMP(0,0,App.getIcon(App.Get(&quot;IconID&quot;)),8,8)    End Sub</code></pre><p>配置项解释：</p><ol><li>App.name： 应用程序的名称。在Appstore，MyApps和文件名中使用  </li><li>App.version： 应用程序的版本。版本必须是数字，并且最多可以包含2个小数位（例如1.25）  </li><li>App.description： 应用程序的描述，简要地描述应用。可以选择将文本格式设置为HTML  </li><li>App.author： 应用程序的创建者。  </li><li>App.coverIcon：应用程序的图标。数据库中的 IconID。也可以在 Web 页面里创建并上传自己的图标  </li><li>App.settings： 应用程序的设置。生成一个由键和值组成的映射。例如```CreateMap（“ Key”：“ Value”）``可以输入缺省值，以便应用可以立即启动，也可以将值保留为空（“”），以便 AWTRIX 通知用户需要调整。在设置之前，AWTRIX 将不会加载该应用程序！  </li><li>App.setupDescription： 简要说明如何设置应用程序。可以将文本格式设置为HTML  </li><li>App.downloads： 指定您的应用需要下载多少次。如果一个下载依赖于另一下载，则需要多次下载。 </li><li>App.icons： 指定应用程序需要的图标。在启动应用程序之前，这些也将由 AWTRIX 下载。 </li><li>App.tick： 指定应用程序应运行的速度。对于简单的文本，65（ms）是最适合的。  </li></ol><p>程序解释： </p><ol><li>设置默认的访问量 0，默认使用的图标 id: 1230  </li><li>App 运行时请求接口： <a href="http://busuanzi.ibruce.info/busuanzi?jsonpCallback=callback，" target="_blank" rel="noopener">http://busuanzi.ibruce.info/busuanzi?jsonpCallback=callback，</a> 需要带上头信息 Referer，和 Cookie  </li></ol><p>Referer： 模拟浏览器请求，否则的话不蒜子的接口将不可用<br>Cookie： 带上 Cookie 的话相当于用户一直在刷新网页的效果，此时独立访客数不会 +1 的， 不带上的话每次访问接口都是导致数目 +1 ,造成数量不准确  </p><ol start="3"><li>解析返回的回调信息字符串结果， 获取想要的数据 <code>site_uv</code></li></ol><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><ol><li>将以上项目导入 B4J</li><li>点击 <code>Tools</code> -&gt; <code>Configure Paths</code> , 设置 javac 的目录和 jar 包导出目录(Additional Libraries)</li><li>编译 jar 包： 点击 <code>Project</code> -&gt; <code>Compile to Library</code></li></ol><h3 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h3><ol><li>将已编译的 <code>jar</code> 包复制到服务端的 <code>Apps</code> 文件夹中</li><li>在 Awtrix Web 界面重新启动 AWTRIX</li></ol><pre><code class="bash">    reload apps</code></pre>]]></content>
    
    <summary type="html">
    
      Awtrix App 开发入门之开发一款显示个人博客访问人数的 App
    
    </summary>
    
    
      <category term="Awtrix" scheme="http://blog.joylau.cn/categories/Awtrix/"/>
    
    
      <category term="Awtrix" scheme="http://blog.joylau.cn/tags/Awtrix/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ 软件代理报错：You have JVM property https.proxyHost set..</title>
    <link href="http://blog.joylau.cn/2020/07/20/IntelliJIDEA-Proxy/"/>
    <id>http://blog.joylau.cn/2020/07/20/IntelliJIDEA-Proxy/</id>
    <published>2020-07-20T01:37:26.000Z</published>
    <updated>2020-07-10T02:57:18.483Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h3><pre><code class="shell">    You have JVM property https.proxyHost set to &#39;...&#39;.    This may lead to incorrect behaviour. Proxy should be set in Settings | Proxy</code></pre><p>这是由于本地开启了科学上网代理服务造成的</p><h3 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h3><p>select Help -&gt; Edit Custom VM Options add below:</p><p>-Dhttp.proxyHost<br>-Dhttp.proxyPort<br>-Dhttps.proxyHost<br>-Dhttps.proxyPort<br>-DsocksProxyHost<br>-DsocksProxyPort</p>]]></content>
    
    <summary type="html">
    
      IntelliJ 软件代理报错：You have JVM property https.proxyHost set..
    
    </summary>
    
    
      <category term="IntelliJ IDEA篇" scheme="http://blog.joylau.cn/categories/IntelliJ-IDEA%E7%AF%87/"/>
    
    
      <category term="IntelliJ IDEA" scheme="http://blog.joylau.cn/tags/IntelliJ-IDEA/"/>
    
  </entry>
  
  <entry>
    <title>async 在箭头函数上的使用方式</title>
    <link href="http://blog.joylau.cn/2020/07/10/JavaScript-Async/"/>
    <id>http://blog.joylau.cn/2020/07/10/JavaScript-Async/</id>
    <published>2020-07-10T02:57:18.483Z</published>
    <updated>2020-07-10T02:57:18.483Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><pre><code class="js">    fun = async () =&gt; {       await .....    }</code></pre>]]></content>
    
    <summary type="html">
    
      async 在箭头函数上的使用方式
    
    </summary>
    
    
      <category term="JavaScript篇" scheme="http://blog.joylau.cn/categories/JavaScript%E7%AF%87/"/>
    
    
      <category term="JavaScript" scheme="http://blog.joylau.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Java 多文件边压缩边下载</title>
    <link href="http://blog.joylau.cn/2020/07/01/Java-Multi-Files-Compress-Downloading/"/>
    <id>http://blog.joylau.cn/2020/07/01/Java-Multi-Files-Compress-Downloading/</id>
    <published>2020-07-01T01:42:35.000Z</published>
    <updated>2020-07-10T02:57:18.483Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>有时我们希望在后台实时生成文件并下载到客户端</p><pre><code class="java">    @GetMapping(value = &quot;download&quot;)    public void download(HttpServletResponse response) {       try(OutputStream outputStream = response.getOutputStream();          ZipOutputStream zipOutputStream = new ZipOutputStream(outputStream, StandardCharsets.UTF_8)       ) {          response.setContentType(&quot;application/octet-stream&quot;);          response.setHeader(&quot;Content-Disposition&quot;, &quot;attachment; filename=&quot; + new String(&quot;压缩文件.zip&quot;.getBytes(&quot;UTF-8&quot;), &quot;ISO-8859-1&quot;));          File[] files = new File(&quot;&quot;).listFiles();          for (File file : files) {             // 单个文件压缩             compress(zipOutputStream, new FileInputStream(file), file.getName());          }          zipOutputStream.flush();       } catch (IOException e) {       }    }    /**     * 单个文件压缩     *     * @param zipOutputStream     * @param inputStream     * @param fileName     * @throws IOException     */    private static void compress(ZipOutputStream zipOutputStream, InputStream inputStream, String fileName) throws IOException {        if (inputStream == null) return;        zipOutputStream.putNextEntry(new ZipEntry(fileName));        int bytesRead;        byte[] buffer = new byte[FileUtil.BUFFER_SIZE];        while ((bytesRead = inputStream.read(buffer)) != -1) {            zipOutputStream.write(buffer, 0, bytesRead);        }        zipOutputStream.closeEntry();        inputStream.close();    }</code></pre>]]></content>
    
    <summary type="html">
    
      Java 多文件边压缩边下载
    
    </summary>
    
    
      <category term="Java篇" scheme="http://blog.joylau.cn/categories/Java%E7%AF%87/"/>
    
    
      <category term="Java" scheme="http://blog.joylau.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Electron ---- Better-Sqlite3 使用问题</title>
    <link href="http://blog.joylau.cn/2020/06/10/Electron-Better-Sqlite3/"/>
    <id>http://blog.joylau.cn/2020/06/10/Electron-Better-Sqlite3/</id>
    <published>2020-06-10T01:33:34.000Z</published>
    <updated>2020-07-10T02:57:18.483Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="错误信息"><a href="#错误信息" class="headerlink" title="错误信息"></a>错误信息</h3><pre><code class="bash">     The module &#39;/node_modules/better-sqlite3/build/better_sqlite3.node&#39;    was compiled against a different Node.js version using    NODE_MODULE_VERSION 57. This version of Node.js requires    NODE_MODULE_VERSION 64. Please try re-compiling or re-installing    the module (for instance, using `npm rebuild` or `npm install`).</code></pre><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p><code>npm install --save-dev electron-rebuild</code><br>使用electron-rebuild进行重新编译:</p><p><code>node_modules/.bin/electron-rebuild -f -w better-sqlite3</code></p><p>如果没有编译成功, 则查看是否安装了, node-gyp<br>因为在 electron-rebuild 项目的 README 里,<br>看到这句话: </p><pre><code class="bash">    If you have a good node-gyp config but you see an error about a missing element on Windows like `Could not load the Visual C++ component &quot;VCBuild.exe&quot;`, try to launch electron-rebuild in an npm script:</code></pre>]]></content>
    
    <summary type="html">
    
      Electron 使用 Better-Sqlite3 报错的问题记录
    
    </summary>
    
    
      <category term="Electron篇" scheme="http://blog.joylau.cn/categories/Electron%E7%AF%87/"/>
    
    
      <category term="Electron" scheme="http://blog.joylau.cn/tags/Electron/"/>
    
  </entry>
  
  <entry>
    <title>OpenVPN 配置文件说明</title>
    <link href="http://blog.joylau.cn/2020/05/28/OpenVPN-Config/"/>
    <id>http://blog.joylau.cn/2020/05/28/OpenVPN-Config/</id>
    <published>2020-05-28T04:00:01.000Z</published>
    <updated>2020-07-10T00:43:19.437Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>多客户端服务器的OpenVPN 2.0配置文件示例<br>本文件用于多客户端&lt;-&gt;单服务器端的<br>OpenVPN服务器端配置</p><h1 id="2-配置文件说明"><a href="#2-配置文件说明" class="headerlink" title="2. 配置文件说明"></a>2. 配置文件说明</h1><ul><li><a href="#21-服务端配置文件">2.1. 服务端配置文件</a></li><li><a href="#22-客户端配置文件">2.2. 客户端配置文件</a></li></ul><h2 id="2-1-服务端配置文件"><a href="#2-1-服务端配置文件" class="headerlink" title="2.1. 服务端配置文件"></a>2.1. 服务端配置文件</h2><p><a href="https://github.com/OpenVPN/openvpn/blob/master/sample/sample-config-files/server.conf" target="_blank" rel="noopener">英文原文</a></p><pre><code class="shell">################################################## 多客户端服务器的OpenVPN 2.0配置文件示例          ##                                               ## 本文件用于多客户端&lt;-&gt;单服务器端的                ## OpenVPN服务器端配置                            ##                                               ## OpenVPN也支持单机&lt;-&gt;单机的配置                  ## (在网站上的示例页面更多信息)                    ##                                               ## 这个配置可以在Windows或Linux/BSD系统上工作。     ## Windows的路径名需要加双引号并使用双反斜杠，如：   ## &quot;C:\\Program Files\\OpenVPN\\config\\foo.key&quot; ##                                               ## 前面加&#39;#&#39;或&#39;;&#39;的是注释                          ################################################### OpenVPN应该监听哪个本地IP地址（可选）# 如果不设置，默认监听所有IP;local a.b.c.d# OpenVPN应该监听哪个端口(TCP/UDP)# 如果想在同一台计算机上运行多个OpenVPN实例，可以使用不同的端口号来区分它们# 在防火墙上打开这个端口port 1194# 服务器使用TCP还是UDP协议;proto tcpproto udp# 指定OpenVPN创建的通信隧道类型# &quot;dev tun&quot;将会创建一个路由IP隧道# &quot;dev tap&quot;将会创建一个以太网隧道# 如果是以太网桥接模式，并且提前创建了一个名为&quot;tap0&quot;的与以太网接口进行桥接的虚拟接口，则你可以使用&quot;dev tap0&quot;# 如果想控制VPN的访问策略，必须为TUN/TAP接口创建防火墙规则# 在非Windows系统中，可以给出明确的单位编号，如&quot;tun0&quot;# 在Windows中，也可以使用&quot;dev-node&quot;# 在大多数系统上，除非部分或完全禁用了TUN/TAP接口的防火墙，否则VPN将不起作用。;dev tapdev tun# 如果想配置多个隧道，需要用到网络连接面板中TAP-Win32适配器的名称(如&quot;MyTap&quot;)# 在XP SP2或更高版本的系统中，可能需要有选择地禁用掉针对TAP适配器的防火墙# 通常情况下，非Windows系统则不需要该指令。;dev-node MyTap# 设置SSL/TLS根证书(ca)、证书(cert)和私钥(key)。# 每个客户端和服务器端都需要它们各自的证书和私钥文件。# 服务器端和所有的客户端都将使用相同的CA证书文件。## 通过easy-rsa目录下的一系列脚本可以生成所需的证书和私钥。# 服务器端和每个客户端的证书必须使用唯一的Common Name。## 也可以使用遵循X509标准的任何密钥管理系统来生成证书和私钥。# OpenVPN也支持使用一个PKCS #12格式的密钥文件(详情查看站点手册页面的&quot;pkcs12&quot;指令)ca ca.crtcert server.crtkey server.key  # 该文件应该保密# 迪菲·赫尔曼参数# 使用如下命令生成：#   openssl dhparam -out dh2048.pem 2048dh dh2048.pem# 网络拓扑结构# 应该为子网(通过IP寻址)# 除非必须支持Windows客户端v2.0.9及更低版本(net30即每个客户端/30)# 默认为&quot;net30&quot;(不建议);topology subnet# 设置服务器端模式，并提供一个VPN子网，以从中为客户端分配IP地址# 本例中服务器端自身占用10.8.0.1，其他的将分配给客户端使用# 每个客户端将能够通过10.8.0.1访问服务器# 如果使用的是以太网桥接模式，注释掉本行。更多信息请查看官方手册页面。server 10.8.0.0 255.255.255.0# 在此文件中维护客户端与虚拟IP地址之间的关联记录# 如果OpenVPN重启，重新连接的客户端可以被分配到先前分配的虚拟IP地址ifconfig-pool-persist ipp.txt# 该指令仅针对以太网桥接模式# 首先，必须使用操作系统的桥接能力将以太网网卡接口和TAP接口进行桥接# 然后，需要手动设置桥接接口的IP地址、子网掩码，这里假设为10.8.0.4和255.255.255.0# 最后，必须指定子网的一个IP范围(例如从10.8.0.50开始，到10.8.0.100结束)，以便于分配给连接的客户端# 如果不是以太网桥接模式，直接注释掉这行指令即可;server-bridge 10.8.0.4 255.255.255.0 10.8.0.50 10.8.0.100# 该指令仅针对使用DHCP代理的以太网桥接模式# 此时客户端将请求服务器端的DHCP服务器，从而获得分配给它的IP地址和DNS服务器地址# 在此之前，也需要先将以太网网卡接口和TAP接口进行桥接# 注意：该指令仅用于OpenVPN客户端(如Windows)，并且该客户端的TAP适配器需要绑定到一个DHCP客户端上;server-bridge# 推送路由信息到客户端，以允许客户端能够连接到服务器后的其他私有子网# 即允许客户端访问VPN服务器可访问的其他局域网# 记住，这些私有子网还需要将OpenVPN客户端地址池（10.8.0.0/255.255.255.0）路由回到OpenVPN服务器;push &quot;route 192.168.10.0 255.255.255.0&quot;;push &quot;route 192.168.20.0 255.255.255.0&quot;# 要为指定的客户端分配特定的IP地址，或者客户端后的私有子网也要访问VPN# 可以针对该客户端的配置文件使用ccd子目录# 请参阅手册页获取更多信息# 示例1：假设有个Common Name为&quot;Thelonious&quot;的客户端后有一个小型子网也要连接到VPN# 该子网为192.168.40.128/255.255.255.248# 首先，去掉下面两行指令的注释：;client-config-dir ccd;route 192.168.40.128 255.255.255.248# 然后创建一个文件ccd/Thelonious，该文件的内容为(没有&quot;#&quot;)：#   iroute 192.168.40.128 255.255.255.248# 客户端所在的子网就可以访问VPN了# 注意，这个指令只能在基于路由模式而不是基于桥接模式下才能生效# 比如，你使用了&quot;dev tun&quot;和&quot;server&quot;指令# 示例1：假设要给Thelonious分配一个固定的IP地址10.9.0.1# 首先，去掉下面两行指令的注释：;client-config-dir ccd;route 10.9.0.0 255.255.255.252# 然后在文件ccd/Thelonious中添加如下指令(没有&quot;#&quot;)：#   ifconfig-push 10.9.0.1 10.9.0.2# 如果想要为不同群组的客户端启用不同的防火墙访问策略，你可以使用如下两种方法：# (1)运行多个OpenVPN守护进程，每个进程对应一个群组，并为每个进程(群组)启用适当的防火墙规则# (2)(进阶)创建一个脚本来动态地修改响应于来自不同客户的防火墙规则# 关于learn-address脚本的更多信息请参考官方手册页面;learn-address ./script# 如果启用该行指令，所有客户端的默认网关都将重定向到VPN# 这将导致诸如web浏览器、DNS查询等所有客户端流量都经过VPN# (为确保能正常工作，OpenVPN服务器所在计算机可能需要在TUN/TAP接口与以太网之间使用NAT或桥接技术进行连接);push &quot;redirect-gateway def1 bypass-dhcp&quot;# 某些具体的Windows网络设置可以被推送到客户端，例如DNS或WINS服务器地址# 下列地址来自opendns.com提供的Public DNS服务器;push &quot;dhcp-option DNS 208.67.222.222&quot;;push &quot;dhcp-option DNS 208.67.220.220&quot;# 去掉该行指令的注释将允许不同的客户端之间互相访问# 默认情况，客户端只能访问服务器# 为了确保客户端只能看见服务器，还可以在服务器端的TUN/TAP接口上设置适当的防火墙规则;client-to-client# 如果多个客户端可能使用相同的证书/私钥文件或Common Name进行连接，那么可以取消该指令的注释# 建议该指令仅用于测试目的。对于生产环境使用而言，每个客户端都应该拥有自己的证书和私钥# 如果没有为每个客户端分别生成Common Name唯一的证书/私钥，可以取消该行的注释(不推荐这样做);duplicate-cn# keepalive指令将导致类似于ping命令的消息被来回发送，以便于服务器端和客户端知道对方何时被关闭# 每10秒钟ping一次，如果120秒内都没有收到对方的回复，则表示远程连接已经关闭keepalive 10 120# 出于SSL/TLS之外更多的安全考虑，创建一个&quot;HMAC 防火墙&quot;可以帮助抵御DoS攻击和UDP端口淹没攻击# 可以使用以下命令来生成：#   openvpn --genkey --secret ta.key## 服务器和每个客户端都需要拥有该密钥的一个拷贝# 第二个参数在服务器端应该为&#39;0&#39;，在客户端应该为&#39;1&#39;tls-auth ta.key 0  # 该文件应该保密# 选择一个密码加密算法，该配置项也必须复制到每个客户端配置文件中# 注意，v2.4客户端/服务器将自动以TLS模式协商AES-256-GCM，请参阅手册中的ncp-cipher选项cipher AES-256-CBC# 在VPN链接上启用压缩并将选项推送到客户端（仅适用于v2.4 +，对于早期版本，请参阅下文）;compress lz4-v2;push &quot;compress lz4-v2&quot;# 对于与旧客户端兼容的压缩，使用comp-lzo# 如果在此启用，还必须在客户端配置文件中启用它;comp-lzo# 允许并发连接的客户端的最大数量;max-clients 100# 初始化后减少OpenVPN守护进程的权限是一个好主意# 该指令仅限于非Windows系统中使用;user nobody;group nobody# 持久化选项可以尽量避免访问那些在重启之后由于用户权限降低而无法访问的某些资源persist-keypersist-tun# 输出一个简短的状态文件，用于显示当前的连接状态，该文件每分钟都会清空并重写一次status openvpn-status.log# 默认情况下，日志消息将写入syslog(在Windows系统中，如果以服务方式运行，日志消息将写入OpenVPN安装目录的log文件夹中)# 可以使用log或者log-append来改变这种默认设置# &quot;log&quot;方式在每次启动时都会清空之前的日志文件# &quot;log-append&quot;是在之前的日志内容后进行追加# 你可以使用两种方式之一(不要同时使用);log         openvpn.log;log-append  openvpn.log# 为日志文件设置适当的冗余级别(0~9)# 冗余级别越高，输出的信息越详细## 0 表示静默运行，只记录致命错误# 4 表示合理的常规用法# 5和6 可以帮助调试连接错误# 9 表示极度冗余，输出非常详细的日志信息verb 3# 忽略过多的重复信息# 相同类别的信息只有前20条会输出到日志文件中;mute 20# 通知客户端，当服务器重新启动时，可以自动重新连接# 只能是UDP协议使用，TCP使用的话不能启动服务explicit-exit-notify 1# （如果不添加该指令则）默认值3600，也就是一个小时进行一次TSL重新协商# 这个参数在服务端和客户端设置都有效# 如果两边都设置了，就按照时间短的设定优先# 当两边同时设置成0，表示禁用TSL重协商。使用OTP认证需要禁用reneg-sec 0</code></pre><h2 id="2-2-客户端配置文件"><a href="#2-2-客户端配置文件" class="headerlink" title="2.2. 客户端配置文件"></a>2.2. 客户端配置文件</h2><p><a href="https://github.com/OpenVPN/openvpn/blob/master/sample/sample-config-files/client.conf" target="_blank" rel="noopener">英文原文</a></p><pre><code class="shell">############################################### 多客户端的OpenVPN 2.0的客户端配置文件示例     ##                                            ## 该配置文件可以被多个客户端使用                ## 不过每个客户端都应该有自己的证书和密钥文件     ##                                            ## 在Windows上此配置文件的后缀应该是&quot;.ovpn&quot;     ## 在Linux/BSD系统中后缀是&quot;.conf&quot;              ################################################ 指定这是一个客户端，这将从服务器获取某些配置文件指令client# 使用与服务器上相同的设置# 在大多数系统中，除非部分禁用或者完全禁用了TUN/TAP接口的防火墙，否则VPN将不起作用;dev tapdev tun# 在Windows系统中，如果想配置多个隧道，则需要该指令# 需要用到网络连接面板中TAP-Win32适配器的名称(例如&quot;MyTap&quot;)# 在XP SP2或更高版本的系统中，可能需要禁用掉针对TAP适配器的防火墙;dev-node MyTap# 指定连接的服务器是采用TCP还是UDP协议# 使用与服务器上相同的设置;proto tcpproto udp# 指定服务器的主机名(或IP)以及端口号# 如果有多个VPN服务器，为了实现负载均衡，可以设置多个remote指令remote my-server-1 1194;remote my-server-2 1194# 如果指定了多个remote指令，启用该指令将随机连接其中的一台服务器# 否则，客户端将按照指定的先后顺序依次尝试连接服务器;remote-random# 启用该指令，与服务器连接中断后将自动重新连接，# 这在网络不稳定的情况下(例如：笔记本电脑无线网络)非常有用resolv-retry infinite# 大多数客户端不需要绑定本机特定的端口号nobind# 在初始化完毕后，降低OpenVPN的权限(该指令仅限于非Windows系统中使用);user nobody;group nobody# 持久化选项可以尽量避免访问在重启时由于用户权限降低而无法访问的某些资源persist-keypersist-tun# 如果通过HTTP代理方式来连接到实际的VPN服务器# 在此处指定代理服务器的主机名(或IP)和端口号# 如果代理服务器需要身份认证，请参考官方手册;http-proxy-retry  # 连接失败时自动重试;http-proxy [proxy server] [proxy port #]# 无线网络通常会产生大量的重复数据包# 设置此标识将忽略掉重复数据包的警告信息;mute-replay-warnings# SSL/TLS参数配置# 更多描述信息请参考服务器端配置文件# 最好为每个客户端单独分配.crt/.key文件对# 单个CA证书可以供所有客户端使用ca ca.crtcert client.crtkey client.key# 通过检查证书具有正确的密钥使用设置来验证服务器证书# 这是防止此处讨论的潜在攻击的重要预防措施：#  http://openvpn.net/howto.html#mitm## 要使用此功能，EasyRSA生成服务器证书的时候进行相关设置remote-cert-tls server# 如果在服务器上使用tls-auth密钥，那么每个客户端也必须拥有密钥tls-auth ta.key 1# 选择一个加密算法，服务器使用的算法选项，也必须在这里指定它# 注意，v2.4客户端/服务器将自动以TLS模式协商AES-256-GCM。# 另请参阅手册中的ncp-cipher选项cipher AES-256-CBC# 在VPN连接中启用压缩# 除非在服务器配置文件中启用，否则不要启用它;comp-lzo# 设置日志文件冗余级别(0~9)# 0 表示静默运行，只记录致命错误# 4 表示合理的常规用法# 5和6 可以帮助调试连接错误# 9 表示极度冗余，输出非常详细的日志信息verb 3# 忽略过多的重复信息# 相同类别的信息只有前20条会输出到日志文件中;mute 20# （如果不添加该指令则）默认值3600，也就是一个小时进行一次TSL重新协商# 这个参数在服务端和客户端设置都有效# 如果两边都设置了，就按照时间短的设定优先# 当两边同时设置成0，表示禁用TSL重协商。使用OTP认证需要禁用reneg-sec 0</code></pre>]]></content>
    
    <summary type="html">
    
      OpenVPN 配置文件说明
    
    </summary>
    
    
      <category term="OpenVPN篇" scheme="http://blog.joylau.cn/categories/OpenVPN%E7%AF%87/"/>
    
    
      <category term="OpenVPN" scheme="http://blog.joylau.cn/tags/OpenVPN/"/>
    
  </entry>
  
  <entry>
    <title>OpenVPN HOWTO 文档翻译</title>
    <link href="http://blog.joylau.cn/2020/05/27/OpenVPN-HowTO/"/>
    <id>http://blog.joylau.cn/2020/05/27/OpenVPN-HowTO/</id>
    <published>2020-05-27T03:53:31.000Z</published>
    <updated>2020-07-10T00:43:19.438Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="HOWTO"><a href="#HOWTO" class="headerlink" title="HOWTO"></a>HOWTO</h2><p><a href="https://openvpn.net/" target="_blank" rel="noopener">OpenVPN</a>（OpenVPN官网所有内容需科学上网才能访问）是一个功能齐全的SSL VPN，它使用行业标准的SSL/TLS协议实现了OSI模型第2层（数据链路层）或第3层（网络层）的安全网络扩展。OpenVPN支持基于证书、智能卡以及用户名/密码等多种形式的灵活的客户端认证方法，并可以通过应用于VPN虚拟接口的防火墙规则为指定用户或用户组设置访问控制策略。</p><p>原文地址: <a href="https://openvpn.net/community-resources/how-to/" target="_blank" rel="noopener">https://openvpn.net/community-resources/how-to/</a></p><ul><li><a href="#11-安装openvpn">1.1. 安装OpenVPN</a></li><li><a href="#12-选择使用路由还是桥接">1.2. 选择使用路由还是桥接</a></li><li><a href="#13-设置私有子网">1.3. 设置私有子网</a></li><li><a href="#14-创建证书">1.4. 创建证书</a></li><li><a href="#15-创建配置文件">1.5. 创建配置文件</a></li><li><a href="#16-启动vpn并测试">1.6. 启动VPN并测试</a></li><li><a href="#17-系统启动时自动运行">1.7. 系统启动时自动运行</a></li><li><a href="#18-控制运行中的openvpn进程">1.8. 控制运行中的OpenVPN进程</a></li><li><a href="#19-服务器或客户端子网中的其他计算机互相访问">1.9. 服务器或客户端子网中的其他计算机互相访问</a><ul><li><a href="#191-防火墙规则">1.9.1. 防火墙规则</a></li></ul></li><li><a href="#110-推送dhcp选项到客户端">1.10. 推送DHCP选项到客户端</a></li><li><a href="#111-为指定客户端配置规则和访问策略">1.11. 为指定客户端配置规则和访问策略</a></li><li><a href="#112-使用其他身份验证方式">1.12. 使用其他身份验证方式</a></li><li><a href="#113-使用客户端的智能卡实现双重认证">1.13. 使用客户端的智能卡实现双重认证</a></li><li><a href="#114-路由所有客户端流量通过vpn">1.14. 路由所有客户端流量通过VPN</a></li><li><a href="#115-在动态ip地址上运行openvpn服务器">1.15. 在动态IP地址上运行OpenVPN服务器</a></li><li><a href="#116-通过http代理连接openvpn服务器">1.16. 通过HTTP代理连接OpenVPN服务器</a></li><li><a href="#117-通过openvpn连接samba网络共享服务器">1.17. 通过OpenVPN连接Samba网络共享服务器</a></li><li><a href="#118-实现负载均衡故障转移的配置">1.18. 实现负载均衡/故障转移的配置</a></li><li><a href="#119-增强openvpn的安全性">1.19. 增强OpenVPN的安全性</a></li><li><a href="#120-撤销证书">1.20. 撤销证书</a></li><li><a href="#121-关于中间人攻击的重要注意事项">1.21. 关于中间人攻击的重要注意事项</a></li></ul><h2 id="1-1-安装OpenVPN"><a href="#1-1-安装OpenVPN" class="headerlink" title="1.1. 安装OpenVPN"></a>1.1. 安装OpenVPN</h2><p><a href="https://openvpn.net/index.php/open-source/documentation/howto.html#install" target="_blank" rel="noopener">英文原文</a></p><p>可以<a href="https://openvpn.net/index.php/open-source/downloads.html" target="_blank" rel="noopener">在这里</a>下载OpenVPN源代码和Windows安装程序。最近的版本(2.2及以后版本)也发布了Debian和RPM包(.deb和.rpm)。详情查看<a href="https://community.openvpn.net/openvpn" target="_blank" rel="noopener">OpenVPN wiki</a>。出于安全考虑，建议下载完毕后检查一下文件的<a href="https://openvpn.net/index.php/open-source/documentation/sig.html" target="_blank" rel="noopener">签名信息</a>。OpenVPN可执行文件提供了服务器和客户端的所有功能，因此服务器和客户端都需要安装OpenVPN的可执行文件。</p><p><strong>Linux安装事项（使用RPM包管理工具）</strong></p><p>如果你使用的Linux发行版支持RPM包管理工具，例如：RedHat、CentOS、Fedora、SUSE等。最好使用这种方法来安装。最简单的方法就是找到一个可以在当前Linux发行版上使用的二进制RPM文件。你也可以使用如下命令创建(build)你自己的二进制RPM文件：</p><pre><code class="shell">rpmbuild -tb openvpn-[version].tar.gz</code></pre><p>有了<code>.rpm</code>格式的文件，就可以使用如下常规命令来安装它。</p><pre><code class="shell">rpm -ivh openvpn-[details].rpm</code></pre><p>或者升级现有的OpenVPN版本：</p><pre><code class="shell">rpm -Uvh openvpn-[details].rpm</code></pre><p>安装OpenVPN的RPM包，需要如下这些依赖软件包：</p><ul><li>openssl （SSL协议及相关内容的开源实现）</li><li>lzo （无损压缩算法）</li><li>pam （身份验证模块）</li></ul><p>此外，如果自己创建(build)二进制RPM包，需要如下几个依赖：</p><ul><li>openssl-devel</li><li>lzo-devel</li><li>pam-devel</li></ul><p>可以查看<a href="https://openvpn.net/index.php/open-source/documentation/install.html#rpm" target="_blank" rel="noopener">openvpn.spec</a>文件，该文件包含了在RedHat Linux 9上创建RPM包，或者在减少依赖的情况下创建RPM包的更多信息。</p><p><strong>Linux安装事项（非RPM）</strong></p><p>如果你使用的系统是Debian、Gentoo或其他不基于RPM的Linux发行版，你可以使用当前发行版指定的软件包管理机制，例如Debian的<code>apt-get</code>或者Gentoo的<code>emerge</code>。</p><pre><code class="shell">apt-get install openvpn  # 使用apt-get安装OpenVPNemerge openvpn  # 使用emerge安装OpenVPN</code></pre><p>也可以使用常规的<code>./configure</code>方法在安装Linux上安装OpenVPN。首先，解压<code>.tar.gz</code>文件：</p><pre><code class="shell">tar xfz openvpn-[version].tar.gz</code></pre><p>然后跳转到OpenVPN的顶级目录（<code>top-level directory</code>实际上就是OpenVPN解压后的目录），输入：</p><pre><code class="shell">./configuremakemake install</code></pre><p>通过<code>./configure</code>方式进行OpenVPN的编译安装之前，仍然需要先安装OpenVPN的依赖软件包<code>openssl</code>、<code>lzo</code>、<code>pam</code>。</p><p><strong>Windows安装事项</strong></p><p>对Windows系统而言，可以直接在下载exe格式的可执行文件来安装OpenVPN。OpenVPN只能够在Windows XP及以上版本的系统中运行。还要注意，必须具备管理员权限才能够安装运行OpenVPN（该限制是Windows自身造成的，而不是OpenVPN）。安装OpenVPN之后，你可以用Windows后台服务的方式启动OpenVPN来绕过该限制；在这种情况下，非管理员用户也能够正常访问VPN。你可以点击查看<a href="http://openvpn.se/files/howto/openvpn-howto_run_openvpn_as_nonadmin.html" target="_blank" rel="noopener">关于OpenVPN + Windows权限问题的更多讨论</a>。</p><p>官方版的OpenVPN Windows安装程序自带<a href="https://community.openvpn.net/openvpn/wiki/OpenVPN-GUI" target="_blank" rel="noopener">OpenVPN GUI</a>，OpenVPN GUI允许用户通过一个托盘程序来管理OpenVPN连接。也可以使用其他的<a href="https://community.openvpn.net/openvpn/wiki/OpenVPN-GUI" target="_blank" rel="noopener">GUI程序</a>。</p><p>安装OpenVPN之后，OpenVPN将会与扩展名为<code>.ovpn</code>的文件进行关联。想要运行OpenVPN，可以：</p><ul><li>右键点击OpenVPN配置文件<code>.ovpn</code>，在弹出的关联菜单中选择【Start OpenVPN on this configuration file】即可使用该配置文件启动OpenVPN。运行OpenVPN后，可以使用快捷键<code>F4</code>来退出程序。</li><li>以命令提示符的方式运行OpenVPN，例如：<code>openvpn myconfig.ovpn</code>。运行之后，同样可以使用快捷键<code>F4</code>来退出VPN。</li><li>在OpenVPN安装路径<code>/config</code>目录（一般默认为<code>C:\Program Files\OpenVPN\config</code>）中放置一个或多个<code>.ovpn</code>格式的配置文件，然后启动名为OpenVPN Service的Windows服务。你可以点击【开始】-&gt;【控制面板】-&gt;【管理工具】-&gt;【服务】，从而进入Windows服务管理界面。</li></ul><p><strong>Mac OS X安装事项</strong></p><p>Angelo Laub和Dirk Theisen已经开发出了<a href="https://tunnelblick.net/" target="_blank" rel="noopener">OpenVPN GUI for OS X</a>。</p><p><strong>其他操作系统</strong></p><p>通常情况下，其他操作系统也可以使用<code>./configure</code>方法来安装OpenVPN，或者也可以自行查找一个适用于你的操作系统/发行版的OpenVPN接口或安装包。</p><pre><code class="shell">./configuremakemake install</code></pre><p>更多安装说明参阅<a href="https://openvpn.net/index.php/open-source/documentation/install.html?start=1" target="_blank" rel="noopener">这里</a>。</p><h2 id="1-2-选择使用路由还是桥接"><a href="#1-2-选择使用路由还是桥接" class="headerlink" title="1.2. 选择使用路由还是桥接"></a>1.2. 选择使用路由还是桥接</h2><p><a href="https://openvpn.net/index.php/open-source/documentation/howto.html#vpntype" target="_blank" rel="noopener">英文原文</a></p><p>查看“路由 VS. 以太网桥接”的<a href="https://community.openvpn.net/openvpn/wiki/FAQ#bridge1" target="_blank" rel="noopener">FAQ</a>。也可以查看OpenVPN<a href="https://openvpn.net/index.php/open-source/documentation/miscellaneous/76-ethernet-bridging.html" target="_blank" rel="noopener">以太网桥接</a>页面以了解关于桥接的更多事项和细节。</p><p>总的来说，对于大多数人而言，“路由模式”可能是更好的选择，因为它可以比“桥接模式”更高效更简单地搭建一个VPN（基于OpenVPN自带的配置）。路由模式还提供了更强大的对指定客户端的访问权限进行控制的能力。</p><p>推荐使用“路由模式”，除非你需要用到只有“桥接模式”才具备的某些功能特性，例如：</p><ul><li>VPN需要处理非IP协议，例如IPX。</li><li>在VPN网络中运行的应用程序需要用到网络广播(network broadcasts)，例如：局域网游戏。</li><li>你想要在没有Samba或WINS服务器的情况下，能够通过VPN浏览Windows文件共享。</li></ul><h2 id="1-3-设置私有子网"><a href="#1-3-设置私有子网" class="headerlink" title="1.3. 设置私有子网"></a>1.3. 设置私有子网</h2><p><a href="https://openvpn.net/index.php/open-source/documentation/howto.html#numbering" target="_blank" rel="noopener">英文原文</a></p><p>创建一个VPN需要借助私有子网将不同地方的成员连接在一起。</p><p>互联网号码分配机构(IANA)专为私有网络保留了以下三块IP地址空间(制定于RFC 1918规范中)：</p><ul><li>10.0.0.0-10.255.255.255(10/8 prefix)</li><li>172.16.0.0-172.31.255.255(172.16/12 prefix)</li><li>192.168.0.0-192.168.255.255(192.168/16 prefix)</li></ul><p>在VPN配置中使用这些地址。对选择IP地址并将IP地址冲突或子网冲突的发生概率降到最低而言，这一点非常重要。以下是需要避免的冲突类型：</p><ul><li>VPN中不同的网络场所使用相同的局域网子网编号所产生的冲突。</li><li>远程访问连接自身使用的私有子网与VPN的私有子网发生冲突。</li></ul><p>简而言之，处于不同局域网的客户端和客户端之间，它们自身所在的局域网IP段不要发生冲突；客户端自身所在的局域网IP段也不要和VPN使用的局域网IP段发生冲突。</p><p>举个例子，假设你使用了流行的<code>192.168.0.0/24</code>作为VPN子网。现在，你尝试在一个网吧内连接VPN，该网吧的WIFI局域网使用了相同的子网。这将产生一个路由冲突，因为计算机不知道<code>192.168.0.1</code>是指本地WIFI的网关，还是指VPN上的相同地址。</p><p>再举个例子，假设你想通过VPN将多个网络场所连接在一起，但是每个网络场所都使用了<code>192.168.0.0/24</code>作为自己的局域网子网。如果不添加一个复杂的NAT翻译层，它们将无法工作。因为这些网络场所没有唯一的子网来标识它们自己，VPN不知道如何在多个网络场所之间路由数据包。</p><p>最佳的解决方案是避免使用<code>10.0.0.0/24</code>或者<code>192.168.0.0/24</code>作为VPN的私有子网。相反，你应该使用一些在你可能连接VPN的场所（例如咖啡厅、酒店、机场）不太可能使用的私有子网。最佳的候选者应该是在浩瀚的<code>10.0.0.0/8</code>网络块中间选择一个子网（例如：<code>10.66.77.0/24</code>）。</p><p>总的来说，为了避免跨多个网络场所的IP编号冲突，请始终使用唯一的局域网子网编号。</p><h2 id="1-4-创建证书"><a href="#1-4-创建证书" class="headerlink" title="1.4. 创建证书"></a>1.4. 创建证书</h2><p><a href="https://openvpn.net/index.php/open-source/documentation/howto.html#pki" target="_blank" rel="noopener">英文原文</a></p><p>以下并非按照原文来的。</p><p>可以从发行版软件仓库直接安装，安装后操作如下：</p><p><code>cd /usr/share/easy-rsa/2.0</code></p><p>编辑<code>vars</code>文件：</p><pre><code class="shell"># 密钥长度为2048，如果是1024可改为2048export KEY_SIZE=2048# CA证书有效时间3650天，根据需要修改export CA_EXPIRE=3650# 密钥有效时间3650天，根据需要修改export KEY_EXPIRE=3650export KEY_COUNTRY=&quot;CN&quot;  # 国家export KEY_PROVINCE=&quot;SC&quot;  # 省份export KEY_CITY=&quot;CD&quot;  # 城市export KEY_ORG=&quot;x&quot;  # 组织机构export KEY_EMAIL=&quot;x@x.com&quot;  # 邮箱export KEY_OU=&quot;x&quot;  # 单位或部门export KEY_NAME=&quot;OpenVPNServer&quot;  # openvpn服务器的名称</code></pre><p><code>source ./vars</code>  # 初始化</p><p><code>./clean-all</code>  # 清理keys</p><p><code>./build-ca</code>  # 生成<code>ca.crt</code>和<code>ca.key</code></p><p><code>./build-key-server server</code>  # 生成<code>server.crt</code>，<code>server.csr</code>和<code>server.key</code></p><p><code>./build-dh</code>  # 生成<code>dh2048.pem</code></p><p><code>openvpn --genkey --secret ta.key</code>  # 生成<code>ta.key</code></p><p>keys文件详解可<a href="http://www.williamlong.info/archives/3814.html" target="_blank" rel="noopener">参考这里</a>。</p><p>GitHub上的easy-rsa最新版本为easy-rsa3，生成证书命令有一些变化，如下操（有问题可官网查看或运行<code>./easyrsa help</code>）：</p><pre><code class="shell">wget https://github.com/OpenVPN/easy-rsa/archive/master.zipunzip master.zipcd easy-rsa-master/easyrsa3cp vars.example vars</code></pre><p>编辑<code>vars</code>文件：</p><pre><code class="shell"># 取消注释并修改对应内容set_var EASYRSA_REQ_COUNTRY    &quot;US&quot;  # 国家set_var EASYRSA_REQ_PROVINCE   &quot;California&quot;  # 省份set_var EASYRSA_REQ_CITY       &quot;San Francisco&quot;  # 城市set_var EASYRSA_REQ_ORG        &quot;Copyleft Certificate Co&quot;  # 组织机构set_var EASYRSA_REQ_EMAIL      &quot;me@example.net&quot;  # 邮箱set_var EASYRSA_REQ_OU         &quot;My Organizational Unit&quot;  # 单位或部门set_var EASYRSA_KEY_SIZE       2048  # 密钥长度2048set_var EASYRSA_CA_EXPIRE       3650  # CA有效期3650天set_var EASYRSA_CERT_EXPIRE     3650  # CERT有效期3650天# 客户端使用--ns-cert-type，取消下行注释并改值改为yes，（一般不推荐使用，而推荐使用--remote-cert-tls功能）#set_var EASYRSA_NS_SUPPORT     &quot;no&quot;# 其他内容可以根据自己需要修改</code></pre><p>保存后继续运行，生成服务器端证书：</p><pre><code class="shell">./easyrsa init-pki  # 初始化，会清空已有信息，并在当前目录创建PKI目录，用于存储一些中间变量及最终生成的证书./easyrsa build-ca  # 创建根证书，会提示设置密码，用于ca对之后生成的server和client证书签名时使用，然后提示设置Common Name./easyrsa gen-req server nopass  # 创建server证书和private key，nopass表示不加密private key，然后提示设置Common Name（使用与上一步不同的）./easyrsa sign-req server server  # 给server证书签名，确认信息后输入yes，然后输入build-ca时设置的密码./easyrsa gen-dh  # 创建Diffie-Hellman</code></pre><p>OpenVPN服务端需要的文件如下：</p><p><code>easyrsa3/pki/ca.crt</code></p><p><code>easyrsa3/pki/private/server.key</code></p><p><code>easyrsa3/pki/issued/server.crt</code></p><p><code>easyrsa3/pki/dh.pem</code></p><p><code>openvpn --genkey --secret ta.key</code>  # 生成<code>ta.key</code>的命令相同</p><p>生成客户端证书（如果客户端不使用证书认证，这一步就不需要了），在与上面生成服务端证书的easy-rsa不同的文件夹重新解压一次（网上查的资料说是在新目录重新生成，不知道可否直接在刚才的目录使用，未测试，如果要测试注意不要再次运行<code>./easyrsa init-pki</code>），进入新的<code>easy-rsa-master/easyrsa3</code>目录后同样设置一下<code>vars</code>文件，然后开始生成证书：</p><pre><code class="shell">./easyrsa init-pki./easyrsa gen-req client1 nopass  # 创建client1证书和private key，nopass表示不加密private key，然后提示设置Country Name（设置与上面不同的）</code></pre><p>切换到前面生成CA的目录，运行：</p><pre><code class="shell">./easyrsa import-req [上一步生成客户端证书的路径]/easyrsa3/pki/reqs/client1.req client1  # 导入req./easyrsa sign-req client client1  # # 给client1证书签名，确认信息后输入yes，然后输入build-ca时设置的密码</code></pre><p>文件位置如下：</p><p><code>easyrsa3/pki/issued/client.crt</code></p><p><code>easyrsa3/pki/private/client.key</code></p><p><strong>证书相关文件</strong></p><table><thead><tr><th>文件名</th><th>谁需要</th><th>作用</th><th>是否需保密</th></tr></thead><tbody><tr><td>ca.crt</td><td>服务器 + 所有客户端</td><td>根CA证书</td><td>NO</td></tr><tr><td>ca.key</td><td>密钥签名机</td><td>根CA密钥</td><td>YES</td></tr><tr><td>dh{n}.pem</td><td>服务器</td><td>迪菲·赫尔曼参数</td><td>NO</td></tr><tr><td>server.crt</td><td>服务器</td><td>服务器证书</td><td>NO</td></tr><tr><td>server.key</td><td>服务器</td><td>服务器密钥</td><td>YES</td></tr><tr><td>client1.crt</td><td>client1</td><td>Client1证书</td><td>NO</td></tr><tr><td>client1.key</td><td>client1</td><td>Client1密钥</td><td>YES</td></tr><tr><td>client2.crt</td><td>client2</td><td>Client2证书</td><td>NO</td></tr><tr><td>client2.key</td><td>client2</td><td>Client2密钥</td><td>YES</td></tr></tbody></table><p>关于证书、密钥安全性的问题可查看原文。</p><h2 id="1-5-创建配置文件"><a href="#1-5-创建配置文件" class="headerlink" title="1.5. 创建配置文件"></a>1.5. 创建配置文件</h2><p><a href="https://openvpn.net/index.php/open-source/documentation/howto.html#config" target="_blank" rel="noopener">英文原文</a></p><p><strong>取得示例配置文件</strong></p><p>最好使用[OpenVPN示例配置文件](../2. 配置文件说明.html)作为配置起点。这些文件可以在下列地方找到：</p><ul><li>OpenVPN源代码版的<code>sample-config-files</code>目录。</li><li>如果通过RPM或DEB来安装OpenVPN，则为<code>/usr/share/doc/packages/openvpn</code>或<code>/usr/share/doc/openvpn</code>中的<code>sample-config-files</code>目录。</li><li>Windows系统中的【开始】-&gt;【所有程序】-&gt;【OpenVPN】-&gt;【Shortcuts】-&gt;【OpenVPN Sample Configuration Files】，也就是OpenVPN安装路径<code>/sample-config</code>目录。</li></ul><p>注意：在Linux、BSD或类Unix系统中，示例配置文件叫做<code>server.conf</code>和<code>client.conf</code>。在Windows中叫做<code>server.ovpn</code>和<code>client.ovpn</code>。</p><p><strong>编辑服务器端配置文件</strong></p><p>服务器端配置文件示例是OpenVPN服务器端配置的最佳起始点。</p><p>该示例配置将使用一个虚拟的TUN网络接口（路由模式），在UDP端口1194（OpenVPN的官方端口号）监听远程连接，并从子网<code>10.8.0.0/24</code>中为连接的客户端分配虚拟地址。</p><p>在使用示例配置文件之前，先编辑<code>ca</code>、<code>cert</code>、<code>key</code>、<code>dh</code>参数，将它们分别指向对应文件。</p><p>此时，服务器端配置文件是可用的，但可以进一步自定义该文件：</p><ul><li>如果你使用的是<a href="https://openvpn.net/index.php/open-source/documentation/miscellaneous/76-ethernet-bridging.html" target="_blank" rel="noopener">以太网桥接</a>模式，必须使用<code>server-bridge</code>和<code>dev tap</code>指令来替代<code>server</code>和<code>dev tun</code>指令。</li><li>如果想让你的OpenVPN服务器监听一个TCP端口，而不是UDP端口，使用<code>proto tcp</code>替代<code>proto udp</code>（如果想同时监听UDP和TCP端口，必须启动两个单独的OpenVPN实例）。</li><li>如果你想使用<code>10.8.0.0/24</code>范围之外的虚拟IP地址，修改<code>server</code>指令。记住，虚拟IP地址范围必须是一个你当前网络未使用的私有范围。</li><li>如果你想让通过VPN连接的客户端和客户端之间能够互访，启用<code>client-to-client</code>指令（去掉注释）。默认情况下，客户端只能够访问服务器。</li><li>如果你正在使用Linux、BSD或类Unix操作系统，你可以使启用<code>user nobody</code>和<code>group nobody</code>指令来提高安全性。</li></ul><p>如果想要在同一计算机上运行多个OpenVPN实例，每一个示例都应该使用不同的配置文件。可能存在下列情形：</p><ul><li>每个示例使用不同的端口号（UDP和TCP协议使用不同的端口空间，因此你可以运行一个后台进程并同时监听UDP-1194和TCP-1194）。</li><li>如果你使用的是Windows系统，每个OpenVPN配置都需要有自己的TAP-Windows适配器。你可以通过【开始】-&gt;【所有程序】-&gt;【TAP-Windows】-&gt;【Add a new TAP-Windows virtual ethernet adapter】来添加一个额外的适配器。</li><li>如果你运行多个相同目录的OpenVPN实例，请确保编辑那些会创建输出文件的指令，以便于多个实例不会覆盖掉对方的输出文件。这些指令包括<code>log</code>、<code>log-append</code>、<code>status</code>和<code>ifconfig-pool-persist</code>。</li></ul><p><strong>编辑客户端配置文件</strong></p><p>客户端配置示例文件（在Linux/BSD/Unix中为<code>client.conf</code>，在Windows中为<code>client.ovpn</code>）参照了服务器配置示例文件的默认指令设置。</p><ul><li>与服务器配置文件类似，首先编辑<code>ca</code>、<code>cert</code>和<code>key</code>参数，使它们指向对应文件。注意，每个客户端都应该有自己的证书/密钥对。只有<code>ca</code>文件是OpenVPN和所有客户端通用的。</li><li>下一步，编辑<code>remote</code>指令，将其指向OpenVPN服务器的主机名/IP地址和端口号（如果OpenVPN服务器在防火墙或NAT网关之后的单网卡机器上运行，请使用网关的公网IP地址，和你在网关中配置的转发到OpenVPN服务器的端口号）。</li><li>最后，确保客户端配置文件和用于服务器配置的指令保持一致。主要检查dev（dev或tap）和proto（udp或tcp）指令是否一致。此外，如果服务器和客户端配置文件都使用了<code>comp-lzo</code>和<code>fragment</code>指令，也需要保持一致。</li></ul><h2 id="1-6-启动VPN并测试"><a href="#1-6-启动VPN并测试" class="headerlink" title="1.6. 启动VPN并测试"></a>1.6. 启动VPN并测试</h2><p><a href="https://openvpn.net/index.php/open-source/documentation/howto.html#start" target="_blank" rel="noopener">英文原文</a></p><p><strong>启动服务器</strong></p><p>首先，确保OpenVPN服务器能够正常连接网络。这意味着：</p><ul><li>开启防火墙上的UDP-1194端口（或者你配置的其他端口）。</li><li>或者，创建一个端口转发规则，将防火墙/网关的UDP-1194端口转发到运行OpenVPN服务器的计算机上。</li></ul><p>下一步，<a href="https://community.openvpn.net/openvpn/wiki/FAQ#firewall" target="_blank" rel="noopener">确保TUN/TAP接口没有被防火墙屏蔽</a>。</p><p>为了简化故障排除，最好使用命令行来初始化启动OpenVPN服务器（或者在Windows上右击.ovpn文件），而不是以后台进程或服务的方式启动：</p><pre><code class="shell">openvpn [服务器配置文件]</code></pre><p>正常的服务器启动应该像这样：</p><pre><code class="shell">Sun Feb  6 20:46:38 2005 OpenVPN 2.0_rc12 i686-suse-linux [SSL] [LZO] [EPOLL] built on Feb  5 2005Sun Feb  6 20:46:38 2005 Diffie-Hellman initialized with 1024 bit keySun Feb  6 20:46:38 2005 TLS-Auth MTU parms [ L:1542 D:138 EF:38 EB:0 ET:0 EL:0 ]Sun Feb  6 20:46:38 2005 TUN/TAP device tun1 openedSun Feb  6 20:46:38 2005 /sbin/ifconfig tun1 10.8.0.1 pointopoint 10.8.0.2 mtu 1500Sun Feb  6 20:46:38 2005 /sbin/route add -net 10.8.0.0 netmask 255.255.255.0 gw 10.8.0.2Sun Feb  6 20:46:38 2005 Data Channel MTU parms [ L:1542 D:1450 EF:42 EB:23 ET:0 EL:0 AF:3/1 ]Sun Feb  6 20:46:38 2005 UDPv4 link local (bound): [undef]:1194Sun Feb  6 20:46:38 2005 UDPv4 link remote: [undef]Sun Feb  6 20:46:38 2005 MULTI: multi_init called, r=256 v=256Sun Feb  6 20:46:38 2005 IFCONFIG POOL: base=10.8.0.4 size=62Sun Feb  6 20:46:38 2005 IFCONFIG POOL LISTSun Feb  6 20:46:38 2005 Initialization Sequence Completed</code></pre><p><strong>启动客户端</strong></p><p>和服务器端配置一样，最好使用命令行来初始化启动OpenVPN客户端（在Windows上，也可以直接右击client.ovpn文件），而不是以后台进程或服务的方式来启动。</p><pre><code class="shell">openvpn [客户端配置文件]</code></pre><p>Windows上正常的客户端启动看起来与前面服务器端的输出非常相似，并且应该以<code>Initialization Sequence Completed</code>信息作为结尾。</p><p>尝试从客户端通过VPN发送<code>ping</code>命令。</p><p>如果你使用的是路由模式（例如：在服务器配置文件中设置<code>dev tun</code>），运行：</p><pre><code class="shell">ping 10.8.0.1</code></pre><p>如果使用桥接模式（例如：在服务器配置文件中设置<code>dev tap</code>），尝试ping一个服务器端的以太网子网中的IP地址。</p><p>如果能够<code>ping</code>成功，那么就连接成功了。</p><p><strong>故障排除</strong></p><p>如果<code>ping</code>失败或者无法完成OpenVPN客户端的初始化，这里列出了一个常见问题以及对应解决方案的清单：</p><p>1、得到错误信息：<code>TLS Error: TLS key negotiation failed to occur within 60 seconds (check your network connectivity)</code>。该错误表明客户端无法与服务器建立一个网络连接。</p><p>解决方案：</p><ul><li>确保客户端配置中使用的服务器主机名/IP地址和端口号是正确的。</li><li>如果OpenVPN服务器所在计算机只有单个网卡，并处于受保护的局域网内，请确保服务器端的网关防火墙使用了正确的端口转发规则。举个例子，假设你的OpenVPN服务器在某个局域网内，IP为<code>192.168.4.4</code>，并在UDP端口1194上监听客户端连接。服务于子网<code>192.168.4.x</code>的NAT网关应该有一个端口转发规则，该规则将公网IP地址的UDP端口1194转发到<code>192.168.4.4</code>。</li><li>打开服务器防火墙，允许外部连接通过UDP-1194端口（或者在服务器配置文件中设置的其他端口）。</li></ul><p>2、得到错误信息：<code>Initialization Sequence Completed with errors</code>。该错误发生在：(a)你的Windows系统没有一个正在运行的DHCP客户端服务，(b)或者你在XP SP2上使用了某些第三方的个人防火墙。</p><p>解决方案：</p><ul><li>启动DHCP客户端服务器，并确保在XP SP2系统中使用的是一个工作正常的个人防火墙。</li></ul><p>3、得到信息<code>Initialization Sequence Completed</code>但是<code>ping</code>测试失败。这通常意味着服务器或客户端的防火墙屏蔽了TUN/TAP接口，从而阻塞了VPN网络。</p><p>解决方案：</p><ul><li>禁用客户端TUN/TAP接口上的防火墙（如果存在的话）。以Windows XP SP2为例，你可以进入【Windows安全中心】-&gt;【Windows 防火墙】-&gt;【高级】，并取消选中TAP-Windows适配器前面的复选框（从安全角度来说，禁止客户端防火墙屏蔽TUN/TAP接口通常是合理的，这是在告诉防火墙不要阻止可信的VPN流量）。此外，也需要确保服务器的TUN/TAP接口没有被防火墙屏蔽（不得不说的是，选择性地设置服务器端TUN/TAP接口的防火墙有助于提高一定的安全性，请参考访问策略部分）。</li><li>笔者注：也有可能本身已连通但是<code>ping</code>的主机防火墙阻止了ICMP，可以进行相关设置后再尝试</li></ul><p>4、当采用UDP协议的配置启动时，出现连接中断，并且服务器日志文件显示下行：</p><pre><code class="shell">TLS: Initial packet from x.x.x.x:x, sid=xxxxxxxx xxxxxxxx</code></pre><p>但客户端的日志文件不会显示相同的信息。</p><p>解决方案：</p><ul><li>你只有一个从客户端到服务器的单向连接。而从服务器到客户端的方向则被（通常是客户端这边的）防火墙阻挡了。该防火墙可能是运行于客户端的个人软件防火墙，或是客户端的NAT路由网关。请修改防火墙以允许从服务器到客户端的UDP数据包返回。</li></ul><p>想了解更多额外的故障排除信息，请查看<a href="https://community.openvpn.net/openvpn/wiki/FAQ" target="_blank" rel="noopener">FAQ</a>。</p><h2 id="1-7-系统启动时自动运行"><a href="#1-7-系统启动时自动运行" class="headerlink" title="1.7. 系统启动时自动运行"></a>1.7. 系统启动时自动运行</h2><p><a href="https://openvpn.net/index.php/open-source/documentation/howto.html#startup" target="_blank" rel="noopener">英文原文</a></p><p>关于这个问题并没有所谓的标准答案，也就是说大多数系统都有不同的方式来配置在系统启动时自动运行后台进程/服务。想要默认就具备该功能设置的最佳方式就是以软件包的形式安装OpenVPN，例如通过Linux系统的RPM、DEB或者使用Windows安装程序。</p><p><strong>Linux系统</strong></p><p>如果在Linux上通过RPM或DEB软件包来安装OpenVPN，安装程序将创建一个<code>initscript</code>。执行该脚本，<code>initscript</code>将会扫描<code>/etc/openvpn</code>目录下<code>.conf</code>格式的配置文件，如果能够找到，将会为每个文件分别启动一个独立的OpenVPN后台进程。</p><p><strong>Windows系统</strong></p><p>Windows安装程序将会建立一个服务器包装器(Service Wrapper)，不过默认情况下其处于关闭状态。如果想激活它，请进入【控制面板】-&gt;【管理工具】-&gt;【服务】，然后右键点击”OpenVPN Service”，在弹出的关联菜单中单击【属性】，并将属性面板中的”启动类型”设为”自动”。OpenVPN服务将会在下次重启系统时自动运行。</p><p>启动后，OpenVPN服务包装器将会扫描OpenVPN安装路径<code>/config</code>文件夹下<code>.ovpn</code>格式的配置文件，然后为每个文件启动一个单独的OpenVPN进程。</p><h2 id="1-8-控制运行中的OpenVPN进程"><a href="#1-8-控制运行中的OpenVPN进程" class="headerlink" title="1.8. 控制运行中的OpenVPN进程"></a>1.8. 控制运行中的OpenVPN进程</h2><p><a href="https://openvpn.net/index.php/open-source/documentation/howto.html#control" target="_blank" rel="noopener">英文原文</a></p><p><strong>运行于Linux/BSD/Unix</strong></p><ul><li>SIGUSR1  # 有条件的重新启动，设计用于没有root权限的重启</li><li>SIGHUP  # 硬重启</li><li>SIGUSR2  # 输出连接统计信息到日志文件或syslog中</li><li>SIGTERM, SIGINT  # 退出</li></ul><p>使用<code>writepid</code>指令将OpenVPN的后台进程PID写入到一个文件中，这样你就知道该向哪里发送信号（如果以<code>initscript</code>方式启动OpenVPN，该脚本可能已经通过openvpn命令行中的指令–writepid达到了该目的）。</p><p><strong>以GUI形式在Windows上运行</strong></p><p>请查看<a href="https://community.openvpn.net/openvpn/wiki/OpenVPN-GUI" target="_blank" rel="noopener">OpenVPN GUI页面</a>。</p><p><strong>运行于Windows命令提示符窗口</strong></p><p>在Windows中，可以通过右击一个OpenVPN配置文件（.ovpn文件），然后选择“Start OpenVPN on this config file”来启动OpenVPN。</p><p>一旦以这种方式运行，你可以使用如下几种按键命令：</p><ul><li><code>F1</code>  # 有条件的重启(无需关闭/重新打开TAP适配器)</li><li><code>F2</code>  # 显示连接统计信息</li><li><code>F3</code>  # 硬重启</li><li><code>F4</code>  # 退出</li></ul><p><strong>以Windows服务方式运行</strong></p><p>在Windows中，当OpenVPN以服务方式启动时，控制方式是：</p><ul><li>通过服务控制管理器（控制面板-&gt;管理工具-&gt;服务），其中提供了启动/终止操作。</li><li>通过管理接口（详情参考下面）。</li></ul><p><strong>修改使用中的OpenVPN配置</strong></p><p>虽然大多数配置更改必须重启服务器才能生效，但仍然有两个指令可以用于文件动态更新，并且能够直接生效而无需重启服务器进程。</p><ul><li><code>client-config-dir</code>  # 该指令设置一个客户端配置文件夹，OpenVPN服务器将会在每个外部连接到来时扫描该目录中的文件，用以查找为当前连接指定的客户端配置文件（详情查看<a href="https://openvpn.net/index.php/open-source/documentation/manuals/65-openvpn-20x-manpage.html" target="_blank" rel="noopener">手册页面</a>）。该目录中的文件可以随时更新，而无需重启服务器。请注意，该目录中发生的更改只对新的连接起作用，不包括之前已经存在的连接。如果你想通过指定客户端的配置文件更改来直接影响当前正在连接的客户端（或者该连接已经断开，但它在服务器中的实例对象并没有超时），你可以通过管理接口来杀掉该客户端的实例对象（详见下方描述）。这将导致客户端重新连接并使用新的<code>client-config-dir</code>文件。</li><li><code>crl-verify</code>  # 该指令指定一个证书撤销列表(CRL)文件，相关描述请参考后面的撤销证书部分。该CRL文件能够在运行中被修改，并且修改可以直接对新的连接或那些正在重新建立SSL/TLS通道的现有连接（默认每小时重新建立一次通道）生效。如果你想杀掉一个证书已经添加到CRL中，但目前已连接的客户端，请使用管理接口（详见下方描述）。</li></ul><p><strong>状态信息文件</strong></p><p>默认的server.conf文件有这样一行：</p><pre><code class="shell">status openvpn-status.log</code></pre><p>OpenVPN将每分钟输出一次当前客户端连接列表到文件openvpn-status.log中。</p><p><strong>使用管理接口</strong></p><p><a href="https://openvpn.net/index.php/open-source/documentation/miscellaneous/79-management-interface.html" target="_blank" rel="noopener">OpenVPN管理接口</a>可以对正在运行的OpenVPN进程进行大量的控制操作。</p><p>你可以通过远程登录管理接口的端口来直接使用管理接口，或者使用连接到管理接口的<a href="https://community.openvpn.net/openvpn/wiki/OpenVPN-GUI" target="_blank" rel="noopener">OpenVPN GUI</a>来间接使用管理接口。</p><p>要启用一个服务器或客户端的管理接口，在配置文件中添加如下指令：</p><pre><code class="shell">management localhost 7505</code></pre><p>这将告诉OpenVPN专为管理接口客户端监听TCP端口7505（端口7505是随意的选择，也可以使用其他任何闲置的端口）。</p><p>OpenVPN运行后，可以使用<code>telnet</code>客户端连接管理接口。例如：</p><pre><code class="shell">ai:~ # telnet localhost 7505Trying 127.0.0.1...Connected to localhost.Escape character is &#39;^]&#39;.&gt;INFO:OpenVPN Management Interface Version 1 -- type &#39;help&#39; for more infohelpManagement Interface for OpenVPN 2.4.4 x86_64-redhat-linux-gnu [Fedora EPEL patched] [SSL (OpenSSL)] [LZO] [LZ4] [EPOLL] [PKCS11] [MH/PKTINFO] [AEAD] built on Sep 26 2017Commands:auth-retry t           : Auth failure retry mode (none,interact,nointeract).bytecount n            : Show bytes in/out, update every n secs (0=off).echo [on|off] [N|all]  : Like log, but only show messages in echo buffer.exit|quit              : Close management session.forget-passwords       : Forget passwords entered so far.help                   : Print this message.hold [on|off|release]  : Set/show hold flag to on/off state, or                         release current hold and start tunnel.kill cn                : Kill the client instance(s) having common name cn.kill IP:port           : Kill the client instance connecting from IP:port.load-stats             : Show global server load stats.log [on|off] [N|all]   : Turn on/off realtime log display                         + show last N lines or &#39;all&#39; for entire history.mute [n]               : Set log mute level to n, or show level if n is absent.needok type action     : Enter confirmation for NEED-OK request of &#39;type&#39;,                         where action = &#39;ok&#39; or &#39;cancel&#39;.needstr type action    : Enter confirmation for NEED-STR request of &#39;type&#39;,                         where action is reply string.net                    : (Windows only) Show network info and routing table.password type p        : Enter password p for a queried OpenVPN password.remote type [host port] : Override remote directive, type=ACCEPT|MOD|SKIP.proxy type [host port flags] : Enter dynamic proxy server info.pid                    : Show process ID of the current OpenVPN process.pkcs11-id-count        : Get number of available PKCS#11 identities.pkcs11-id-get index    : Get PKCS#11 identity at index.client-auth CID KID    : Authenticate client-id/key-id CID/KID (MULTILINE)client-auth-nt CID KID : Authenticate client-id/key-id CID/KIDclient-deny CID KID R [CR] : Deny auth client-id/key-id CID/KID with log reason                             text R and optional client reason text CRclient-kill CID [M]    : Kill client instance CID with message M (def=RESTART)env-filter [level]     : Set env-var filter levelclient-pf CID          : Define packet filter for client CID (MULTILINE)rsa-sig                : Enter an RSA signature in response to &gt;RSA_SIGN challenge                         Enter signature base64 on subsequent lines followed by ENDcertificate            : Enter a client certificate in response to &gt;NEED-CERT challenge                         Enter certificate base64 on subsequent lines followed by ENDsignal s               : Send signal s to daemon,                         s = SIGHUP|SIGTERM|SIGUSR1|SIGUSR2.state [on|off] [N|all] : Like log, but show state history.status [n]             : Show current daemon status info using format #n.test n                 : Produce n lines of output for testing/debugging.username type u        : Enter username u for a queried OpenVPN username.verb [n]               : Set log verbosity level to n, or show if n is absent.version                : Show current version number.ENDexitConnection closed by foreign host.ai:~ #</code></pre><h2 id="1-9-服务器或客户端子网中的其他计算机互相访问"><a href="#1-9-服务器或客户端子网中的其他计算机互相访问" class="headerlink" title="1.9. 服务器或客户端子网中的其他计算机互相访问"></a>1.9. 服务器或客户端子网中的其他计算机互相访问</h2><p><a href="https://openvpn.net/index.php/open-source/documentation/howto.html#scope" target="_blank" rel="noopener">英文原文</a></p><p>VPN既然能够让服务器和客户端之间具备点对点的通信能力，那么扩展VPN的作用范围，从而使客户端能够访问服务器所在网络的其他计算机，而不仅仅是服务器自己，也是可能办得到的。</p><p><strong>包含基于桥接模式的VPN服务器端的多台计算机(dev tap)</strong></p><p>使用<a href="https://openvpn.net/index.php/open-source/documentation/miscellaneous/76-ethernet-bridging.html" target="_blank" rel="noopener">以太网桥接</a>的好处之一就是无需进行任何额外的配置就可以实现该目的。</p><p><strong>包含基于桥接模式的VPN客户端的多台计算机(dev tap)</strong></p><p>这需要更加复杂的设置（实际操作可能并不复杂，但详细解释就比较麻烦）：</p><ul><li>必须将客户端的TAP接口与连接局域网的网卡进行桥接。</li><li>必须手动设置客户端TAP接口的IP/子网掩码。</li><li>必须配置客户端计算机使用桥接子网中的IP/子网掩码，这可能要通过<a href="https://openvpn.net/index.php/open-source/documentation/install.html?start=1" target="_blank" rel="noopener">查询OpenVPN服务器的DHCP服务器</a>来完成。</li></ul><p><strong>包含基于路由模式的VPN服务器端的多台计算机(dev tun)</strong></p><p>假设服务器端所在局域网的网段为<code>10.66.0.0/24</code>，服务器IP地址为<code>10.66.0.5</code>，VPN IP地址池使用<code>10.8.0.0/24</code>作为OpenVPN服务器配置文件中<code>server</code>指令的传递参数。</p><p>首先，你必须声明，对于VPN客户端而言，<code>10.66.0.0/24</code>网段是可以通过VPN进行访问的。你可以通过在服务器端配置文件中简单地配置如下指令来实现该目的：</p><pre><code class="shell">push &quot;route 10.66.0.0 255.255.255.0&quot;</code></pre><p>下一步，必须在服务器端的局域网网关创建一个路由，从而将VPN的客户端网段<code>10.8.0.0/24</code>路由到OpenVPN服务器（只有OpenVPN服务器和局域网网关不在同一计算机才需要这样做）。</p><p>另外，确保已经在OpenVPN服务器所在计算机上启用了<a href="https://community.openvpn.net/openvpn/wiki/FAQ#ip-forward" target="_blank" rel="noopener">IP</a>和<a href="https://community.openvpn.net/openvpn/wiki/FAQ#firewall" target="_blank" rel="noopener">TUN/TAP</a>转发（参考下面内容）。</p><p><strong>包含基于路由模式的VPN客户端的多台计算机(dev tun)</strong></p><p>在典型的远程访问方案中，客户端都是作为单一的计算机连接到VPN。但是，假设客户端计算机是本地局域网的网关（例如一个家庭办公室），并且你想要让客户端局域网中的每台计算机都能够通过VPN。</p><p>假设你的客户端局域网网段为<code>192.168.4.0/24</code>，客户端IP地址为<code>192.168.4.10</code>，VPN客户端使用的证书的Common Name为<code>client2</code>。目标是建立一个客户端局域网的计算机和服务器局域网的计算机都能够通过VPN进行相互通讯。</p><p>在创建之前，下面是一些基本的前提条件：</p><ul><li>客户端局域网网段（本例中是<code>192.168.4.0/24</code>）不能和VPN的服务器或任意客户端使用相同的网段。每一个以路由方式加入到VPN的子网网段都必须是唯一的。</li><li>该客户端的证书的Common Name必须是唯一的（本例中是<code>client2</code>），并且OpenVPN服务器配置文件不能使用<code>duplicate-cn</code>标记。</li></ul><p>首先，确保该客户端所在计算机已经启用了IP和TUN/TAP转发。</p><p>各操作系统<a href="https://community.openvpn.net/openvpn/wiki/265-how-do-i-enable-ip-forwarding" target="_blank" rel="noopener">开启IP和TUN/TAP转发的设置</a>：</p><p><strong>Windows</strong>（<a href="https://technet.microsoft.com/en-us/library/cc962461.aspx" target="_blank" rel="noopener">官网IPEnableRouter相关文章<code>https://technet.microsoft.com/en-us/library/cc962461.aspx</code></a>）：</p><p>注册表编辑器<code>HKLM\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters</code>将<code>IPEnableRouter</code>的值改为<code>1</code>；运行<code>services.msc</code>将“Routing and Remote Access”设置为自动并启动；</p><p>检查：运行<code>ipconfig -all</code>，查看“Windows IP 配置”中显示<code>IP 路由已启用: 是</code></p><p><strong>Linux</strong>：</p><p><code>echo 1 &gt; /proc/sys/net/ipv4/ip_forward</code></p><p>如果不想重启后失效，运行：</p><pre><code class="shell">echo &quot;net.ipv4.ip_forward = 1&quot; &gt;&gt; /etc/sysctl.confsysctl -p</code></pre><p>运行<code>cat /proc/sys/net/ipv4/ip_forward</code>检查状态。</p><p><strong>OS X</strong>：</p><p><code>sudo sysctl -w net.inet.ip.forwarding=1</code></p><p>下一步，需要在服务器端做一些必要的配置更改。如果当前的服务器配置文件没有引用一个客户端配置目录，添加一个：</p><pre><code class="shell">client-config-dir ccd</code></pre><p>在上面的指令中，<code>ccd</code>是一个已经在OpenVPN服务器运行的默认目录中预先创建好的文件夹的名称。在Linux中，运行的默认目录往往是<code>/etc/openvpn</code>；在Windows中，其通常是OpenVPN安装路径<code>/config</code>。当一个新的客户端连接到OpenVPN服务器，后台进程将会检查配置目录（这里是<code>ccd</code>）中是否存在一个与连接的客户端的Common Name匹配的文件（这里是<code>client2</code>）。如果找到了匹配的文件，OpenVPN将会读取该文件，作为附加的配置文件指令来处理，并应用于该名称的客户端。</p><p>下一步就是在<code>ccd</code>目录中创建一个名为<code>client2</code>的文件。该文件应该包含如下内容：</p><pre><code class="shell">iroute 192.168.4.0 255.255.255.0</code></pre><p>这将告诉OpenVPN服务器：子网网段<code>192.168.4.0/24</code>应该被路由到<code>client2</code>。</p><p>接着，在OpenVPN服务器配置文件（<strong>不是</strong><code>ccd/client2</code>文件）中添加如下指令：</p><pre><code class="shell">route 192.168.4.0 255.255.255.0</code></pre><p><code>route</code>语句控制从系统内核到OpenVPN服务器的路由，<code>iroute</code>控制从OpenVPN服务器到远程客户端的路由（不是太懂，照做就可以了）。</p><p>下一步，请考虑是否允许<code>client2</code>所在的子网（192.168.4.0/24）与OpenVPN服务器的其他客户端进行相互通讯。如果允许，在服务器配置文件中添加如下语句（笔者注：可以在<code>ccd</code>对应用户名加入，可以更精确控制使用范围）：</p><pre><code class="shell">client-to-clientpush &quot;route 192.168.4.0 255.255.255.0&quot;</code></pre><p>OpenVPN服务器将向其他正在连接的客户端宣告<code>client2</code>子网的存在。</p><p>最后一步，这也是经常被忘记的一步：在服务器的局域网网关处添加一个路由，用以将<code>192.168.4.0/24</code>定向到OpenVPN服务器（如果OpenVPN服务器和局域网网关在同一计算机上，则无需这么做）。假设缺少了这一步，当你从<code>192.168.4.8</code>向服务器局域网的某台计算机发送<code>ping</code>命令时，这个外部ping命令很可能能够到达目标计算机，但是却不知道如何路由一个<code>ping</code>回复，因为它不知道如何达到<code>192.168.4.0/24</code>。主要的使用规则是：当全部的局域网都通过VPN时（并且OpenVPN服务器和局域网网关不在同一计算机），请确保在局域网网关处将所有的VPN子网都路由到VPN服务器所在计算机。</p><p>类似地，如果OpenVPN客户端和客户端局域网网关不在同一计算机上，请在客户端局域网网关处创建路由，以确保通过VPN的所有子网都能转向OpenVPN客户端所在计算机。</p><p>笔者注：上面的看得有点晕，简单介绍下<strong>添加路由</strong>的几种方式：</p><ul><li>在网关添加路由。如在<code>10.66.0.0/24</code>网关处添加一条访问<code>192.168.4.0/24</code>时以<code>10.66.0.5</code>为网关，在<code>192.168.4.0/24</code>网关处添加一条访问<code>10.66.0.0/24</code>时以<code>192.168.4.10</code>为网关。</li><li>在其他终端上添加路由表。（服务器所在网段的）Windows如下添加：<code>route add 192.168.4.0 mask 255.255.255.0 10.66.0.5</code>，（客户端所在网段的）Windows如下添加：<code>route add 10.66.0.0 mask 255.255.255.0 192.168.4.10</code>，如果添加永久路由，使用<code>-p</code>参数。其它系统的自行网上找资料。</li><li>（客户端所在网段的）Windows需要添加：<code>route add 10.8.0.0 mask 255.255.255.0 192.168.4.10</code>，才能被服务器（或服务器所在网段的其他电脑）访问到。</li><li>可以综合参考以上方式，来控制加入此互访网络的终端。</li></ul><h3 id="1-9-1-防火墙规则"><a href="#1-9-1-防火墙规则" class="headerlink" title="1.9.1. 防火墙规则"></a>1.9.1. 防火墙规则</h3><p>基于路由模式（<code>dev tun</code>）时，OpenVPN服务器上防火墙配置（主要是关于防火墙如何工作，熟悉的可以略过了）简要归纳（开放监听端口不在此赘述）：</p><p>假设环境如下：</p><p>服务端网段<code>10.66.0.0/24</code>下设备：OpenVPN服务器IP地址<code>10.66.0.5</code>,A服务器（Windows）IP地址<code>10.66.0.33</code></p><p>OpenVPN虚拟IP网段<code>10.8.0.0/24</code></p><p>客户端网段<code>192.168.4.0</code>下设备：OpenVPN客户端IP地址<code>192.168.4.10</code>,X终端（Windows）IP地址<code>192.168.4.66</code></p><p>1、防火墙不添加任何设置：</p><p>只能客户端与服务器互相访问（两者正常情况都可以互相访问，下面不再单独说明，以下所有访问指的使用<code>ping</code>测试通过，测试时Windows系统注意关闭防火墙或者设置规则允许ICMP协议入站）</p><p>2、防火墙设置：</p><pre><code class="shell">*filter# 允许进tun接口目标为“10.8.0.0/24”的访问-A FORWARD -o tun+ -d 10.8.0.0/24 -j ACCEPT  # “+”也可改为实际的“tun[n]”，如“tun0”、“tun1”...# 允许源为“10.8.0.0/24”出tun接口的访问-A FORWARD -i tun+ -s 10.8.0.0/24 -j ACCEPT# 如果需要设置指定可以访问的服务器范围，删除上面一行,如下设置-A FORWARD -i tun+ -s 10.8.0.0/24 -d 10.66.0.33 -j ACCEPT  # OpenVPN客户端不能访问到除10.66.0.33外其他的服务器（如果存在）</code></pre><p>无其它设置时还是只能客户端与服务器互相访问，在A服务器添加路由表：<code>route add 10.8.0.0 mask 255.255.255.0 10.66.0.5</code>（或在服务器网关处添加类似路由，以下所有路由表都可以在网关处添加来替换该步骤，只不过作用范围不同，下面不再单独说明），<br>OpenVPN客户端和A服务器可以互相访问</p><p>3、防火墙设置：</p><pre><code class="shell">*nat# 添加下面一行，OpenVPN服务器可访问的地址，客户端也可以访问-A POSTROUTING -s 10.8.0.0/24 -j MASQUERADE# 或如下设置指定网卡（若添指定了网卡，那么OpenVPN服务器自身通过该网卡不能访问的地址，客户端也不能访问）-A POSTROUTING -o eth0 -s 10.8.0.0/24 -j MASQUERADE*filter-A FORWARD -o tun+ -d 10.8.0.0/24 -j ACCEPT-A FORWARD -i tun+ -s 10.8.0.0/24 -j ACCEPT</code></pre><p>无其它设置时OpenVPN客户端可以访问到A服务器，A服务器访问不到OpenVPN客户端，在A服务器添加路由表：<code>route add 10.8.0.0 mask 255.255.255.0 10.66.0.5</code>，OpenVPN客户端和A服务器可以互相访问</p><p><strong>小结</strong>：</p><p>要客户端与服务器所在网段其他设备互相访问需要的防火墙设置为：</p><pre><code class="shell">*nat-A POSTROUTING -s 10.8.0.0/24 -j MASQUERADE  # 可视实际情况（如配置了路由表或是网关配置了路由）选择不配置*filter-A FORWARD -o tun+ -d 10.8.0.0/24 -j ACCEPT-A FORWARD -i tun+ -s 10.8.0.0/24 -j ACCEPT-A FORWARD -i tun+ -s 10.8.0.0/24 -d 10.66.0.33 -j ACCEPT  # 此规则与上一行选一种来使用</code></pre><p>firewalld对应命令：</p><pre><code class="shell">firewall-cmd --zone=block --add-interface=tun+firewall-cmd --permanent --zone=block --add-interface=tun+firewall-cmd --direct --add-rule ipv4 nat POSTROUTING 0 -s 10.8.0.0/24 -j MASQUERADEfirewall-cmd --direct --add-rule ipv4 filter FORWARD 0 -o tun+ -d 10.8.0.0/24 -j ACCEPTfirewall-cmd --direct --add-rule ipv4 filter FORWARD 0 -i tun+ -s 10.8.0.0/24 -j ACCEPTfirewall-cmd --direct --add-rule ipv4 filter FORWARD 0 -i tun+ -s 10.8.0.0/24 -m iprange --dst-range 10.66.0.33-10.66.0.50 -j ACCEPT  # 或是指定允许访问的范围# --direct不能使用--permanent，即使没有报错，重启服务或服务器后，对应的命令也不会生效</code></pre><p>如果对tun接口的所有流量都允许，可最简（最宽松的防火墙设置，不建议，可根据具体使用场景来综合考虑使用配置）为：</p><pre><code class="shell">*nat-A POSTROUTING -j MASQUERADE*filter-A FORWARD -o tun+ -j ACCEPT-A FORWARD -i tun+ -j ACCEPT</code></pre><p>以下内容假设服务器已按“包含基于路由模式的VPN客户端的多台计算机”步骤配置好服务器和客户端（除开OpenVPN服务器防火墙相关内容）：</p><p>4、防火墙设置：</p><pre><code class="shell">*filter-A FORWARD -o tun+ -d 10.8.0.0/24 -j ACCEPT-A FORWARD -i tun+ -s 10.8.0.0/24 -j ACCEPT-A FORWARD -o tun+ -d 192.168.4.0/24 -j ACCEPT-A FORWARD -i tun+ -s 192.168.4.0/24 -j ACCEPT  # 同样可以加入类似“-d 10.66.0.33”对允许访问的服务器进行限制</code></pre><p>无其它设置时还是只能客户端与服务器互相访问，在A服务器添加路由表：<code>route add 192.168.4.0 mask 255.255.255.0 10.66.0.5</code>，在X终端添加路由表：<code>route add 10.66.0.0 mask 255.255.255.0 192.168.4.10</code>，<br>OpenVPN客户端、X终端、OpenVPN服务器及A服务器可以互相访问</p><p>5、一些其他测试：</p><pre><code class="shell">*filter-A FORWARD -o tun+ -d 192.168.4.0/24 -j ACCEPT-A FORWARD -i tun+ -s 192.168.4.0/24 -j ACCEPT</code></pre><p>去掉了关于<code>10.8.0.0/24</code>的内容，只要添加好了路由表，各设备之间还是可以通过真实局域网IP地址来访问</p><p>如果想客户端在服务端的设备不加路由表的情况（单向）访问各服务器，加入：</p><pre><code class="shell">-A POSTROUTING -s 192.168.4.0/24 -j MASQUERADE</code></pre><p>同样如果对tun接口的所有流量都允许，可以简化为：</p><pre><code class="shell">*filter-A FORWARD -o tun+ -j ACCEPT-A FORWARD -i tun+ -j ACCEPT</code></pre><h2 id="1-10-推送DHCP选项到客户端"><a href="#1-10-推送DHCP选项到客户端" class="headerlink" title="1.10. 推送DHCP选项到客户端"></a>1.10. 推送DHCP选项到客户端</h2><p><a href="https://openvpn.net/index.php/open-source/documentation/howto.html#dhcp" target="_blank" rel="noopener">英文原文</a></p><p>OpenVPN服务器能够推送诸如DNS、WINS服务器地址等DHCP选项参数到客户端（这里是一些值得注意的<a href="https://community.openvpn.net/openvpn/wiki/FAQ#dhcpcaveats" target="_blank" rel="noopener">附加说明</a>）。Windows客户端原生就能够接受被推送来的DHCP选项参数，但非Windows系统的客户端需要使用客户端的up脚本才能接受它们，<code>up</code>脚本能够解析<code>foreign_option_n</code>环境变量列表。请进入<a href="https://openvpn.net/index.php/open-source/documentation/manuals/65-openvpn-20x-manpage.html" target="_blank" rel="noopener">手册页面</a>或者<a href="https://openvpn.net/index.php/open-source/documentation/miscellaneous/61-mailing-lists.html" target="_blank" rel="noopener">OpenVPN用户的邮件列表档案</a>查看非Windows系统的<code>foreign_option_n</code>文档和脚本示例。</p><p>举个例子，假如你希望正在连接的客户端使用一个内部的DNS服务器<code>10.66.0.4</code>或<code>10.66.0.5</code>，和一个WINS服务器<code>10.66.0.8</code>，在OpenVPN服务器配置中添加下列语句：</p><pre><code class="shell">push &quot;dhcp-option DNS 10.66.0.4&quot;push &quot;dhcp-option DNS 10.66.0.5&quot;push &quot;dhcp-option WINS 10.66.0.8&quot;</code></pre><p>想要在Windows上测试该功能，在客户端连接OpenVPN服务器后，在命令提示符中运行如下命令：</p><pre><code class="shell">ipconfig -all</code></pre><p>其中，“TAP-Windows”部分应该显示服务器推送过来的DHCP选项参数。</p><h2 id="1-11-为指定客户端配置规则和访问策略"><a href="#1-11-为指定客户端配置规则和访问策略" class="headerlink" title="1.11. 为指定客户端配置规则和访问策略"></a>1.11. 为指定客户端配置规则和访问策略</h2><p><a href="https://openvpn.net/index.php/open-source/documentation/howto.html#policy" target="_blank" rel="noopener">英文原文</a></p><p>假设，创建了一个供企业使用的VPN，想要分别为3种不同级别的用户单独设置访问策略：</p><ul><li>系统管理员 – 允许访问网络内的所有终端</li><li>普通职工 – 只允许访问Samba/Email服务器</li><li>承包商 – 只允许访问特定的服务器</li></ul><p>所要采取的基本方法是：</p><ul><li>给不同级别的用户划分不同的虚拟IP地址范围</li><li>通过设置锁定客户端虚拟IP地址的防火墙规则来控制对计算机的访问。</li></ul><p>本例中假设有大量的普通职工，只有1个系统管理员、2个承包商。IP配置方案将会把所有的普通职工放入一个IP地址池中，然后为系统管理员和承包商分配固定的IP地址。</p><p>注意：本例的前提条件之一就是有一个运行于OpenVPN服务器所在计算机上的软件防火墙，并具备自定义防火墙规则的能力。这里假定防火墙是Linux系统的iptables。</p><p>首先，根据用户级别创建一个虚拟IP地址映射：</p><table><thead><tr><th>Class</th><th>Virtual IP Range</th><th>Allowed LAN Access</th><th>Common Names</th></tr></thead><tbody><tr><td>普通职工</td><td>10.8.0.0/24</td><td>Samba/Email服务器为10.66.4.4</td><td>[数量众多]</td></tr><tr><td>系统管理员</td><td>10.8.1.0/24</td><td>10.66.4.0/24整个网段</td><td>sysadmin1</td></tr><tr><td>承包商</td><td>10.8.2.0/24</td><td>承包商服务器为10.66.4.12</td><td>contractor1, contracter2</td></tr></tbody></table><p>下一步，将上述映射转换到OpenVPN服务器配置中。首先确保已经遵循了<a href="#19-服务器或客户端子网中的其他计算机互相访问">上述步骤</a>并将<code>10.66.4.0/24</code>网段分配给了所有的客户端（虽然配置允许客户端访问整个<code>10.66.4.0/24</code>网段，不过稍后将利用防火墙规则强制添加访问限制来实现上述表格中的访问策略）。</p><p>首先，为tun接口定义一个静态的单元编号，以便于稍后在防火墙规则中使用它：</p><pre><code class="shell">dev tun0</code></pre><p>在服务器配置文件中，定义普通职工的IP地址池：</p><pre><code class="shell">server 10.8.0.0 255.255.255.0</code></pre><p>为系统管理员和承包商的IP范围添加路由：</p><pre><code class="shell"># 管理员的IP范围route 10.8.1.0 255.255.255.0# 承包商的IP范围route 10.8.2.0 255.255.255.0</code></pre><p>因为要为指定的系统管理员和承包商分配固定的IP地址，将使用一个客户端配置文件：</p><pre><code class="shell">client-config-dir ccd</code></pre><p>在<code>ccd</code>子目录中放置专用的配置文件，为每个非普通职工的VPN客户端定义固定的IP地址。</p><p>文件<code>ccd/sysadmin1</code>：</p><pre><code class="shell">ifconfig-push 10.8.1.1 10.8.1.2</code></pre><p>文件<code>ccd/contractor1</code>：</p><pre><code class="shell">ifconfig-push 10.8.2.1 10.8.2.2</code></pre><p>文件<code>ccd/contractor2</code>：</p><pre><code class="shell">ifconfig-push 10.8.2.5 10.8.2.6</code></pre><p><code>ifconfig-push</code>中的每一对IP地址表示虚拟客户端和服务器的IP端点。它们必须从连续的<code>/30</code>子网网段中获取（这里是<code>/30</code>表示<code>xxx.xxx.xxx.xxx/30</code>，即子网掩码位数为30），以便于与Windows客户端和TAP-Windows驱动兼容。明确地说，每个端点的IP地址对的最后8位字节必须取自下面的集合：</p><pre><code class="shell">[  1,  2] [  5,  6] [  9, 10] [ 13, 14] [ 17, 18][ 21, 22] [ 25, 26] [ 29, 30] [ 33, 34] [ 37, 38][ 41, 42] [ 45, 46] [ 49, 50] [ 53, 54] [ 57, 58][ 61, 62] [ 65, 66] [ 69, 70] [ 73, 74] [ 77, 78][ 81, 82] [ 85, 86] [ 89, 90] [ 93, 94] [ 97, 98][101,102] [105,106] [109,110] [113,114] [117,118][121,122] [125,126] [129,130] [133,134] [137,138][141,142] [145,146] [149,150] [153,154] [157,158][161,162] [165,166] [169,170] [173,174] [177,178][181,182] [185,186] [189,190] [193,194] [197,198][201,202] [205,206] [209,210] [213,214] [217,218][221,222] [225,226] [229,230] [233,234] [237,238][241,242] [245,246] [249,250] [253,254]</code></pre><p>完成了OpenVPN的配置，最后一步是添加防火墙规则来完成访问策略。下例使用Linux系统iptables语法的防火墙规则：</p><pre><code class="shell"># 普通职工规则iptables -A FORWARD -i tun0 -s 10.8.0.0/24 -d 10.66.4.4 -j ACCEPT# 系统管理员规则iptables -A FORWARD -i tun0 -s 10.8.1.0/24 -d 10.66.4.0/24 -j ACCEPT# 承包商规则iptables -A FORWARD -i tun0 -s 10.8.2.0/24 -d 10.66.4.12 -j ACCEPT</code></pre><h2 id="1-12-使用其他身份验证方式"><a href="#1-12-使用其他身份验证方式" class="headerlink" title="1.12. 使用其他身份验证方式"></a>1.12. 使用其他身份验证方式</h2><p><a href="https://openvpn.net/index.php/open-source/documentation/howto.html#auth" target="_blank" rel="noopener">英文原文</a></p><p>OpenVPN 2.0及以上版本支持OpenVPN服务器安全地从客户端获取用户名和密码，并以该信息作为客户端身份验证的基础。</p><p>使用该身份验证方式，先在客户端配置中添加<code>auth-user-pass</code>指令。这使得OpenVPN客户端直接向用户询问用户名/密码，并通过安全的TLS隧道将其传递到服务器。</p><p>下一步，配置服务器以使用一个身份验证插件，该插件可以是一个脚本、共享的对象或者DLL文件。在每次客户端尝试连接时，OpenVPN服务器就会调用该插件，并将客户端输入的用户名/密码传递给它。身份验证插件通过返回一个表示失败(1)或成功(0)的值，从而控制OpenVPN是否允许该客户端连接。</p><p><strong>使用脚本插件</strong></p><p>通过在服务器端配置文件中添加<code>auth-user-pass-verify</code>指令，可以使用脚本插件。例如：</p><pre><code class="shell">auth-user-pass-verify auth-pam.pl via-file</code></pre><p>将使用名为<code>auth-pam.pl</code>的perl脚本来验证正在连接的客户端的用户名/密码。详情请查看<a href="https://openvpn.net/index.php/open-source/documentation/manuals/65-openvpn-20x-manpage.html" target="_blank" rel="noopener">手册页面</a>中关于<code>auth-user-pass-verify</code>的相关描述。</p><p><code>auth-pam.pl</code>脚本文件位于OpenVPN源代码发行版的<code>sample-scripts</code>子目录中。在Linux服务器上，它将使用PAM认证模块对用户进行身份验证，从而实现shadow密码、RADIUS（远程用户拨入验证服务）或者LDAP（轻量级目录访问协议）验证。<code>auth-pam.pl</code>主要用于演示目的。对于实际的PAM验证，请使用下面描述的<code>openvpn-auth-pam</code>共享对象插件。</p><p><strong>使用共享对象或DLL插件</strong></p><p>共享对象或DLL插件通常是一个经过编译的C模块，它能够在运行时被OpenVPN服务器加载。如果在Linux系统中使用基于RPM的OpenVPN，<code>openvpn-auth-pam</code>插件应该已经创建好了。为了使用该插件，在服务器端配置文件中添加如下语句：</p><pre><code class="shell">plugin /usr/share/openvpn/plugin/lib/openvpn-auth-pam.so login</code></pre><p>这将告诉OpenVPN服务器使用login PAM模块来校验客户端输入的用户名/密码。</p><p>对于实际生产环境中，最好使用<code>openvpn-auth-pam</code>插件，因为相对使用<code>auth-pam.pl</code>脚本而言，它具有以下几个优点：</p><ul><li>共享对象<code>openvpn-auth-pam</code>插件采用更加安全的拆分权限执行模式。这意味着OpenVPN服务器可以运行在使用<code>user nobody</code>、<code>group nobody</code>和<code>chroot</code>等指令来降低权限的情况下，并且能够进行身份验证，而不依赖于只有root用户才能读取的shadow密码文件。</li><li>OpenVPN可以通过虚拟内存将用户名/密码传递给插件，而不是通过一个文件或环境变量，对于服务器计算机而言，具有更好的本地安全性。</li></ul><p>如果想了解更多关于开发自己的插件以便与OpenVPN一起使用的信息，请参阅OpenVPN源代码发行版<code>plugin</code>子目录中的<code>README</code>文件。</p><p>在Linux中，为了构建<code>openvpn-auth-pam</code>插件，请转到OpenVPN源代码发行版的<code>plugin/auth-pam</code>目录，并运行<code>make</code>。</p><p><strong>使用用户名/密码认证作为唯一的客户端认证形式</strong></p><p>默认情况下，在服务器上使用<code>auth-user-pass-verify</code>或者用户名/密码验证插件将会启用双重身份验证，这使得待验证客户端的客户端证书和用户名/密码验证都必须通过。</p><p>也可以禁用客户端证书，而强制只使用用户名/密码验证（从安全角度来说，不鼓励这样做）。在服务器端加入：</p><pre><code class="shell">client-cert-not-required</code></pre><p>通常还需要这样设置：</p><pre><code class="shell">username-as-common-name</code></pre><p>这将告诉服务器优先使用用户名，就像它使用那些通过客户端证书认证的客户端的Common Name一样(也就是说，使用username作为Common Name，用法与之前使用Common Name时相同)。</p><p>注意：<code>client-cert-not-required</code>并不排除对服务器证书的需要，所以一个客户端连接到使用了<code>client-cert-not-required</code>指令的服务器，可以删除客户端配置文件中的<code>cert</code>和<code>key</code>指令，但不能删除<code>ca</code>指令，因为它对于客户端验证服务器端证书来说是必需的。</p><h2 id="1-13-使用客户端的智能卡实现双重认证"><a href="#1-13-使用客户端的智能卡实现双重认证" class="headerlink" title="1.13. 使用客户端的智能卡实现双重认证"></a>1.13. 使用客户端的智能卡实现双重认证</h2><p><a href="https://openvpn.net/index.php/open-source/documentation/howto.html#pkcs11" target="_blank" rel="noopener">英文原文</a></p><h2 id="1-14-路由所有客户端流量通过VPN"><a href="#1-14-路由所有客户端流量通过VPN" class="headerlink" title="1.14. 路由所有客户端流量通过VPN"></a>1.14. 路由所有客户端流量通过VPN</h2><p><a href="https://openvpn.net/index.php/open-source/documentation/howto.html#redirect" target="_blank" rel="noopener">英文原文</a></p><p><strong>概述</strong></p><p>默认情况下，当一个OpenVPN客户端处于活动状态时，只有往返于OpenVPN服务器的网络流量才会通过VPN。如一般的网页浏览操作，将绕过VPN，直接连接来完成。</p><p>在某些情况下，可能想让VPN客户端所有的网络流量均通过VPN，也包括一般的网络流量。虽然客户端的这种VPN配置将会耗费一些性能，但在客户端同时连接公共网络和VPN时，它给VPN管理员在安全策略上更多的控制能力。</p><p><strong>实施</strong></p><p>在服务器配置文件中添加如下指令：</p><pre><code class="shell">push &quot;redirect-gateway def1&quot;</code></pre><p>如果VPN安装在无线网络上，并且OpenVPN服务器和客户端均处于同一个无线子网中，请添加<code>local</code>标记：</p><pre><code class="shell">push &quot;redirect-gateway local def1&quot;</code></pre><p>推送<code>redirect-gateway</code>选项命令到客户端，将会导致源自客户端计算机的所有IP网络流量通过OpenVPN服务器。服务器需要进行配置，从而以某种方式处理这些流量，例如：通过NAT转化流量到internet，或者路由通过服务器所在网络场所的HTTP代理。在Linux系统中，你可以使用如下命令将VPN客户端的流量NAT转化到internet：</p><pre><code class="shell">iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o eth0 -j MASQUERADE</code></pre><p>该命令假定VPN子网网段为<code>10.8.0.0/24</code>（取自OpenVPN服务器配置的server指令），本地以太网接口为eth0。</p><p>当启用了<code>redirect-gateway</code>指令，OpenVPN客户端将路由所有的DNS查询经过VPN，VPN服务器需要处理掉这些查询。在VPN活动期间，我们可以通过推送DNS服务器地址到正在连接的客户端上来完成该操作，从而代替常规的DNS服务器设置：</p><pre><code class="shell">push &quot;dhcp-option DNS 10.8.0.1&quot;</code></pre><p>这将配置Windows客户端（或带有额外的服务器端脚本的非Windows客户端）使用<code>10.8.0.1</code>作为它们的DNS服务器。任何客户端能够到达的地址都可能作为DNS服务器。</p><p><strong>注意事项</strong></p><p>通过VPN重定向所有网络流量并不是完全没有问题的提议。以下是一些典型的疑难问题：</p><ul><li>多数连接internet的OpenVPN客户端计算机会定期与DHCP服务器进行交互，并更新它们的IP地址租约。<code>redirect-gateway</code>选项命令可能会阻止客户端连接到本地DHCP服务器（因为DHCP信息会被路由通过VPN），从而导致丢失IP地址租约。</li><li>关于推送DNS地址到Windows客户端<a href="https://community.openvpn.net/openvpn/wiki/FAQ#dhcpcaveats" target="_blank" rel="noopener">存在一些问题</a>。</li><li>客户端的Web浏览性能将会明显降低。</li></ul><p>关于<code>redirect-gateway</code>指令的更多信息，请参考<a href="https://openvpn.net/index.php/open-source/documentation/manuals/65-openvpn-20x-manpage.html" target="_blank" rel="noopener">手册页面</a>。</p><h2 id="1-15-在动态IP地址上运行OpenVPN服务器"><a href="#1-15-在动态IP地址上运行OpenVPN服务器" class="headerlink" title="1.15. 在动态IP地址上运行OpenVPN服务器"></a>1.15. 在动态IP地址上运行OpenVPN服务器</h2><p><a href="https://openvpn.net/index.php/open-source/documentation/howto.html#dynamic" target="_blank" rel="noopener">英文原文</a></p><p>总结一句就是使用动态域名解析</p><h2 id="1-16-通过HTTP代理连接OpenVPN服务器"><a href="#1-16-通过HTTP代理连接OpenVPN服务器" class="headerlink" title="1.16. 通过HTTP代理连接OpenVPN服务器"></a>1.16. 通过HTTP代理连接OpenVPN服务器</h2><p><a href="https://openvpn.net/index.php/open-source/documentation/howto.html#http" target="_blank" rel="noopener">英文原文</a></p><p>OpenVPN支持以下列身份认证方式通过HTTP代理进行连接：</p><ul><li>无需代理身份认证</li><li>基本(Basic)代理身份认证</li><li>NTLM代理身份认证</li></ul><p>首先，HTTP代理的用法要求你必须使用TCP协议作为隧道载体。所以，在客户端和服务器配置中均添加如下语句：</p><pre><code class="shell">proto tcp</code></pre><p>确保删除（或注释）配置文件中的所有<code>proto udp</code>指令行。</p><p>下一步，在客户端配置文件中添加<code>http-proxy</code>指令（请查看<a href="http://openvpn.net/man.html" target="_blank" rel="noopener">手册页面</a>了解该指令的详细描述信息）。</p><p>例如，假设客户端局域网有一台<code>192.168.4.1</code>的HTTP代理服务器，并监听在<code>1080</code>端口。在客户端配置中添加如下语句：</p><p>假设HTTP代理要求基本的身份认证：</p><pre><code class="shell">http-proxy 192.168.4.1 1080 stdin basic</code></pre><p>假设HTTP代理要求NTLM身份认证：</p><pre><code class="shell">http-proxy 192.168.4.1 1080 stdin ntlm</code></pre><p>上面的两个身份认证示例将会使OpenVPN提示从标准输入界面输入用户名/密码。如果希望将这些用户凭据放入一个文件中来代替上述输入操作，使用一个文件名来替换语句中的stdin，该文件的第1行应该放用户名，第2行放密码。</p><h2 id="1-17-通过OpenVPN连接Samba网络共享服务器"><a href="#1-17-通过OpenVPN连接Samba网络共享服务器" class="headerlink" title="1.17. 通过OpenVPN连接Samba网络共享服务器"></a>1.17. 通过OpenVPN连接Samba网络共享服务器</h2><p><a href="https://openvpn.net/index.php/open-source/documentation/howto.html#samba" target="_blank" rel="noopener">英文原文</a></p><p>本示例演示OpenVPN是如何通过基于路由的<code>dev tun</code>隧道连接到一个Samba共享服务器的。如果使用的是以太网桥接模式(<code>dev tap</code>)，你可能不需要遵循下列操作，因为OpenVPN客户端可以在网络邻居中看到服务器端局域网中的计算机。</p><p>在本例中假设：</p><ul><li>服务器端局域网使用子网网段<code>10.66.0.0/24</code></li><li>VPN IP地址池使用<code>10.8.0.0/24</code>（作为OpenVPN服务器配置文件中的server指令参数）</li><li>Samba服务器的IP地址为<code>10.66.0.4</code></li><li>Samba服务器已进行配置，从本地局域网能够正常访问</li></ul><p>如果Samba和OpenVPN服务器运行于不同的计算机，请确保已经遵循并实现了<a href="#19-服务器或客户端子网中的其他计算机互相访问">扩大OpenVPN使用范围，包含服务器或客户端子网中的其他计算机</a>。</p><p>下一步，编辑Samba配置文件(<code>smb.conf</code>)。确保<code>hosts allow</code>指令允许来自<code>10.8.0.0/24</code>网段的OpenVPN客户端进行连接。例如：</p><pre><code class="shell">hosts allow = 10.66.0.0/24 10.8.0.0/24 127.0.0.1</code></pre><p>如果Samba和OpenVPN服务器运行于同一台计算机，可以编辑<code>smb.conf</code>文件中的<code>interfaces</code>指令，也监听TUN接口网段<code>10.8.0.0/24</code>：</p><pre><code class="shell">interfaces  = 10.66.0.0/24 10.8.0.0/24</code></pre><p>如果Samba和OpenVPN服务器运行于同一台计算机，使用文件夹名称：</p><pre><code class="shell">\\10.8.0.1\\sharename</code></pre><p>如果Samba和OpenVPN服务器位于不同的计算机，使用文件夹名称：</p><pre><code class="shell">\\10.66.0.4\sharename</code></pre><p>例如，从命令提示符窗口中运行：</p><pre><code class="shell">net use z: \\10.66.0.4\sharename /USER:myusername</code></pre><h2 id="1-18-实现负载均衡-故障转移的配置"><a href="#1-18-实现负载均衡-故障转移的配置" class="headerlink" title="1.18. 实现负载均衡/故障转移的配置"></a>1.18. 实现负载均衡/故障转移的配置</h2><p><a href="https://openvpn.net/index.php/open-source/documentation/howto.html#loadbalance" target="_blank" rel="noopener">英文原文</a></p><p><strong>客户端配置</strong></p><p>OpenVPN客户端配置可以用于实现负载均衡和故障转移功能的多台服务器。例如：</p><pre><code class="shell">remote server1.mydomainremote server2.mydomainremote server3.mydomain</code></pre><p>这将指示OpenVPN客户端按照顺序尝试与server1、server2、server3进行连接。如果现有的连接被中断，OpenVPN客户端将会重新尝试连接最近连接过的服务器；如果连接失败，客户端将会尝试与列表中的下一个服务器进行连接（测试大致会尝试半分钟至1分钟左右后，连接下一个服务器）。也可以指示OpenVPN客户端在启动时随机连接列表中的一个服务器，以便于客户端负载能够均等概率地覆盖服务器池。</p><pre><code class="shell">remote-random</code></pre><p>如果也希望在DNS解析失败时，让OpenVPN客户端移至列表中的下一个服务器，添加如下命令：</p><pre><code class="shell">resolv-retry 60</code></pre><p>参数<code>60</code>告诉OpenVPN客户端，在移至下一个服务器之前，尝试解析每个<code>remote</code>的DNS名称60秒（即60秒内都无法解析成功，就移至下一个服务器）。</p><p>服务器列表还可以引用运行于同一计算机上的多个OpenVPN服务器进程（每个进程监听不同的端口），例如：</p><pre><code class="shell">remote smp-server1.mydomain 8000remote smp-server1.mydomain 8001remote smp-server2.mydomain 8000remote smp-server2.mydomain 8001</code></pre><p>如果服务器有多个处理器，每台计算机运行多个OpenVPN后台进程有利于提高性能表现。</p><p>OpenVPN也支持<code>remote</code>指令引用在域名配置中拥有多个A记录的DNS名称。在这种情况下，在每次域名被解析时，OpenVPN客户端将会随机选择一个A记录。</p><p><strong>服务器端配置</strong></p><p>除了每个服务器使用不同的虚拟IP地址池之外，为集群中的每个服务器使用相同的配置文件，是在服务器端实现负载均衡/故障转移配置的最简单方法。例如：</p><p>server1：</p><pre><code class="shell">server 10.8.0.0 255.255.255.0</code></pre><p>server2：</p><pre><code class="shell">server 10.8.1.0 255.255.255.0</code></pre><p>server3：</p><pre><code class="shell">server 10.8.2.0 255.255.255.0</code></pre><h2 id="1-19-增强OpenVPN的安全性"><a href="#1-19-增强OpenVPN的安全性" class="headerlink" title="1.19. 增强OpenVPN的安全性"></a>1.19. 增强OpenVPN的安全性</h2><p><a href="https://openvpn.net/index.php/open-source/documentation/howto.html#security" target="_blank" rel="noopener">英文原文</a></p><p>一个经常被重复提及的网络安全准则就是：不要过分相信一个单一的安全组件，否则它的失败将导致灾难性的安全漏洞。OpenVPN提供多种机制来添加额外的安全层，以避免这样的结果。</p><p><strong>tls-auth</strong></p><p><code>tls-auth</code>指令为所有的SSL/TLS握手数据包添加一个额外的HMAC签名，以验证数据的完整性。无需进一步处理，没有正确的HMAC签名的任何UDP数据包将会被丢弃。<code>tls-auth</code> HMAC签名提供了上面所说的额外安全级别，而不是通过SSL/TLS来提供。它可以防御：</p><ul><li>Dos攻击或者UDP端口淹没攻击。</li><li>确定服务器UDP端口监听状态的端口扫描。</li><li>SSL/TLS实现的缓冲区溢出漏洞。</li><li>启动来自未经授权机器的SSL/TLS握手（虽然这样的握手最终会验证失败，但<code>tls-auth</code>可以更早地断开）。</li></ul><p>除了使用标准的RSA证书/密钥之外，使用<code>tls-auth</code>还需要生成一个共享的密钥：</p><pre><code class="shell">openvpn --genkey --secret ta.key</code></pre><p>该命令将生成一个OpenVPN静态密钥，并将其写入到<code>ta.key</code>文件中。该密钥应该通过已有的安全通道拷贝到服务器和所有的客户端。它应该与RSA的<code>.key</code>和<code>.crt</code>文件放在同一目录。</p><p>在服务器配置中，添加：</p><pre><code class="shell">tls-auth ta.key 0</code></pre><p>在客户端配置中，添加：</p><pre><code class="shell">tls-auth ta.key 1</code></pre><p><strong>proto udp</strong></p><p>虽然OpenVPN允许使用TCP或者UDP协议作为VPN的连接载体，但UDP协议能够比TCP提供更好的Dos攻击和端口扫描防护：</p><pre><code class="shell">proto udp</code></pre><p><strong>user/group（仅限于非Windows系统）</strong></p><p>OpenVPN经过非常仔细的设计，以允许在初始化后丢弃掉root权限，该特性可以在Linux/BSD/Solaris系统中一直使用。</p><p>对于攻击者而言，没有root权限，运行中的OpenVPN服务器进程就不是一个有吸引力的目标。</p><pre><code class="shell">user nobodygroup nobody</code></pre><p><strong>非特权模式（仅限于Linux系统）</strong></p><p>在Linux系统中，OpenVPN可以完全没有特权地正常运行。虽然配置上会稍稍麻烦一点，但却能带来最佳的安全性。</p><p>为了使用这种配置来运行，OpenVPN必须配置为使用<code>iproute</code>接口，这可以通过为<code>configure</code>脚本指定<code>--enable-iproute2</code>参数来完成。系统也需要有<code>sudo</code>软件包。</p><p>该配置使用Linux自身的能力来更改tun设备的权限，以便于非特权的用户也可以访问它。为了执行<code>iproute</code>，也需要使用<code>sudo</code>，从而使得接口属性和路由表可以被修改。</p><p>OpenVPN配置：</p><ul><li>重写并覆盖位于<code>/usr/local/sbin/unpriv-ip</code>的以下脚本文件：</li></ul><pre><code class="shell">#!/bin/shsudo /sbin/ip $*</code></pre><ul><li>执行<code>visudo</code>，添加如下命令以允许用户”user1”执行<code>/sbin/ip</code>：</li></ul><pre><code class="shell">user1 ALL=(ALL)  NOPASSWD: /sbin/ip</code></pre><p>也可以通过如下命令启用一个用户组：</p><pre><code class="shell">%users ALL=(ALL)  NOPASSWD: /sbin/ip</code></pre><ul><li>在OpenVPN配置中添加如下语句：</li></ul><pre><code class="shell">dev tunX/tapXiproute /usr/local/sbin/unpriv-ip</code></pre><p>注意：必须选择常量X（一般用数字标记，例如：tunX实际为tun0），并且不能同时指定tun或tap。</p><ul><li>使用root添加持久化接口，允许用户或用户组来管理它，下面的命令会创建<code>tunX</code>，并且允许user1和用户组访问它：</li></ul><pre><code class="shell">openvpn --mktun --dev tunX --type tun --user user1 --group users</code></pre><ul><li>在非特权用户的上下文环境中运行OpenVPN。</li></ul><p>可以通过核查脚本文件<code>/usr/local/sbin/unpriv-ip</code>的参数来添加进一步的安全约束。</p><p><strong>chroot（仅限于非Windows系统）</strong></p><p><code>chroot</code>指令允许将OpenVPN后台进程锁定到所谓的<code>chroot jail</code>（chroot监狱）中，除了该指令参数给出的指定目录外，<code>chroot jail</code>中的进程无法访问主机系统的文件系统的任何部分。例如：</p><pre><code class="shell">chroot jail</code></pre><p>将导致OpenVPN进程在初始化时转到jail子目录，然后将它的根文件系统调整为该目录，进程将无法访问jail和它的子目录树以外的任何文件。从安全角度来说，这很重要，因为即使攻击者能够使用代码插入攻击入侵服务器，攻击也会被锁定在服务器的大部分文件系统之外。</p><p>注意事项：由于chroot调整了文件系统（仅从后台进程的角度来看），因此有必要将OpenVPN初始化后可能用到的文件放入jail目录中，例如：</p><ul><li>文件<code>crl-verify</code></li><li>或者目录<code>client-config-dir</code></li></ul><p><strong>更大的RSA密钥</strong></p><p>我们可以通过文件<code>easy-rsa/vars</code>中的<code>KEY_SIZE</code>变量来控制RSA密钥的大小，该变量必须在所有密钥生成之前进行设置。如果默认设置为<code>1024</code>，可以合理地提高到<code>2048</code>，这对VPN隧道的性能没有什么负面影响，除了稍稍减缓每个客户端每小时一次的SSL/TLS重新协商握手速度，和大幅减慢使用脚本<code>easy-rsa/build-dh</code>生成迪菲赫尔曼参数的一次性过程之外。</p><p><strong>更大的对象密钥</strong></p><p>默认情况下，OpenVPN使用128位对称加密算法<code>Blowfish</code>。</p><p>OpenVPN自动支持OpenSSL库支持的任何加密算法，同样支持使用更大密钥长度的加密算法。例如，通过在服务器和客户端配置文件中均添加如下语句来使用256位版本的AES（Advanced Encryption Standard，高级加密标准）：</p><pre><code class="shell">cipher AES-256-CBC</code></pre><p><strong>将根密钥（<code>ca.key</code>）保留在一台没有网络连接的计算机上</strong></p><p>使用X509 PKI（OpenVPN也使用）的安全好处之一就是，根CA密钥（<code>ca.key</code>）不需要放在当前OpenVPN服务器所在计算机上。在一个高度安全的环境中，可以特别指定一台计算机用于密钥签名，让该计算机受到良好的保护，并断开所有的网络。必要时，可以使用软盘（这个可能已经绝迹了吧）来回移动该密钥文件。这些措施使得攻击者想要窃取根密钥变得非常困难（对于密钥签名计算机的物理盗窃除外）。</p><h2 id="1-20-撤销证书"><a href="#1-20-撤销证书" class="headerlink" title="1.20. 撤销证书"></a>1.20. 撤销证书</h2><p><a href="https://openvpn.net/index.php/open-source/documentation/howto.html#revoke" target="_blank" rel="noopener">英文原文</a></p><p><strong>撤销一个证书</strong>就是让一个已签名的证书作废，以便其无法再用于身份认证。</p><p>想要撤销一个证书的典型原因包括：</p><ul><li>与证书关联的私钥被泄露或被窃取。</li><li>加密私钥的用户忘记了密码。</li><li>你想要终止某个VPN用户的访问。</li></ul><p>例如撤销证书<code>client2</code>，该证书是前面的操作指南的“<a href="#14-创建证书">生成密钥</a>”部分生成的。</p><p>首先，打开shell或命令提示符窗口，转到之前“生成密钥”部分操作过的<code>easy-rsa</code>目录。在Linux/BSD/Unix系统中：</p><pre><code class="shell">. ./vars./revoke-full client2</code></pre><p>在Windows系统中：</p><pre><code class="shell">varsrevoke-full client2</code></pre><p>可以看到类似这样的输出：</p><pre><code class="shell">Using configuration from /root/openvpn/20/openvpn/tmp/easy-rsa/openssl.cnfDEBUG[load_index]: unique_subject = &quot;yes&quot;Revoking Certificate 04.Data Base UpdatedUsing configuration from /root/openvpn/20/openvpn/tmp/easy-rsa/openssl.cnfDEBUG[load_index]: unique_subject = &quot;yes&quot;client2.crt: /C=KG/ST=NA/O=OpenVPN-TEST/CN=client2/emailAddress=me@myhost.mydomainerror 23 at 0 depth lookup:certificate revoked</code></pre><p>注意最后一行的<code>error 23</code>表明已被撤销的证书的证书校验失败（即撤销成功）。</p><p><code>revoke-full</code>脚本将会在<code>keys</code>子目录中生成一个叫做<code>crl.pem</code>的CRL（证书撤销列表）文件。该文件应该被复制到一个OpenVPN服务器可以访问的目录，然后在服务器配置中启用CRL验证：</p><pre><code class="shell">crl-verify crl.pem</code></pre><p>现在，所有正在连接的客户端的证书会与CRL进行比对校验，任何正匹配都将导致该连接被丢失。</p><p><strong>CRL注意事项</strong></p><ul><li><p>当OpenVPN使用<code>crl-verify</code>选项命令后，任何新的客户端连接或者现有客户端重新建立SSL/TLS连接（默认每小时一次）都将使得CRL文件被重新读取。这意味着，即使OpenVPN服务器后台进程正在运行，你也可以更新你的CRL文件，新的CRL文件将会对新连接的客户端直接生效。如果一个刚刚撤销了证书的客户端早已经连接到服务器，你可以通过一个信号（SIGUSR1或者SIGHUP）来重启服务器，并刷新所有的客户端，或者你可以远程登录<a href="https://openvpn.net/management.html" target="_blank" rel="noopener">管理接口</a>，明确杀掉服务器上指定的客户端实例对象，而不干扰其他客户端。</p></li><li><p>虽然OpenVPN服务器和客户端都可以使用<code>crl-verify</code>指令，但通常不必将CRL文件分发到客户端，除非服务器证书已被撤销。客户端不需要知道其他哪些客户端的证书已被撤销，因为<a href="#121-关于中间人攻击的重要注意事项">客户端不应该直接接受来自其他客户端的连接</a>。</p></li><li><p>CRL文件无需保密，并且应该设为所有用户可读，以便于OpenVPN进程在没有root权限的情况下能够读取该文件。</p></li><li><p>如果使用<code>chroot</code>指令，请确保在<code>chroot</code>目录放置一份CRL文件的拷贝，因为不像OpenVPN读取的其他大多数文件，CRL将会在执行<code>chroot</code>调用之后被读取，而不是在此之前。</p></li><li><p>需要撤销证书的一个常见原因是，用户使用密码加密了自己的私钥，然后忘记了密码。通过撤销原来的证书，用户也可以使用原来的<code>Common Name</code>来生成新的证书/密钥对。</p></li></ul><h2 id="1-21-关于中间人攻击的重要注意事项"><a href="#1-21-关于中间人攻击的重要注意事项" class="headerlink" title="1.21. 关于中间人攻击的重要注意事项"></a>1.21. 关于中间人攻击的重要注意事项</h2><p><a href="https://openvpn.net/index.php/open-source/documentation/howto.html#secnotes" target="_blank" rel="noopener">英文原文</a></p><p>如果客户端不验证他们正在连接的服务器的证书，可能的“中间人”攻击。</p><p>为了避免授权客户端通过冒充的服务器尝试连接到另一个客户端的可能的中间人攻击，务必强制客户端进行某种类型的服务器证书验证。目前有五种不同的方式来完成这一点，按优先顺序排列：</p><ul><li><strong>OpenVPN 2.1 及以上版本</strong>使用指定的密钥用法和扩展密钥用法来创建服务器证书。RFC3280确定了应该为TLS连接提供下列属性：</li></ul><table><thead><tr><th>模式</th><th>密钥用法</th><th>扩展密钥用法</th></tr></thead><tbody><tr><td>客户端</td><td>数字签名</td><td>TLS Web客户端认证</td></tr><tr><td>客户端</td><td>密钥协议</td><td>TLS Web客户端认证</td></tr><tr><td>客户端</td><td>数字签名，密钥协议</td><td>TLS Web客户端认证</td></tr><tr><td>服务器</td><td>数字签名，密钥加密</td><td>TLS Web服务器认证</td></tr><tr><td>服务器</td><td>数字签名，密钥协议</td><td>TLS Web服务器认证</td></tr></tbody></table><p>可以使用<code>build-key-server</code>脚本来创建服务器证书（详情请查看<a href="https://openvpn.net/easyrsa.html" target="_blank" rel="noopener">easy-rsa</a>文档）。通过设置正确的属性，指定证书作为一个服务器端证书。在客户端配置中添加如下语句：</p><pre><code class="shell">remote-cert-tls server</code></pre><ul><li><strong>OpenVPN 2.0 及以下版本</strong>使用<code>build-key-server</code>脚本来创建服务器证书（详情请查看<a href="https://openvpn.net/easyrsa.html" target="_blank" rel="noopener">easy-rsa</a>文档）。通过设置<code>nsCertType=server</code>，指定该证书作为服务器端证书。在客户端配置中添加如下语句： </li></ul><pre><code class="shell">ns-cert-type server</code></pre><p>这将阻止客户端连接任何没有在证书中指定<code>nsCertType=server</code>的服务器，即使该证书已经通过OpenVPN配置文件中的<code>ca</code>文件进行了签名。</p><ul><li><p>在客户端使用<code>tls-remote</code>指令，根据服务器证书的<code>Common Name</code>来判断接受或拒绝该服务器连接。</p></li><li><p>使用<code>tls-verify</code>脚本或插件，根据服务器证书的嵌入式X509附属条目中的自定义测试来判断接受/拒绝该服务器连接。</p></li><li><p>使用一个CA给服务器证书签名，使用另一个不同的CA给客户端证书签名。客户端配置的ca指令应该引用为服务器签名的CA文件，而服务器配置的ca指令应该引用为客户端签名的CA文件。</p></li></ul>]]></content>
    
    <summary type="html">
    
      OpenVPN HOWTO 官方文档翻译
    
    </summary>
    
    
      <category term="OpenVPN篇" scheme="http://blog.joylau.cn/categories/OpenVPN%E7%AF%87/"/>
    
    
      <category term="OpenVPN" scheme="http://blog.joylau.cn/tags/OpenVPN/"/>
    
  </entry>
  
  <entry>
    <title>VSCode 图标在 Windows 10 系统开始菜单里的背景色为黑色问题的解决</title>
    <link href="http://blog.joylau.cn/2020/05/02/VSCode-Win10-IconStyle/"/>
    <id>http://blog.joylau.cn/2020/05/02/VSCode-Win10-IconStyle/</id>
    <published>2020-05-02T17:00:31.000Z</published>
    <updated>2020-07-10T00:43:19.443Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>安装好 CODE 后， 将快捷方式固定到开始菜单， 发现图标的背景色为黑色，和其他图标一比较，显得格格不入</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>由于 VSCODE 是 electron 开发的， 通过GitHub 查看源码，发现配置文件位于： <code>https://github.com/Microsoft/vscode/blob/master/resources/win32/VisualElementsManifest.xml</code></p><p>那么安装好之后的该配置文件位于安装路径的根目录下：<code>Code.VisualElementsManifest.xml</code></p><p>修改 BackgroundColor 为透明色 rgba(0, 0, 0, 0) 即可：</p><pre><code class="xml">    &lt;Application xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;            &lt;VisualElements                    BackgroundColor=&quot;rgba(0, 0, 0, 0)&quot;                    ShowNameOnSquare150x150Logo=&quot;on&quot;                    Square150x150Logo=&quot;resources\app\resources\win32\code_150x150.png&quot;                    Square70x70Logo=&quot;resources\app\resources\win32\code_70x70.png&quot;                    ForegroundText=&quot;light&quot; /&gt;    &lt;/Application&gt;</code></pre><p>重新创建快捷方式， 再固定到开始菜单上即可看到效果。</p>]]></content>
    
    <summary type="html">
    
      安装好 CODE 后， 将快捷方式固定到开始菜单， 发现图标的背景色为黑色，和其他图标一比较，显得格格不入
    
    </summary>
    
    
      <category term="VSCode" scheme="http://blog.joylau.cn/categories/VSCode/"/>
    
    
      <category term="VSCode" scheme="http://blog.joylau.cn/tags/VSCode/"/>
    
  </entry>
  
  <entry>
    <title>Docker 安装 Clash 并对外提供代理服务</title>
    <link href="http://blog.joylau.cn/2020/05/02/Clash-Docker/"/>
    <id>http://blog.joylau.cn/2020/05/02/Clash-Docker/</id>
    <published>2020-05-02T03:00:31.000Z</published>
    <updated>2020-07-10T00:43:19.431Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ol><li>端口: <code>port: 7890 ; socks-port: 7891</code></li><li>运行局域网访问: <code>allow-lan: true</code></li><li>对外提供 rest 接口: <code>external-controller: 0.0.0.0:8080</code></li><li>dashboard 路径: <code>external-ui: /ui</code></li><li>配置文件 yaml, 挂载到: <code>/root/.config/clash/config.yaml</code></li></ol><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><pre><code class="bash">    docker run -d --name clash-client --restart always -p 7890:7890 -p 7891:7891 -p 8080:8080 -v /path/config.yaml:/root/.config/clash/config.yaml -v /path/ui:/ui dreamacro/clash</code></pre><h3 id="Dashboard"><a href="#Dashboard" class="headerlink" title="Dashboard"></a>Dashboard</h3><ol><li>使用官方的 Dashboard : <a href="https://github.com/Dreamacro/clash-dashboard/tree/gh-pages" target="_blank" rel="noopener">https://github.com/Dreamacro/clash-dashboard/tree/gh-pages</a></li><li>使用另一个第三方看起来很炫酷的 Dashboard: <a href="https://github.com/haishanh/yacd/tree/gh-pages" target="_blank" rel="noopener">https://github.com/haishanh/yacd/tree/gh-pages</a></li></ol><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>既然对外提供服务, 最好加密, 包括 Dashboard 加密和 http, socks 代理加用户名密码认证</p><pre><code class="yaml">    port: 7890    socks-port: 7891    allow-lan: true    mode: Rule    log-level: info    external-controller: &#39;0.0.0.0:9090&#39;    secret: &#39;passwd&#39;    external-ui: /ui    authentication:      - &quot;user:passwd&quot;    Proxy:    Proxy Group:    Rule:</code></pre><p>启动之后,便可以使用 Dashboard 来操作 Clash 了.</p>]]></content>
    
    <summary type="html">
    
      Docker 安装 Clash 并对外提供代理服务
    
    </summary>
    
    
      <category term="Clash" scheme="http://blog.joylau.cn/categories/Clash/"/>
    
    
      <category term="Clash" scheme="http://blog.joylau.cn/tags/Clash/"/>
    
      <category term="Docker" scheme="http://blog.joylau.cn/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Clash 基本配置记录</title>
    <link href="http://blog.joylau.cn/2020/05/01/Clash-Config/"/>
    <id>http://blog.joylau.cn/2020/05/01/Clash-Config/</id>
    <published>2020-05-01T07:14:20.000Z</published>
    <updated>2020-07-10T00:43:19.431Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="规则解释"><a href="#规则解释" class="headerlink" title="规则解释"></a>规则解释</h3><ul><li>DOMAIN-SUFFIX：域名后缀匹配</li><li>DOMAIN：域名匹配</li><li>DOMAIN-KEYWORD：域名关键字匹配</li><li>IP-CIDR：IP段匹配</li><li>SRC-IP-CIDR：源IP段匹配</li><li>GEOIP：GEOIP数据库（国家代码）匹配</li><li>DST-PORT：目标端口匹配</li><li>SRC-PORT：源端口匹配</li><li>MATCH：全匹配（一般放在最后）</li></ul><h3 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h3><pre><code class="yaml">   port: 7890   socks-port: 7891   allow-lan: false   mode: Rule   log-level: info   external-controller: 127.0.0.1:9090   Proxy:   Proxy Group:   Rule:   - DOMAIN-SUFFIX,google.com,DIRECT   - DOMAIN-KEYWORD,google,DIRECT   - DOMAIN,google.com,DIRECT   - DOMAIN-SUFFIX,ad.com,REJECT   - GEOIP,CN,DIRECT   - MATCH,DIRECT</code></pre><p>额外支持特定的字段：</p><ul><li>cfw-latency-timeout：延迟测试超时时间（毫秒），默认3000</li><li>cfw-latency-url：延迟测试URL，默认<a href="http://www.gstatic.com/generate_204" target="_blank" rel="noopener">http://www.gstatic.com/generate_204</a></li><li>cfw-bypass：系统代理绕过域名或地址，参考 绕过系统代理</li><li>cfw-conn-break-strategy: 切换节点后或切换配置文件后打断连接</li><li>cfw-profiles-path: 自定义 profiles 目录路径 (beta)</li></ul><blockquote><p>这些配置关乎Clash核心是否能正常启动，如非必要，请勿更改</p></blockquote><h3 id="完全配置记录"><a href="#完全配置记录" class="headerlink" title="完全配置记录"></a>完全配置记录</h3><pre><code class="yaml">    #---------------------------------------------------#    ## 配置文件需要放置在 $HOME/.config/clash/config.yml    ##     ## 如果您不知道如何操作，请参阅 SS-Rule-Snippet 的 Wiki：    ## https://github.com/Hackl0us/SS-Rule-Snippet/wiki/clash(X)    #---------------------------------------------------#    # HTTP 代理端口    port: 7890    # SOCKS5 代理端口    socks-port: 7891    # Linux 和 macOS 的 redir 代理端口 (如需使用此功能，请取消注释)    # redir-port: 7892    # 允许局域网的连接（可用来共享代理）    allow-lan: false    # bind-address: &quot;*&quot;    # 此功能仅在 allow-lan 设置为 true 时生效，支持三种参数：    # &quot;*&quot;                           绑定所有的 IP 地址    # 192.168.122.11                绑定一个的 IPv4 地址    # &quot;[aaaa::a8aa:ff:fe09:57d8]&quot;   绑定一个 IPv6 地址    # 规则模式：Rule（规则） / Global（全局代理）/ Direct（全局直连）    mode: Rule    # 设置日志输出级别 (默认级别：silent，即不输出任何内容，以避免因日志内容过大而导致程序内存溢出）。    # 5 个级别：silent / info / warning / error / debug。级别越高日志输出量越大，越倾向于调试，若需要请自行开启。    log-level: silent    # clash 的 RESTful API    external-controller: 127.0.0.1:9090    # 您可以将静态网页资源（如 clash-dashboard）放置在一个目录中，clash 将会服务于 `${API}/ui`    # 参数应填写配置目录的相对路径或绝对路径。    # external-ui: folder    # RESTful API 的口令 (可选)    # secret: &quot;&quot;    # 实验性功能    experimental:      ignore-resolve-fail: true # 忽略 DNS 解析失败，默认值为 true    # 本地 SOCKS5 / HTTP(S) 服务认证    # authentication:    #  - &quot;user1:pass1&quot;    #  - &quot;user2:pass2&quot;    # # 实验性功能 hosts, 支持通配符 (例如 *.clash.dev 甚至 *.foo.*.example.com)    # # 静态的域名 比 通配域名 具有更高的优先级 (foo.example.com 优先于 *.example.com)    # # 注意: hosts 在 fake-ip 模式下不生效    # hosts:    #   &#39;*.clash.dev&#39;: 127.0.0.1    #   &#39;alpha.clash.dev&#39;: &#39;::1&#39;    dns:      enable: true      ipv6: false      # listen: 0.0.0.0:53      # enhanced-mode: redir-host # 或 fake-ip      # # fake-ip-range: 198.18.0.1/16 # 如果你不知道这个参数的作用，请勿修改      # fake-ip-filter: # fake-ip 白名单列表      #   - &#39;*.lan&#39;      #   - localhost.ptlogin2.qq.com      nameserver:        - 1.2.4.8        - 114.114.114.114        - 223.5.5.5        - tls://13800000000.rubyfish.cn:853        #- https://13800000000.rubyfish.cn/      fallback: # 与 nameserver 内的服务器列表同时发起请求，当规则符合 GEOIP 在 CN 以外时，fallback 列表内的域名服务器生效。        - tls://13800000000.rubyfish.cn:853        - tls://1.0.0.1:853        - tls://dns.google:853        #- https://13800000000.rubyfish.cn/        #- https://cloudflare-dns.com/dns-query        #- https://dns.google/dns-query      fallback-filter:        geoip: true # 默认        ipcidr: # 在这个网段内的 IP 地址会被考虑为被污染的 IP          - 240.0.0.0/4    # 1. clash DNS 请求逻辑：    #   (1) 当访问一个域名时， nameserver 与 fallback 列表内的所有服务器并发请求，得到域名对应的 IP 地址。    #   (2) clash 将选取 nameserver 列表内，解析最快的结果。    #   (3) 若解析结果中，IP 地址属于 国外，那么 clash 将选择 fallback 列表内，解析最快的结果。    #    #   因此，我在 nameserver 和 fallback 内都放置了无污染、解析速度较快的国内 DNS 服务器，以达到最快的解析速度。    #   但是 fallback 列表内服务器会用在解析境外网站，为了结果绝对无污染，我仅保留了支持 DoT/DoH 的两个服务器。    #     # 2. clash DNS 配置注意事项：    #   (1) 如果您为了确保 DNS 解析结果无污染，请仅保留列表内以 tls:// 或 https:// 开头的 DNS 服务器，但是通常对于国内域名没有必要。    #   (2) 如果您不在乎可能解析到污染的结果，更加追求速度。请将 nameserver 列表的服务器插入至 fallback 列表内，并移除重复项。    #     # 3. 关于 DNS over HTTPS (DoH) 和 DNS over TLS (DoT) 的选择：    #   对于两项技术双方各执一词，而且会无休止的争论，各有利弊。各位请根据具体需求自行选择，但是配置文件内默认启用 DoT，因为目前国内没有封锁或管制。    #   DoH: 以 https:// 开头的 DNS 服务器。拥有更好的伪装性，且几乎不可能被运营商或网络管理封锁，但查询效率和安全性可能略低。    #   DoT: 以 tls:// 开头的 DNS 服务器。拥有更高的安全性和查询效率，但端口有可能被管制或封锁。    #   若要了解更多关于 DoH/DoT 相关技术，请自行查阅规范文档。    Proxy:    # shadowsocks    # 所支持的加密方式与 go-shadowsocks2 保持一致    # 支持加密方式：     #   aes-128-gcm aes-192-gcm aes-256-gcm    #   aes-128-cfb aes-192-cfb aes-256-cfb    #   aes-128-ctr aes-192-ctr aes-256-ctr    #   rc4-md5 chacha20 chacha20-ietf xchacha20    #   chacha20-ietf-poly1305 xchacha20-ietf-poly1305      - name: &quot;ss1&quot;        type: ss        server: server        port: 443        cipher: chacha20-ietf-poly1305        password: &quot;password&quot;        # udp: true        - name: &quot;ss2&quot;        type: ss        server: server        port: 443        cipher: AEAD_CHACHA20_POLY1305        password: &quot;password&quot;        plugin: obfs        plugin-opts:          mode: tls # 混淆模式，可以选择 http 或 tls          host: bing.com # 混淆域名，需要和服务器配置保持一致      - name: &quot;ss3&quot;        type: ss        server: server        port: 443        cipher: AEAD_CHACHA20_POLY1305        password: &quot;password&quot;        plugin: v2ray-plugin        plugin-opts:          mode: websocket # 暂时不支持 QUIC 协议          # tls: true # wss          # skip-cert-verify: true          # host: bing.com          # path: &quot;/&quot;          # headers:          #   custom: value    # vmess    # 支持加密方式：auto / aes-128-gcm / chacha20-poly1305 / none      - name: &quot;vmess&quot;        type: vmess        server: server        port: 443        uuid: uuid        alterId: 32        cipher: auto        # udp: true        # tls: true        # skip-cert-verify: true        # network: ws        # ws-path: /path        # ws-headers:        #   Host: v2ray.com      # socks5      - name: &quot;socks&quot;        type: socks5        server: server        port: 443        # username: username        # password: password        # tls: true        # skip-cert-verify: true        # udp: true      # http      - name: &quot;http&quot;        type: http        server: server        port: 443        # username: username        # password: password        # tls: true # https        # skip-cert-verify: true      # snell      - name: &quot;snell&quot;        type: snell        server: server        port: 44046        psk: yourpsk        # obfs-opts:          # mode: http # 或 tls          # host: bing.com    Proxy Group:    # url-test 可以自动选择与指定 URL 测速后，延迟最短的服务器      - name: &quot;auto&quot;        type: url-test        proxies:          - ss1          - ss2          - vmess1        url: &#39;http://www.gstatic.com/generate_204&#39;        interval: 300    # fallback 可以尽量按照用户书写的服务器顺序，在确保服务器可用的情况下，自动选择服务器      - name: &quot;fallback-auto&quot;        type: fallback        proxies:          - ss1          - ss2          - vmess1        url: &#39;http://www.gstatic.com/generate_204&#39;        interval: 300    # load-balance 可以使相同 eTLD 请求在同一条代理线路上      - name: &quot;load-balance&quot;        type: load-balance        proxies:          - ss1          - ss2          - vmess1        url: &#39;http://www.gstatic.com/generate_204&#39;        interval: 300    # select 用来允许用户手动选择 代理服务器 或 服务器组    # 您也可以使用 RESTful API 去切换服务器，这种方式推荐在 GUI 中使用      - name: Proxy        type: select        proxies:          - ss1          - ss2          - vmess1          - auto    Rule:    # 抗 DNS 污染       - DOMAIN-KEYWORD,amazon,Proxy      - DOMAIN-KEYWORD,google,Proxy      - DOMAIN-KEYWORD,gmail,Proxy      - DOMAIN-KEYWORD,youtube,Proxy      - DOMAIN-KEYWORD,facebook,Proxy      - DOMAIN-SUFFIX,fb.me,Proxy      - DOMAIN-SUFFIX,fbcdn.net,Proxy      - DOMAIN-KEYWORD,twitter,Proxy      - DOMAIN-KEYWORD,instagram,Proxy      - DOMAIN-KEYWORD,dropbox,Proxy      - DOMAIN-SUFFIX,twimg.com,Proxy      - DOMAIN-KEYWORD,blogspot,Proxy      - DOMAIN-SUFFIX,youtu.be,Proxy      - DOMAIN-KEYWORD,whatsapp,Proxy    # 常见广告域名屏蔽      - DOMAIN-KEYWORD,admarvel,REJECT      - DOMAIN-KEYWORD,admaster,REJECT      - DOMAIN-KEYWORD,adsage,REJECT      - DOMAIN-KEYWORD,adsmogo,REJECT      - DOMAIN-KEYWORD,adsrvmedia,REJECT      - DOMAIN-KEYWORD,adwords,REJECT      - DOMAIN-KEYWORD,adservice,REJECT      - DOMAIN-KEYWORD,domob,REJECT      - DOMAIN-KEYWORD,duomeng,REJECT      - DOMAIN-KEYWORD,dwtrack,REJECT      - DOMAIN-KEYWORD,guanggao,REJECT      - DOMAIN-KEYWORD,lianmeng,REJECT      - DOMAIN-SUFFIX,mmstat.com,REJECT      - DOMAIN-KEYWORD,omgmta,REJECT      - DOMAIN-KEYWORD,openx,REJECT      - DOMAIN-KEYWORD,partnerad,REJECT      - DOMAIN-KEYWORD,pingfore,REJECT      - DOMAIN-KEYWORD,supersonicads,REJECT      - DOMAIN-KEYWORD,uedas,REJECT      - DOMAIN-KEYWORD,umeng,REJECT      - DOMAIN-KEYWORD,usage,REJECT      - DOMAIN-KEYWORD,wlmonitor,REJECT      - DOMAIN-KEYWORD,zjtoolbar,REJECT    # LAN      - DOMAIN-SUFFIX,local,DIRECT      - IP-CIDR,127.0.0.0/8,DIRECT      - IP-CIDR,172.16.0.0/12,DIRECT      - IP-CIDR,192.168.0.0/16,DIRECT      - IP-CIDR,10.0.0.0/8,DIRECT      - IP-CIDR,17.0.0.0/8,DIRECT      - IP-CIDR,100.64.0.0/10,DIRECT    # 最终规则      - GEOIP,CN,DIRECT      - MATCH,Proxy</code></pre><h3 id="绕过系统代理"><a href="#绕过系统代理" class="headerlink" title="绕过系统代理"></a>绕过系统代理</h3><p>Clash for Windows在v 0.4.5 版本后可以自定义系统代理需要绕过的域名或IP</p><p>部分应用检测到系统代理会拒绝响应（例如网易云音乐uwp），此功能用于解决此类问题</p><p>设置方式<br>config.yaml</p><pre><code class="yaml">    port: 8888    socks-port: 8889    redir-port: 0    allow-lan: true    mode: Rule    log-level: info    external-controller: &#39;0.0.0.0:6170&#39;    secret: &#39;&#39;    Proxy:      ...    Proxy Group:      ...    Rule:      ...    cfw-bypass:      ... # 原有字段不用删除      - &#39;music.163.com&#39; # 网易云域名1      - &#39;*.music.126.net&#39; # 网易云域名2</code></pre><p>cfw-bypass类型为数组，item为需要绕过的域名或节点，支持通配符*</p><blockquote><p>最后一行对应系统中“请勿将代理服务器用于本地(Intranet)地址”选项，请确保此项在最底部</p></blockquote>]]></content>
    
    <summary type="html">
    
      Clash 基本配置记录
    
    </summary>
    
    
      <category term="Clash" scheme="http://blog.joylau.cn/categories/Clash/"/>
    
    
      <category term="Clash" scheme="http://blog.joylau.cn/tags/Clash/"/>
    
  </entry>
  
  <entry>
    <title>重剑无锋,大巧不工 SpringBoot --- 使用 rest-high-level-client 连接 Elasticsearch</title>
    <link href="http://blog.joylau.cn/2020/04/29/SpringBoot-Elasticsearch-RestHighLevelClient/"/>
    <id>http://blog.joylau.cn/2020/04/29/SpringBoot-Elasticsearch-RestHighLevelClient/</id>
    <published>2020-04-29T07:02:01.000Z</published>
    <updated>2020-07-10T00:43:19.439Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="版本环境"><a href="#版本环境" class="headerlink" title="版本环境"></a>版本环境</h3><ol><li>Elasticsearch 6.4.3</li><li>SpringBoot 2.1.2.RELEASE</li></ol><h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><pre><code class="groovy">    compile group: &#39;org.elasticsearch.client&#39;, name: &#39;elasticsearch-rest-high-level-client&#39;, version: &#39;6.4.3&#39;</code></pre><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>其实引入这依赖后, <code>spring-boot-autoconfigure-2.1.2.RELEASE.jar</code> 这个依赖你会为你自动配置 <code>RestHighLevelClient</code>, 而不需要手动创建 <code>RestHighLevelClient</code></p><p>代码具体位置:</p><p>org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientAutoConfiguration</p><pre><code class="java">    /*     * Copyright 2012-2018 the original author or authors.     *     * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);     * you may not use this file except in compliance with the License.     * You may obtain a copy of the License at     *     *      http://www.apache.org/licenses/LICENSE-2.0     *     * Unless required by applicable law or agreed to in writing, software     * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     * See the License for the specific language governing permissions and     * limitations under the License.     */    package org.springframework.boot.autoconfigure.elasticsearch.rest;    import org.apache.http.HttpHost;    import org.apache.http.auth.AuthScope;    import org.apache.http.auth.Credentials;    import org.apache.http.auth.UsernamePasswordCredentials;    import org.apache.http.client.CredentialsProvider;    import org.apache.http.impl.client.BasicCredentialsProvider;    import org.elasticsearch.client.RestClient;    import org.elasticsearch.client.RestClientBuilder;    import org.elasticsearch.client.RestHighLevelClient;    import org.springframework.beans.factory.ObjectProvider;    import org.springframework.boot.autoconfigure.EnableAutoConfiguration;    import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;    import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;    import org.springframework.boot.context.properties.EnableConfigurationProperties;    import org.springframework.boot.context.properties.PropertyMapper;    import org.springframework.context.annotation.Bean;    import org.springframework.context.annotation.Configuration;    /**     * {@link EnableAutoConfiguration Auto-configuration} for Elasticsearch REST clients.     *     * @author Brian Clozel     * @since 2.1.0     */    @Configuration    @ConditionalOnClass(RestClient.class)    @EnableConfigurationProperties(RestClientProperties.class)    public class RestClientAutoConfiguration {        private final RestClientProperties properties;        private final ObjectProvider&lt;RestClientBuilderCustomizer&gt; builderCustomizers;        public RestClientAutoConfiguration(RestClientProperties properties,                ObjectProvider&lt;RestClientBuilderCustomizer&gt; builderCustomizers) {            this.properties = properties;            this.builderCustomizers = builderCustomizers;        }        @Bean        @ConditionalOnMissingBean        public RestClient restClient(RestClientBuilder builder) {            return builder.build();        }        @Bean        @ConditionalOnMissingBean        public RestClientBuilder restClientBuilder() {            HttpHost[] hosts = this.properties.getUris().stream().map(HttpHost::create)                    .toArray(HttpHost[]::new);            RestClientBuilder builder = RestClient.builder(hosts);            PropertyMapper map = PropertyMapper.get();            map.from(this.properties::getUsername).whenHasText().to((username) -&gt; {                CredentialsProvider credentialsProvider = new BasicCredentialsProvider();                Credentials credentials = new UsernamePasswordCredentials(                        this.properties.getUsername(), this.properties.getPassword());                credentialsProvider.setCredentials(AuthScope.ANY, credentials);                builder.setHttpClientConfigCallback((httpClientBuilder) -&gt; httpClientBuilder                        .setDefaultCredentialsProvider(credentialsProvider));            });            this.builderCustomizers.orderedStream()                    .forEach((customizer) -&gt; customizer.customize(builder));            return builder;        }        @Configuration        @ConditionalOnClass(RestHighLevelClient.class)        public static class RestHighLevelClientConfiguration {            @Bean            @ConditionalOnMissingBean            public RestHighLevelClient restHighLevelClient(                    RestClientBuilder restClientBuilder) {                return new RestHighLevelClient(restClientBuilder);            }        }    }</code></pre><p>不过需要先配置 spring.elasticsearch.rest 配置</p><pre><code class="yaml">    spring:      elasticsearch:        rest:          uris:           username:           password: </code></pre><p>默认只配置了 hosts 和 username password, 如果要加更多配置的话, 建议重新添加 <code>RestClientBuilder</code> 的配置</p><p>当然也可以全部手动配置, 我这里给一个参考:</p><pre><code class="java">    package cn.joylau.code.config.elasticsearch.highLevelClient;    import org.apache.http.HttpHost;    import org.elasticsearch.client.RestClient;    import org.elasticsearch.client.RestClientBuilder;    import org.elasticsearch.client.RestHighLevelClient;    import org.springframework.beans.factory.annotation.Value;    import org.springframework.context.annotation.Bean;    import org.springframework.context.annotation.Configuration;    import java.util.ArrayList;    import java.util.List;    /**     * Created by joylau on 2020/4/27.     * cn.joylau.code.config.elasticsearch.highLevelClient     * 2587038142.liu@gmail.com     */    @Configuration    public class ElasticSearchClient {        /** 协议 */        @Value(&quot;${elasticsearch.schema:http}&quot;)        private String schema;        /** 集群地址，如果有多个用“,”隔开 */        @Value(&quot;${elasticsearch.address}&quot;)        private String address;        /** 连接超时时间 */        @Value(&quot;${elasticsearch.connectTimeout:5000}&quot;)        private int connectTimeout;        /** Socket 连接超时时间 */        @Value(&quot;${elasticsearch.socketTimeout:10000}&quot;)        private int socketTimeout;        /** 获取连接的超时时间 */        @Value(&quot;${elasticsearch.connectionRequestTimeout:5000}&quot;)        private int connectionRequestTimeout;        /** 最大连接数 */        @Value(&quot;${elasticsearch.maxConnectNum:100}&quot;)        private int maxConnectNum;        /** 最大路由连接数 */        @Value(&quot;${elasticsearch.maxConnectPerRoute:100}&quot;)        private int maxConnectPerRoute;        @Bean        public RestHighLevelClient restHighLevelClient() {            // 拆分地址            List&lt;HttpHost&gt; hostLists = new ArrayList&lt;&gt;();            String[] hostList = address.split(&quot;,&quot;);            for (String addr : hostList) {                String host = addr.split(&quot;:&quot;)[0];                String port = addr.split(&quot;:&quot;)[1];                hostLists.add(new HttpHost(host, Integer.parseInt(port), schema));            }            // 转换成 HttpHost 数组            HttpHost[] httpHost = hostLists.toArray(new HttpHost[]{});            // 构建连接对象            RestClientBuilder builder = RestClient.builder(httpHost);            // 异步连接延时配置            builder.setRequestConfigCallback(requestConfigBuilder -&gt; {                requestConfigBuilder.setConnectTimeout(connectTimeout);                requestConfigBuilder.setSocketTimeout(socketTimeout);                requestConfigBuilder.setConnectionRequestTimeout(connectionRequestTimeout);                return requestConfigBuilder;            });            // 异步连接数配置            builder.setHttpClientConfigCallback(httpClientBuilder -&gt; {                httpClientBuilder.setMaxConnTotal(maxConnectNum);                httpClientBuilder.setMaxConnPerRoute(maxConnectPerRoute);                return httpClientBuilder;            });            return new RestHighLevelClient(builder);        }    }</code></pre>]]></content>
    
    <summary type="html">
    
      SpringBoot 使用 rest-high-level-client 连接 Elasticsearch
    
    </summary>
    
    
      <category term="SpringBoot篇" scheme="http://blog.joylau.cn/categories/SpringBoot%E7%AF%87/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.joylau.cn/tags/Elasticsearch/"/>
    
      <category term="SpringBoot" scheme="http://blog.joylau.cn/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>ClashX 在英文 Mac 系统中切换界面语言</title>
    <link href="http://blog.joylau.cn/2020/04/28/Clash-Mac-Language/"/>
    <id>http://blog.joylau.cn/2020/04/28/Clash-Mac-Language/</id>
    <published>2020-04-28T07:00:31.000Z</published>
    <updated>2020-07-10T00:43:19.431Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>在网络上搜索关于 ClashX 的教程, 看到的截图都是中文的界面, 而我安装后的界面语言却是英文的, 就想着怎么能够切换下<br>在软件的设置里, 没有找到设置语言的选项</p><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><p>去作者的 Github 去看了下代码, 发现是有中英文的配置的<br>那么既然作者做了语言环境适配, 那么在安装包里肯定有语言文件</p><ol><li>在 <code>Applications</code> 右键 <code>ClashX</code> ,显示包内容</li><li>进入 <code>Resources</code> 目录, 看到 <code>en.lproj</code> 和 <code>zh-Hans.lproj</code></li><li>将 <code>zh-Hans.lproj</code> 目录里的文件拷贝并覆盖掉 <code>en.lproj</code> 里的文件</li><li>重启软件即可</li></ol>]]></content>
    
    <summary type="html">
    
      在网络上搜索关于 ClashX 的教程, 看到的截图都是中文的界面, 而我安装后的界面语言却是英文的, 就想着怎么能够切换下
    
    </summary>
    
    
      <category term="Clash" scheme="http://blog.joylau.cn/categories/Clash/"/>
    
    
      <category term="ClashX" scheme="http://blog.joylau.cn/tags/ClashX/"/>
    
  </entry>
  
  <entry>
    <title>PowerDesigner 数据库逆向生成物理模型并显示 Comment 注释</title>
    <link href="http://blog.joylau.cn/2020/04/27/Tools-PowerDesigner/"/>
    <id>http://blog.joylau.cn/2020/04/27/Tools-PowerDesigner/</id>
    <published>2020-04-27T03:46:01.000Z</published>
    <updated>2020-07-10T00:43:19.442Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><ol><li>PowerDesigner 16.5</li></ol><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>使用 PowerDesigner 的原生方式连接各种数据库我遇到很多问题, 于是,这里我都是使用的 JDBC 的方式连接</p><p>使用 JDBC 方式连接需要注意一下几点</p><ol><li>JDK 的版本必须是 32 位的</li><li>需要 JDBC 的驱动 jar 包</li><li>需要新建 <strong>CLASSPATH</strong> 环境变量, 并且将驱动 jar 包的路径配置到 <code>CLASSPATH</code> 中, 否则的话会导致无法加载驱动类</li></ol><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li>File -&gt; New Module, 选择 <code>Physical Diagram</code>, DBMS 选择实际的数据库类型</li><li>选择 Database -&gt; Configure Connections… -&gt; Connection Profiles , 选择 第二个图标, <code>add data source</code></li><li>Connections Type 现在 JDBC, 然后根据实际情况填写, 注意最后一项的 <code>JDBC driver jar files</code> 的文件需要配置的 CLASSPATH 环境变量中去, 如果已经配置了, 则此项都可以不用选择,亲测</li><li>点击测试,没有问题,保存即可</li><li>选择 Database -&gt; Update Model from Database , 选择需要的表</li><li>此时双击表,可能没有注释, 需要双击表，弹出表属性对话框，切到 ColumnTab ，默认是没显示 Comment 的，此时点击漏斗状的按钮 <code>Customize Columns and Filter</code>, 勾选 <code>Comment</code></li></ol><h3 id="设置物理模型显示注释"><a href="#设置物理模型显示注释" class="headerlink" title="设置物理模型显示注释"></a>设置物理模型显示注释</h3><ol><li>Tools&gt;Display Perferences..</li><li>进入 Table, 先勾选 Comment</li><li>再点击 Advanced -&gt; Columns , 点击 List columns 右边的按钮 <code>select</code> , 选择上 code, 并将位置调的最上方, 点击确定</li><li>Tools&gt;Execute Commands&gt;Edit/Run Script.., 执行下面的脚本, 脚本的作用是将 NAME 替换成 COMMENT</li></ol><pre><code class="bash">    Option   Explicit           ValidationMode   =   True           InteractiveMode   =   im_Batch        Dim blankStr        blankStr   =   Space(1)        Dim   mdl   &#39;   the   current   model          &#39;   get   the   current   active   model           Set   mdl   =   ActiveModel           If   (mdl   Is   Nothing)   Then                 MsgBox   &quot;There   is   no   current   Model &quot;           ElseIf   Not   mdl.IsKindOf(PdPDM.cls_Model)   Then                 MsgBox   &quot;The   current   model   is   not   an   Physical   Data   model. &quot;           Else                 ProcessFolder   mdl           End   If          Private   sub   ProcessFolder(folder)           On Error Resume Next                Dim   Tab   &#39;running     table                 for   each   Tab   in   folder.tables                       if   not   tab.isShortcut   then                             tab.name   =   tab.comment                            Dim   col   &#39;   running   column                             for   each   col   in   tab.columns                             if col.comment = &quot;&quot; or replace(col.comment,&quot; &quot;, &quot;&quot;)=&quot;&quot; Then                                col.name = blankStr                                blankStr = blankStr &amp; Space(1)                          else                                  col.name = col.comment                             end if                            next                       end   if                 next                Dim   view   &#39;running   view                 for   each   view   in   folder.Views                       if   not   view.isShortcut   then                             view.name   =   view.comment                       end   if                 next                &#39;   go   into   the   sub-packages                 Dim   f   &#39;   running   folder                 For   Each   f   In   folder.Packages                       if   not   f.IsShortcut   then                             ProcessFolder   f                       end   if                 Next           end   sub  </code></pre>]]></content>
    
    <summary type="html">
    
      PowerDesigner 数据库逆向生成物理模型并显示 Comment 注释
    
    </summary>
    
    
      <category term="Tools篇" scheme="http://blog.joylau.cn/categories/Tools%E7%AF%87/"/>
    
    
      <category term="PowerDesigner" scheme="http://blog.joylau.cn/tags/PowerDesigner/"/>
    
  </entry>
  
  <entry>
    <title>日常折腾 --- 自制像素时钟, 不输 LaMeetric Time</title>
    <link href="http://blog.joylau.cn/2020/04/23/Daily-Pixel-Clock/"/>
    <id>http://blog.joylau.cn/2020/04/23/Daily-Pixel-Clock/</id>
    <published>2020-04-23T06:30:43.000Z</published>
    <updated>2020-07-10T00:43:19.431Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>之前看到一个像素时钟 LaMeetric Time, 感觉很漂亮, 但是太贵,淘宝上要卖到 2000 块左右<br>后来又看到一个项目 AWTRIX : <a href="https://awtrixdocs.blueforcer.de/#/en-en/" target="_blank" rel="noopener">https://awtrixdocs.blueforcer.de/#/en-en/</a><br>作者在他的网站上介绍了如何制作一个像素时钟<br>于是,我就跟着他的文档后面做了起来</p><h3 id="这玩意是什么"><a href="#这玩意是什么" class="headerlink" title="这玩意是什么??"></a>这玩意是什么??</h3><ol><li>首先它是一个时钟</li><li>其次,他能够通过 WIFI 连接到一个服务端, 服务端有 AppStore 能装很多 app 实现很多效果</li><li>我想用它来实时显示我博客的访客数, 当然,这需要我后期自己编码</li><li>好玩</li></ol><h3 id="材料"><a href="#材料" class="headerlink" title="材料"></a>材料</h3><h4 id="必须材料"><a href="#必须材料" class="headerlink" title="必须材料"></a>必须材料</h4><ol><li>WS2812B 可编程像素软屏</li><li>Wemos D1 mini ESP 8266 mini WIFI 开发板</li><li>杜邦连接线,公对母</li></ol><p>如何你想要制作成我的这种效果, 你还需要</p><ol><li>10V 1000uF 电容</li><li>电烙铁家用一套</li><li>5v 4A 2.5mm 电源</li><li>2.5mm 直流电源插头</li><li>手动修改官方 3D 打印图纸, 这是我修改好的图纸,其中前面板的高度调高了 3 mm : <a href="http://image.joylau.cn//blog/awtrix2/3d打印图纸.zip" target="_blank" rel="noopener">http://image.joylau.cn//blog/awtrix2/3d打印图纸.zip</a></li><li>手摇自喷漆一罐</li><li>定制黑色半透明亚克力板一块,尺寸 335mm * 95mm * 3mm</li><li>通用超 520 粘胶一小瓶</li></ol><h3 id="服务端部署"><a href="#服务端部署" class="headerlink" title="服务端部署"></a>服务端部署</h3><p>这里最方便的莫过于 docker 部署</p><pre><code class="bash">    docker run -d --name awtrix2 -p 7000:7000 -p 7001:7001 --restart always -e TZ=Asia/Shanghai -v /path:/data whyet/awtrix2:latest</code></pre><p>注意: 这里需要挂载容器里的目录 data, 否则重启后,安装的软件会丢失不见</p><h3 id="客户端烧录"><a href="#客户端烧录" class="headerlink" title="客户端烧录"></a>客户端烧录</h3><p>最简单的方式是使用 Windows 机器</p><ol><li>下载烧录工具: <a href="https://blueforcer.de/downloads/ESP8266Flasher.exe" target="_blank" rel="noopener">https://blueforcer.de/downloads/ESP8266Flasher.exe</a></li><li>下载最新固件: <a href="https://blueforcer.de/awtrix/stable/firmware.bin" target="_blank" rel="noopener">https://blueforcer.de/awtrix/stable/firmware.bin</a></li><li>启动 ESP8266Flasher.exe 并在 “ Config” 选项卡中打开固件（单击齿轮选择固件）</li><li>返回到 “操作” 选项卡，如果未自动检测到正确的串口，则需要手动设置它</li><li>单击“ Flash”，然后等待该过程完成，在左下角会显示一个绿色的复选标记。</li><li>重新启动控制器</li></ol><h3 id="连接-WiFi"><a href="#连接-WiFi" class="headerlink" title="连接 WiFi"></a>连接 WiFi</h3><ol><li>启动控制器</li><li>手机连接 SSID 为 “ AWTRIX Controller ” 的 WiFi, 密码是: <strong>awtrixxx</strong></li><li>如果网页没有自动跳出，则可以使用任何浏览器将设置页面导航到 IP “ 172.217.28.1 ”</li><li>点击“配置WiFi”，进入实际设置页面,配置家里的 WLAN 的 SSID 和密码</li><li>主机 IP 则设置为之前 docker 部署的服务端的 IP, 注意不需要加端口号</li><li>如果你的像素屏不是 32* 8 ,则需要配置 MatrixType2, 这个不需要配置</li></ol><h3 id="如何重置控制器"><a href="#如何重置控制器" class="headerlink" title="如何重置控制器???"></a>如何重置控制器???</h3><ol><li>按住控制器的 reset 键 3-4 秒</li><li>等待重启</li><li>再按住 reset 键 3-4 秒</li><li>等待重启</li><li>此时如何屏上显示 <strong>RESET</strong> ,则重置成功</li></ol><h3 id="接线图"><a href="#接线图" class="headerlink" title="接线图"></a>接线图</h3><p><img src="//image.joylau.cn/blog/awtrix2/AWTRIX_Core_Steckplatine.jpg" alt="1"></p><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_1.jpg" alt="2">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_2.jpg" alt="3">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_3.jpg" alt="4">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_4.jpg" alt="5">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_5.jpg" alt="6">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_6.jpg" alt="7">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_7.jpg" alt="8">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_8.jpg" alt="9">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_9.jpg" alt="10">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_10.jpg" alt="11">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_11.jpg" alt="12">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_12.jpg" alt="13">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_13.jpg" alt="14">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_14.jpg" alt="15">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_15.jpg" alt="16">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_16.jpg" alt="17">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_17.jpg" alt="18">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_18.jpg" alt="19">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_19.jpg" alt="20">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_20.jpg" alt="21">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_21.jpg" alt="22">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_22.jpg" alt="23">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_23.jpg" alt="24">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_24.jpg" alt="25">  </p><p><img src="//image.joylau.cn/blog/awtrix2/server-page-1.png" alt="26">  </p><p><img src="//image.joylau.cn/blog/awtrix2/server-page-2.png" alt="27">  </p><center><video src="//image.joylau.cn/blog/awtrix2/awtrix2_video1.mp4" muted loop="true" controls="controls">您的浏览器版本太低，无法观看本视频</video></center>  <center><video src="//image.joylau.cn/blog/awtrix2/awtrix2_video2.mp4" muted loop="true" controls="controls">您的浏览器版本太低，无法观看本视频</video></center>  <h3 id="Siri-语音控制"><a href="#Siri-语音控制" class="headerlink" title="Siri 语音控制"></a>Siri 语音控制</h3><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_siri-1.PNG" alt="28">  </p><p><img src="//image.joylau.cn/blog/awtrix2/awtrix2_siri-2.PNG" alt="29"></p>]]></content>
    
    <summary type="html">
    
      自制像素时钟, 不输 LaMeetric Time
    
    </summary>
    
    
      <category term="日常折腾篇" scheme="http://blog.joylau.cn/categories/%E6%97%A5%E5%B8%B8%E6%8A%98%E8%85%BE%E7%AF%87/"/>
    
    
      <category term="日常折腾" scheme="http://blog.joylau.cn/tags/%E6%97%A5%E5%B8%B8%E6%8A%98%E8%85%BE/"/>
    
  </entry>
  
  <entry>
    <title>Docker ENTRYPOINT 和 CMD 组合使用</title>
    <link href="http://blog.joylau.cn/2020/04/22/Docker-ENTRYPOINT-CMD/"/>
    <id>http://blog.joylau.cn/2020/04/22/Docker-ENTRYPOINT-CMD/</id>
    <published>2020-04-22T05:55:53.000Z</published>
    <updated>2020-07-10T00:43:19.432Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h3><ol><li>清楚 ENTRYPOINT 和 CMD 的 shell 和 exec 的 2 种写法</li><li>定义多个 CMD, 只有最后一个 CMD 生效</li><li>同时定义 ENTRYPOINT 和 CMD, 那么 ENTRYPOINT 会覆盖 CMD</li></ol><h3 id="总结的结论"><a href="#总结的结论" class="headerlink" title="总结的结论"></a>总结的结论</h3><ol><li>ENTRYPOINT 使用了 shell 模式，CMD 指令会被忽略</li><li>ENTRYPOINT 使用了 exec 模式，CMD 指定的内容被追加为 ENTRYPOINT 指定命令的参数</li><li>ENTRYPOINT 使用了 exec 模式，CMD 也应该使用 exec 模式</li><li>Dockerfile 里至少定义一个 ENTRYPOINT 或者 CMD</li></ol><p>下面是官方文档里 2 种组合情况</p><table><thead><tr><th></th><th>No ENTRYPOINT</th><th>ENTRYPOINT exec_entry p1_entry</th><th>ENTRYPOINT [“exec_entry”, “p1_entry”]</th></tr></thead><tbody><tr><td>No CMD</td><td>error, not allowed</td><td>/bin/sh -c exec_entry p1_entry</td><td>exec_entry p1_entry</td></tr><tr><td>CMD [“exec_cmd”, “p1_cmd”]</td><td>exec_cmd p1_cmd</td><td>/bin/sh -c exec_entry p1_entry</td><td>exec_entry p1_entry exec_cmd p1_cmd</td></tr><tr><td>CMD [“p1_cmd”, “p2_cmd”]</td><td>p1_cmd p2_cmd</td><td>/bin/sh -c exec_entry p1_entry</td><td>exec_entry p1_entry p1_cmd p2_cmd</td></tr><tr><td>CMD exec_cmd p1_cmd</td><td>/bin/sh -c exec_cmd p1_cmd</td><td>/bin/sh -c exec_entry p1_entry</td><td>exec_entry p1_entry /bin/sh -c exec_cmd p1_cmd</td></tr></tbody></table><h3 id="docker-entrypoint-sh-的使用"><a href="#docker-entrypoint-sh-的使用" class="headerlink" title="docker-entrypoint.sh 的使用"></a>docker-entrypoint.sh 的使用</h3><p>参照我 blog 的 Dockerfile 的 docker-entrypoint.sh</p><h4 id="set-e"><a href="#set-e" class="headerlink" title="set -e"></a>set -e</h4><p>文件开头加上set -e, 这句语句告诉bash如果任何语句的执行结果不是true则应该退出</p><h4 id="exec-gosu-www-data-“-0”-“-”"><a href="#exec-gosu-www-data-“-0”-“-”" class="headerlink" title="exec gosu www-data “$0” “$@”"></a>exec gosu www-data “$0” “$@”</h4><p>使用 gosu 来切换身份,而不是 su<br>$0 代表当前的 shell 脚本名, $@ 代表 CMD 的第一个参数</p><h4 id="exec-“-”"><a href="#exec-“-”" class="headerlink" title="exec “$@”"></a>exec “$@”</h4><p>当在 docker-entrypoint.sh 执行了一些需要初始化的事情后,边去执行 CMD 定义的脚本</p><h4 id="综合"><a href="#综合" class="headerlink" title="综合"></a>综合</h4><pre><code class="bash">    #!/bin/bash    set -e    if [ &quot;$1&quot; = &#39;/my-blog/bash/init.sh&#39; -a &quot;$(id -u)&quot; = &#39;0&#39; ]; then        service nginx start        service fcgiwrap start        echo &quot;☆☆☆☆☆ base service has started. ☆☆☆☆☆&quot;        exec gosu www-data &quot;$0&quot; &quot;$@&quot;    fi    exec &quot;$@&quot;</code></pre><p>解释: 如果 CMD 的第一个参数是 <code>/my-blog/bash/init.sh</code>,并且 当前用户是 root 的话, 那么启动 <code>nginx</code> 和 <code>fcgiwrap</code> 服务,并切换到 <code>www-data</code> 的身份,带上参数 <code>/my-blog/bash/init.sh</code>, 再次运行 <code>docker-entrypoint.sh</code></p><p>当再次执行该脚本时由于已经不是 root 用户了, 会直接执行 <code>exec &quot;$@&quot;</code>,  于是直接执行带的参数,即 CMD 定义的脚本.</p><p>很多 Dockerfile 都是这样的做法,比如 MySQL , Redis </p>]]></content>
    
    <summary type="html">
    
      Docker ENTRYPOINT 和 CMD 组合使用
    
    </summary>
    
    
      <category term="Docker篇" scheme="http://blog.joylau.cn/categories/Docker%E7%AF%87/"/>
    
    
      <category term="Docker" scheme="http://blog.joylau.cn/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>日常折腾 --- iPhone 7 更换电池,缝缝补补又三年</title>
    <link href="http://blog.joylau.cn/2020/04/21/Daily-iPhone7-Replace-Battery/"/>
    <id>http://blog.joylau.cn/2020/04/21/Daily-iPhone7-Replace-Battery/</id>
    <published>2020-04-21T07:13:57.000Z</published>
    <updated>2020-07-10T00:43:19.432Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>有台老 iPhone 7,电池峰值只有 66%, 家人一直在用,想着买块电池换上,缝缝补补又三年….</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>使用 0.8mm 五角螺丝刀拆下充电口 2 边的螺丝</li><li>吹风机均匀加热手机 5 分钟, 使手机的边框的防水胶变软</li><li>使用吸盘吸住屏幕,并使用拆机片沿手机尾部慢慢切入,并沿着四周慢慢划开</li><li>注意手机的右侧,有屏幕和指纹的排线,切入右侧的时候需要小心</li><li>打开手机屏幕,将手机绑到一个瓶子上固定住</li></ol><p><img src="//image.joylau.cn/blog/iPhone7/1.jpeg" alt="1"></p><p><img src="//image.joylau.cn/blog/iPhone7/2.jpeg" alt="2"></p><ol start="6"><li>卸下下图位置的挡板,先断开电池的排线, 在断开指纹和屏幕的排线</li></ol><p><img src="//image.joylau.cn/blog/iPhone7/4.jpeg" alt="4"></p><p><img src="//image.joylau.cn/blog/iPhone7/3.jpeg" alt="3"></p><ol start="7"><li>断开电池尾部震动马达的排线和手机上面的排线接口</li></ol><p><img src="//image.joylau.cn/blog/iPhone7/5.jpeg" alt="5"></p><ol start="8"><li>拿下屏幕,使用镊子挑开屏幕尾部的易拉胶,再慢慢抽出来, 我这里抽断了,再次使用吹风机在背部加热三分钟,然后在使用拆机片沿底部慢慢切入划开,注意不要硬撬,有风险</li></ol><p><img src="//image.joylau.cn/blog/iPhone7/6.jpeg" alt="6"></p><p>花了不少时间,电池都形变了</p><p><img src="//image.joylau.cn/blog/iPhone7/7.jpeg" alt="7"></p><p><img src="//image.joylau.cn/blog/iPhone7/8.jpeg" alt="8"></p><ol start="9"><li>卸下的螺丝按位置摆放好</li></ol><p><img src="//image.joylau.cn/blog/iPhone7/9.jpeg" alt="9"></p><ol start="10"><li><p>换上新电池,注意先扣上排线接口,再放入电池</p></li><li><p>依次接好之前挑开的排线,开机测试,查看电池容量, 测试电池充放电是否正常..</p></li><li><p>没有问题,再次关机, 在电池背部贴上易拉胶,上好之前卸下的螺丝,扣上屏幕</p></li><li><p>满血复活</p></li></ol><p><img src="//image.joylau.cn/blog/iPhone7/10.jpeg" alt="10"></p>]]></content>
    
    <summary type="html">
    
      有台老 iPhone 7,电池峰值只有 66%, 家人一直在用,想着买块电池换上,缝缝补补又三年....
    
    </summary>
    
    
      <category term="日常折腾篇" scheme="http://blog.joylau.cn/categories/%E6%97%A5%E5%B8%B8%E6%8A%98%E8%85%BE%E7%AF%87/"/>
    
    
  </entry>
  
  <entry>
    <title>重剑无锋,大巧不工 SpringBoot --- Filebeat 实时收集 SpringBoot 日志</title>
    <link href="http://blog.joylau.cn/2020/04/18/SpringBoot-FileBeat/"/>
    <id>http://blog.joylau.cn/2020/04/18/SpringBoot-FileBeat/</id>
    <published>2020-04-18T03:21:06.000Z</published>
    <updated>2020-07-10T00:43:19.440Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><ol><li>Filebeat 版本为 6.4.3</li></ol><h3 id="logback-配置"><a href="#logback-配置" class="headerlink" title="logback 配置"></a>logback 配置</h3><pre><code class="yaml">    logging:      config: classpath:logback-config.xml</code></pre><pre><code class="xml">    &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;      &lt;configuration scan=&quot;true&quot;&gt;          &lt;appender name=&quot;CONSOLE&quot; class=&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt;              &lt;encoder class=&quot;ch.qos.logback.classic.encoder.PatternLayoutEncoder&quot;&gt;                  &lt;pattern&gt;%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%exception}                  &lt;/pattern&gt;              &lt;/encoder&gt;          &lt;/appender&gt;          &lt;appender name=&quot;CONSOLE-FILE&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;              &lt;file&gt;                  /Users/joylau/docker-data/logs/es-doc-office-service/es-doc-office-service-console.log              &lt;/file&gt;              &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;                  &lt;fileNamePattern&gt;                      /Users/joylau/docker-data/logs/es-doc-office-service/es-doc-office-service-console-%d{yyyy-MM-dd}.log.gz                  &lt;/fileNamePattern&gt;                  &lt;!--最大保留时间为 7 天--&gt;                  &lt;maxHistory&gt;7&lt;/maxHistory&gt;              &lt;/rollingPolicy&gt;              &lt;encoder class=&quot;ch.qos.logback.classic.encoder.PatternLayoutEncoder&quot;&gt;                  &lt;pattern&gt;%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%exception}                  &lt;/pattern&gt;              &lt;/encoder&gt;          &lt;/appender&gt;          &lt;appender name=&quot;JSON-FILE&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;              &lt;file&gt;                  /Users/joylau/docker-data/logs/es-doc-office-service/es-doc-office-service-json.log              &lt;/file&gt;              &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;                  &lt;fileNamePattern&gt;                      /Users/joylau/docker-data/logs/es-doc-office-service/es-doc-office-service-json-%d{yyyy-MM-dd}.log.gz                  &lt;/fileNamePattern&gt;                  &lt;maxHistory&gt;7&lt;/maxHistory&gt;              &lt;/rollingPolicy&gt;              &lt;encoder class=&quot;net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder&quot;&gt;                  &lt;!--            json 日志美化--&gt;                  &lt;!--            &lt;jsonGeneratorDecorator class=&quot;net.logstash.logback.decorate.PrettyPrintingJsonGeneratorDecorator&quot;/&gt;--&gt;                  &lt;jsonGeneratorDecorator class=&quot;net.logstash.logback.decorate.FeatureJsonGeneratorDecorator&quot;/&gt;                  &lt;providers&gt;                      &lt;pattern&gt;                          &lt;pattern&gt;                              {                              &quot;date&quot;: &quot;%date{yyyy-MM-dd HH:mm:ss}&quot;,                              &quot;level&quot;: &quot;%level&quot;,                              &quot;thread&quot;: &quot;%thread&quot;,                              &quot;class&quot;: &quot;%logger{500}&quot;,                              &quot;msg&quot;: &quot;%msg&quot;,                              &quot;stack_trace&quot;: &quot;%exception{2000}&quot;                              }                          &lt;/pattern&gt;                      &lt;/pattern&gt;                  &lt;/providers&gt;              &lt;/encoder&gt;          &lt;/appender&gt;          &lt;root level=&quot;INFO&quot;&gt;              &lt;appender-ref ref=&quot;CONSOLE&quot;/&gt;              &lt;appender-ref ref=&quot;CONSOLE-FILE&quot;/&gt;              &lt;appender-ref ref=&quot;JSON-FILE&quot;/&gt;          &lt;/root&gt;          &lt;!--打印 mysql 日志--&gt;          &lt;logger name=&quot;cn.joylau.code.mapper&quot; level=&quot;DEBUG&quot;&gt;              &lt;appender-ref ref=&quot;CONSOLE&quot;/&gt;              &lt;appender-ref ref=&quot;CONSOLE-FILE&quot;/&gt;              &lt;appender-ref ref=&quot;JSON-FILE&quot;/&gt;          &lt;/logger&gt;      &lt;/configuration&gt;</code></pre><p>我这里记录了 2 份文件日志是因为我想在日志端点监控中(/actuator/logfile)直接访问控制台日志<br>需要配置 </p><pre><code class="yaml">    logging:      file: /path/es-doc-office-service-console.log</code></pre><p>这里简单记录下 logback 配置文件:</p><p>logback的主要组成部分</p><ul><li>appender，是用来定义一个写日志记录的组件，常用的appender类有ConsoleAppender和RollingFileAppender，前者个是用来在控制台上打印日志，后者是将日志输出到文件中。</li><li>layout，是指定日志的布局方式，这个基本都不会去特殊的指定，可以忽略，知道有这个东西即可。</li><li>encoder，负责把事件转换成字节数组并把字节数组写到合适的输出流。encoder可以指定属性值class，这里对应的类只有一个PatternLayoutEncoder，也是默认值，可以不去指定。</li><li>filter，过滤器分为三种，logback-classic提供的是两种，分别是常规的过滤器和Turbo过滤器。常用的过滤器就是按照日志级别来控制，将不同级别的日志输出到不同文件中，便于查看日志。如：错误日志输出到xxx-error.log，info日志输出到xxx-info.log中。</li><li>rollingPolicy，用来设置日志的滚动策略，当达到条件后会自动将条件前的日志生成一个备份日志文件，条件后的日志输出到最新的日志文件中。常用的是按照时间来滚动（使用的类TimeBaseRollingPolicy）,还有一种就是基于索引来实现（使用的类FixedWindowRollingPolicy）。rolling policies有 TimeBasedRollingPolicy，SizeAndTimeBasedRollingPolicy,FixedWindowRollingPolicy三种策略</li><li>triggeringPolicy，日志触发器策略，常用的是日志的大小的控制，当日志达到对应的大小的时候，就会触发。生成新的日志文件。日志大小的控制配合rollingPlicy使用的时候，不同的rollingPolicy会有所不同。</li></ul><h3 id="springboot-日志输出格式"><a href="#springboot-日志输出格式" class="headerlink" title="springboot 日志输出格式"></a>springboot 日志输出格式</h3><pre><code class="json">    {&quot;date&quot;:&quot;2020-04-18 09:18:56&quot;,&quot;level&quot;:&quot;INFO&quot;,&quot;thread&quot;:&quot;main&quot;,&quot;class&quot;:&quot;cn.joylau.code.EsDocOfficeApplication&quot;,&quot;msg&quot;:&quot;Starting EsDocOfficeApplication on JoyLaudeMacBook-Pro.local with PID 21663 (/Users/joylau/dev/idea-project/dev-app/es-doc-office/es-doc-office-service/build/classes/java/main started by joylau in /Users/joylau/dev/idea-project/es-doc-office)&quot;,&quot;stack_trace&quot;:&quot;&quot;}    {&quot;date&quot;:&quot;2020-04-18 09:18:56&quot;,&quot;level&quot;:&quot;INFO&quot;,&quot;thread&quot;:&quot;main&quot;,&quot;class&quot;:&quot;cn.joylau.code.EsDocOfficeApplication&quot;,&quot;msg&quot;:&quot;The following profiles are active: db,dev&quot;,&quot;stack_trace&quot;:&quot;&quot;}    {&quot;date&quot;:&quot;2020-04-18 09:18:58&quot;,&quot;level&quot;:&quot;INFO&quot;,&quot;thread&quot;:&quot;main&quot;,&quot;class&quot;:&quot;org.springframework.data.repository.config.RepositoryConfigurationDelegate&quot;,&quot;msg&quot;:&quot;Bootstrapping Spring Data repositories in DEFAULT mode.&quot;,&quot;stack_trace&quot;:&quot;&quot;}    {&quot;date&quot;:&quot;2020-04-18 09:18:58&quot;,&quot;level&quot;:&quot;INFO&quot;,&quot;thread&quot;:&quot;main&quot;,&quot;class&quot;:&quot;org.springframework.data.repository.config.RepositoryConfigurationDelegate&quot;,&quot;msg&quot;:&quot;Finished Spring Data repository scanning in 86ms. Found 3 repository interfaces.&quot;,&quot;stack_trace&quot;:&quot;&quot;}    {&quot;date&quot;:&quot;2020-04-18 09:18:58&quot;,&quot;level&quot;:&quot;INFO&quot;,&quot;thread&quot;:&quot;main&quot;,&quot;class&quot;:&quot;org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker&quot;,&quot;msg&quot;:&quot;Bean &#39;org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration&#39; of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a477e06a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)&quot;,&quot;stack_trace&quot;:&quot;&quot;}    {&quot;date&quot;:&quot;2020-04-18 09:18:59&quot;,&quot;level&quot;:&quot;WARN&quot;,&quot;thread&quot;:&quot;main&quot;,&quot;class&quot;:&quot;io.undertow.websockets.jsr&quot;,&quot;msg&quot;:&quot;UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used&quot;,&quot;stack_trace&quot;:&quot;&quot;}    {&quot;date&quot;:&quot;2020-04-18 09:18:59&quot;,&quot;level&quot;:&quot;INFO&quot;,&quot;thread&quot;:&quot;main&quot;,&quot;class&quot;:&quot;io.undertow.servlet&quot;,&quot;msg&quot;:&quot;Initializing Spring embedded WebApplicationContext&quot;,&quot;stack_trace&quot;:&quot;&quot;}    {&quot;date&quot;:&quot;2020-04-18 09:18:59&quot;,&quot;level&quot;:&quot;INFO&quot;,&quot;thread&quot;:&quot;main&quot;,&quot;class&quot;:&quot;org.springframework.web.context.ContextLoader&quot;,&quot;msg&quot;:&quot;Root WebApplicationContext: initialization completed in 2231 ms&quot;,&quot;stack_trace&quot;:&quot;&quot;}    {&quot;date&quot;:&quot;2020-04-18 09:18:59&quot;,&quot;level&quot;:&quot;INFO&quot;,&quot;thread&quot;:&quot;main&quot;,&quot;class&quot;:&quot;com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure&quot;,&quot;msg&quot;:&quot;Init DruidDataSource&quot;,&quot;stack_trace&quot;:&quot;&quot;}</code></pre><h3 id="filebeat-配置"><a href="#filebeat-配置" class="headerlink" title="filebeat 配置"></a>filebeat 配置</h3><pre><code class="yaml">    #=========================== Configure logging ================================    logging.level: warning    #=========================== Filebeat prospectors =============================    filebeat.inputs:      - type: log        # Paths that should be crawled and fetched. Glob based paths.        paths:          - /var/log/read-log/*.log        json.keys_under_root: true        json.overwrite_keys: true    #-------------------------- Elasticsearch output ------------------------------    output.elasticsearch:      # Array of hosts to connect to.      hosts: [&quot;http://ip:9200&quot;]      index: &quot;service-runtime-log_%{+YYYY-MM-dd}&quot;      username: &quot;username&quot;      password: &quot;password&quot;    setup:template.enabled: true    setup.template.overwrite: true    setup.template.name: &quot;service-log-filebeat-template&quot;    setup.template.pattern: &quot;service-runtime-log_*&quot;    setup.template.json.enabled: true    setup.template.json.path: &quot;/usr/share/filebeat/filebeat.template.json&quot;    setup.template.json.name: &quot;service-log-filebeat-template&quot;</code></pre><p>注意这里我使用了自定义模板 <code>filebeat.template.json</code>, 因为我需要处理一下特殊字段, 比如 date 字段需要设置为日期类型, <code>msg</code> 和 <code>stack_trace</code> 设置为 text 以供分词和全文检索,<br>默认处理使用的字段在配置文件 <code>fields.yml</code> 里,见下面附录<br>可以使用 </p><pre><code class="bash">    filebeat export template &gt; /var/log/read-log/filebeat.template.json</code></pre><p>导出模板,详细配置见下面的附录</p><h3 id="模板配置"><a href="#模板配置" class="headerlink" title="模板配置"></a>模板配置</h3><pre><code class="json">    {      &quot;index_patterns&quot;: [        &quot;service-runtime-log_*&quot;      ],      &quot;mappings&quot;: {        &quot;doc&quot;: {          &quot;_meta&quot;: {            &quot;version&quot;: &quot;6.4.3&quot;          },          &quot;date_detection&quot;: false,          &quot;dynamic_templates&quot;: [            {              &quot;fields&quot;: {                &quot;mapping&quot;: {                  &quot;type&quot;: &quot;keyword&quot;                },                &quot;match_mapping_type&quot;: &quot;string&quot;,                &quot;path_match&quot;: &quot;fields.*&quot;              }            },            {              &quot;docker.container.labels&quot;: {                &quot;mapping&quot;: {                  &quot;type&quot;: &quot;keyword&quot;                },                &quot;match_mapping_type&quot;: &quot;string&quot;,                &quot;path_match&quot;: &quot;docker.container.labels.*&quot;              }            },            {              &quot;kibana.log.meta&quot;: {                &quot;mapping&quot;: {                  &quot;type&quot;: &quot;keyword&quot;                },                &quot;match_mapping_type&quot;: &quot;string&quot;,                &quot;path_match&quot;: &quot;kibana.log.meta.*&quot;              }            },            {              &quot;strings_as_keyword&quot;: {                &quot;mapping&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                },                &quot;match_mapping_type&quot;: &quot;string&quot;              }            }          ],          &quot;properties&quot;: {            &quot;@timestamp&quot;: {              &quot;type&quot;: &quot;date&quot;            },            &quot;beat&quot;: {              &quot;properties&quot;: {                &quot;hostname&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                },                &quot;name&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                },                &quot;timezone&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                },                &quot;version&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                }              }            },            &quot;offset&quot;: {              &quot;type&quot;: &quot;long&quot;            },            &quot;source&quot;: {              &quot;ignore_above&quot;: 1024,              &quot;type&quot;: &quot;keyword&quot;            },            &quot;date&quot;: {              &quot;type&quot;: &quot;date&quot;,              &quot;format&quot;: &quot;yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||epoch_millis&quot;            },            &quot;stack_trace&quot;: {              &quot;type&quot;: &quot;text&quot;            },            &quot;msg&quot;: {              &quot;type&quot;: &quot;text&quot;            }          }        }      },      &quot;order&quot;: 1,      &quot;settings&quot;: {        &quot;index&quot;: {          &quot;mapping&quot;: {            &quot;total_fields&quot;: {              &quot;limit&quot;: 10000            }          },          &quot;number_of_routing_shards&quot;: 30,          &quot;refresh_interval&quot;: &quot;5s&quot;        }      },      &quot;aliases&quot;: {        &quot;service-runtime-log&quot;: {}      }    }</code></pre><h3 id="docker-运行"><a href="#docker-运行" class="headerlink" title="docker 运行"></a>docker 运行</h3><pre><code class="bash">    docker run --rm --name filebeat --mount type=bind,source=&quot;$(pwd)&quot;/filebeat.yml,target=/usr/share/filebeat/filebeat.yml --mount type=bind,source=&quot;$(pwd)&quot;/filebeat.template.json,target=/usr/share/filebeat/filebeat.template.json -v /Users/joylau/docker-data/logs/es-doc-office-service:/var/log/read-log docker.elastic.co/beats/filebeat:6.4.3</code></pre><h3 id="自定义-docker-容器"><a href="#自定义-docker-容器" class="headerlink" title="自定义 docker 容器"></a>自定义 docker 容器</h3><pre><code class="dockerfile">    FROM docker.elastic.co/beats/filebeat:6.4.3    MAINTAINER liufa &quot;2587038142.liu@gmail.com&quot;    LABEL Descripttion=&quot;This image use custom configuration filebeat in Docker.&quot;    COPY filebeat.yml /usr/share/filebeat/filebeat.yml    COPY filebeat.template.json /usr/share/filebeat/filebeat.template.json    USER root    RUN chown root:filebeat /usr/share/filebeat/filebeat.yml /usr/share/filebeat/filebeat.template.json    USER filebeat</code></pre><h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><pre><code class="json">    {      &quot;_index&quot;: &quot;service-runtime-log_2020-04-18&quot;,      &quot;_type&quot;: &quot;doc&quot;,      &quot;_id&quot;: &quot;PiQoi3EBOwES5EhZK7lp&quot;,      &quot;_version&quot;: 1,      &quot;_score&quot;: 1,      &quot;_source&quot;: {        &quot;@timestamp&quot;: &quot;2020-04-18T02:39:56.273Z&quot;,        &quot;thread&quot;: &quot;main&quot;,        &quot;source&quot;: &quot;/var/log/read-log/es-doc-office-service-2020-04-18.log&quot;,        &quot;offset&quot;: 2145,        &quot;input&quot;: {          &quot;type&quot;: &quot;log&quot;        },        &quot;beat&quot;: {          &quot;name&quot;: &quot;032aebe1f6bc&quot;,          &quot;hostname&quot;: &quot;032aebe1f6bc&quot;,          &quot;version&quot;: &quot;6.4.3&quot;        },        &quot;host&quot;: {          &quot;name&quot;: &quot;032aebe1f6bc&quot;        },        &quot;msg&quot;: &quot;Init DruidDataSource&quot;,        &quot;date&quot;: &quot;2020-04-18 09:18:59&quot;,        &quot;class&quot;: &quot;com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure&quot;,        &quot;prospector&quot;: {          &quot;type&quot;: &quot;log&quot;        },        &quot;stack_trace&quot;: &quot;&quot;,        &quot;level&quot;: &quot;INFO&quot;      }    }</code></pre><h3 id="处理-timestamp-时区问题"><a href="#处理-timestamp-时区问题" class="headerlink" title="处理 timestamp 时区问题"></a>处理 timestamp 时区问题</h3><p>使用 filebeat 处理数据可以利用 elasticsearch 的 pipline</p><p>PUT /_ingest/pipeline/process_data</p><pre><code class="json">    {      &quot;description&quot; : &quot;process timestamp field to &quot;,      &quot;processors&quot; : [        {          &quot;date&quot; : {            &quot;field&quot; : &quot;@timestamp&quot;,            &quot;formats&quot; : [&quot;ISO8601&quot;],            &quot;target_field&quot; : &quot;@timestamp&quot;,            &quot;timezone&quot; : &quot;Asia/Shanghai&quot;          }        }      ]    }</code></pre><h3 id="附录一-filebeat-template-all-json"><a href="#附录一-filebeat-template-all-json" class="headerlink" title="附录一(filebeat.template-all.json)"></a>附录一(filebeat.template-all.json)</h3><pre><code class="json">    {      &quot;index_patterns&quot;: [        &quot;filebeat_log_*&quot;      ],      &quot;mappings&quot;: {        &quot;doc&quot;: {          &quot;_meta&quot;: {            &quot;version&quot;: &quot;6.4.3&quot;          },          &quot;date_detection&quot;: false,          &quot;dynamic_templates&quot;: [            {              &quot;fields&quot;: {                &quot;mapping&quot;: {                  &quot;type&quot;: &quot;keyword&quot;                },                &quot;match_mapping_type&quot;: &quot;string&quot;,                &quot;path_match&quot;: &quot;fields.*&quot;              }            },            {              &quot;docker.container.labels&quot;: {                &quot;mapping&quot;: {                  &quot;type&quot;: &quot;keyword&quot;                },                &quot;match_mapping_type&quot;: &quot;string&quot;,                &quot;path_match&quot;: &quot;docker.container.labels.*&quot;              }            },            {              &quot;kibana.log.meta&quot;: {                &quot;mapping&quot;: {                  &quot;type&quot;: &quot;keyword&quot;                },                &quot;match_mapping_type&quot;: &quot;string&quot;,                &quot;path_match&quot;: &quot;kibana.log.meta.*&quot;              }            },            {              &quot;strings_as_keyword&quot;: {                &quot;mapping&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                },                &quot;match_mapping_type&quot;: &quot;string&quot;              }            }          ],          &quot;properties&quot;: {            &quot;@timestamp&quot;: {              &quot;type&quot;: &quot;date&quot;            },            &quot;apache2&quot;: {              &quot;properties&quot;: {                &quot;access&quot;: {                  &quot;properties&quot;: {                    &quot;agent&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;body_sent&quot;: {                      &quot;properties&quot;: {                        &quot;bytes&quot;: {                          &quot;type&quot;: &quot;long&quot;                        }                      }                    },                    &quot;geoip&quot;: {                      &quot;properties&quot;: {                        &quot;city_name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;continent_name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;country_iso_code&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;location&quot;: {                          &quot;type&quot;: &quot;geo_point&quot;                        },                        &quot;region_iso_code&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;region_name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        }                      }                    },                    &quot;http_version&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;method&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;referrer&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;remote_ip&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;response_code&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;url&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;user_agent&quot;: {                      &quot;properties&quot;: {                        &quot;device&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;major&quot;: {                          &quot;type&quot;: &quot;long&quot;                        },                        &quot;minor&quot;: {                          &quot;type&quot;: &quot;long&quot;                        },                        &quot;name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;os&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;os_major&quot;: {                          &quot;type&quot;: &quot;long&quot;                        },                        &quot;os_minor&quot;: {                          &quot;type&quot;: &quot;long&quot;                        },                        &quot;os_name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;patch&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        }                      }                    },                    &quot;user_name&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                },                &quot;error&quot;: {                  &quot;properties&quot;: {                    &quot;client&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;level&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;message&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;module&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;pid&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;tid&quot;: {                      &quot;type&quot;: &quot;long&quot;                    }                  }                }              }            },            &quot;auditd&quot;: {              &quot;properties&quot;: {                &quot;log&quot;: {                  &quot;properties&quot;: {                    &quot;a0&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;acct&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;geoip&quot;: {                      &quot;properties&quot;: {                        &quot;city_name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;continent_name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;country_iso_code&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;location&quot;: {                          &quot;type&quot;: &quot;geo_point&quot;                        },                        &quot;region_iso_code&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;region_name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        }                      }                    },                    &quot;item&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;items&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;new_auid&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;new_ses&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;old_auid&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;old_ses&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;pid&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;ppid&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;record_type&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;res&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;sequence&quot;: {                      &quot;type&quot;: &quot;long&quot;                    }                  }                }              }            },            &quot;beat&quot;: {              &quot;properties&quot;: {                &quot;hostname&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                },                &quot;name&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                },                &quot;timezone&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                },                &quot;version&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                }              }            },            &quot;docker&quot;: {              &quot;properties&quot;: {                &quot;container&quot;: {                  &quot;properties&quot;: {                    &quot;id&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;image&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;labels&quot;: {                      &quot;type&quot;: &quot;object&quot;                    },                    &quot;name&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                }              }            },            &quot;elasticsearch&quot;: {              &quot;properties&quot;: {                &quot;audit&quot;: {                  &quot;properties&quot;: {                    &quot;action&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;event_type&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;layer&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;origin_address&quot;: {                      &quot;type&quot;: &quot;ip&quot;                    },                    &quot;origin_type&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;principal&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;request&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;request_body&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;uri&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                },                &quot;deprecation&quot;: {                  &quot;properties&quot;: {}                },                &quot;gc&quot;: {                  &quot;properties&quot;: {                    &quot;heap&quot;: {                      &quot;properties&quot;: {                        &quot;size_kb&quot;: {                          &quot;type&quot;: &quot;long&quot;                        },                        &quot;used_kb&quot;: {                          &quot;type&quot;: &quot;long&quot;                        }                      }                    },                    &quot;jvm_runtime_sec&quot;: {                      &quot;type&quot;: &quot;float&quot;                    },                    &quot;old_gen&quot;: {                      &quot;properties&quot;: {                        &quot;size_kb&quot;: {                          &quot;type&quot;: &quot;long&quot;                        },                        &quot;used_kb&quot;: {                          &quot;type&quot;: &quot;long&quot;                        }                      }                    },                    &quot;phase&quot;: {                      &quot;properties&quot;: {                        &quot;class_unload_time_sec&quot;: {                          &quot;type&quot;: &quot;float&quot;                        },                        &quot;cpu_time&quot;: {                          &quot;properties&quot;: {                            &quot;real_sec&quot;: {                              &quot;type&quot;: &quot;float&quot;                            },                            &quot;sys_sec&quot;: {                              &quot;type&quot;: &quot;float&quot;                            },                            &quot;user_sec&quot;: {                              &quot;type&quot;: &quot;float&quot;                            }                          }                        },                        &quot;duration_sec&quot;: {                          &quot;type&quot;: &quot;float&quot;                        },                        &quot;name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;parallel_rescan_time_sec&quot;: {                          &quot;type&quot;: &quot;float&quot;                        },                        &quot;scrub_string_table_time_sec&quot;: {                          &quot;type&quot;: &quot;float&quot;                        },                        &quot;scrub_symbol_table_time_sec&quot;: {                          &quot;type&quot;: &quot;float&quot;                        },                        &quot;weak_refs_processing_time_sec&quot;: {                          &quot;type&quot;: &quot;float&quot;                        }                      }                    },                    &quot;stopping_threads_time_sec&quot;: {                      &quot;type&quot;: &quot;float&quot;                    },                    &quot;tags&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;threads_total_stop_time_sec&quot;: {                      &quot;type&quot;: &quot;float&quot;                    },                    &quot;young_gen&quot;: {                      &quot;properties&quot;: {                        &quot;size_kb&quot;: {                          &quot;type&quot;: &quot;long&quot;                        },                        &quot;used_kb&quot;: {                          &quot;type&quot;: &quot;long&quot;                        }                      }                    }                  }                },                &quot;index&quot;: {                  &quot;properties&quot;: {                    &quot;id&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;name&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                },                &quot;node&quot;: {                  &quot;properties&quot;: {                    &quot;name&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                },                &quot;server&quot;: {                  &quot;properties&quot;: {                    &quot;component&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;gc&quot;: {                      &quot;properties&quot;: {                        &quot;young&quot;: {                          &quot;properties&quot;: {                            &quot;one&quot;: {                              &quot;type&quot;: &quot;long&quot;                            },                            &quot;two&quot;: {                              &quot;type&quot;: &quot;long&quot;                            }                          }                        }                      }                    },                    &quot;gc_overhead&quot;: {                      &quot;type&quot;: &quot;long&quot;                    }                  }                },                &quot;shard&quot;: {                  &quot;properties&quot;: {                    &quot;id&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                },                &quot;slowlog&quot;: {                  &quot;properties&quot;: {                    &quot;extra_source&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;id&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;logger&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;routing&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;search_type&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;source_query&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;stats&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;took&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;took_millis&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;total_hits&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;total_shards&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;type&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;types&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                }              }            },            &quot;error&quot;: {              &quot;properties&quot;: {                &quot;code&quot;: {                  &quot;type&quot;: &quot;long&quot;                },                &quot;message&quot;: {                  &quot;norms&quot;: false,                  &quot;type&quot;: &quot;text&quot;                },                &quot;type&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                }              }            },            &quot;event&quot;: {              &quot;properties&quot;: {                &quot;created&quot;: {                  &quot;type&quot;: &quot;date&quot;                },                &quot;severity&quot;: {                  &quot;type&quot;: &quot;long&quot;                }              }            },            &quot;fields&quot;: {              &quot;type&quot;: &quot;object&quot;            },            &quot;fileset&quot;: {              &quot;properties&quot;: {                &quot;module&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                },                &quot;name&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                }              }            },            &quot;host&quot;: {              &quot;properties&quot;: {                &quot;architecture&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                },                &quot;id&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                },                &quot;ip&quot;: {                  &quot;type&quot;: &quot;ip&quot;                },                &quot;mac&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                },                &quot;name&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                },                &quot;os&quot;: {                  &quot;properties&quot;: {                    &quot;family&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;platform&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;version&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                }              }            },            &quot;http&quot;: {              &quot;properties&quot;: {                &quot;request&quot;: {                  &quot;properties&quot;: {                    &quot;method&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                },                &quot;response&quot;: {                  &quot;properties&quot;: {                    &quot;content_length&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;elapsed_time&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;status_code&quot;: {                      &quot;type&quot;: &quot;long&quot;                    }                  }                }              }            },            &quot;icinga&quot;: {              &quot;properties&quot;: {                &quot;debug&quot;: {                  &quot;properties&quot;: {                    &quot;facility&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;message&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;severity&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                },                &quot;main&quot;: {                  &quot;properties&quot;: {                    &quot;facility&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;message&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;severity&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                },                &quot;startup&quot;: {                  &quot;properties&quot;: {                    &quot;facility&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;message&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;severity&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                }              }            },            &quot;iis&quot;: {              &quot;properties&quot;: {                &quot;access&quot;: {                  &quot;properties&quot;: {                    &quot;agent&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;body_received&quot;: {                      &quot;properties&quot;: {                        &quot;bytes&quot;: {                          &quot;type&quot;: &quot;long&quot;                        }                      }                    },                    &quot;body_sent&quot;: {                      &quot;properties&quot;: {                        &quot;bytes&quot;: {                          &quot;type&quot;: &quot;long&quot;                        }                      }                    },                    &quot;cookie&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;geoip&quot;: {                      &quot;properties&quot;: {                        &quot;city_name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;continent_name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;country_iso_code&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;location&quot;: {                          &quot;type&quot;: &quot;geo_point&quot;                        },                        &quot;region_iso_code&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;region_name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        }                      }                    },                    &quot;hostname&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;http_version&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;method&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;port&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;query_string&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;referrer&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;remote_ip&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;request_time_ms&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;response_code&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;server_ip&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;server_name&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;site_name&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;sub_status&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;url&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;user_agent&quot;: {                      &quot;properties&quot;: {                        &quot;device&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;major&quot;: {                          &quot;type&quot;: &quot;long&quot;                        },                        &quot;minor&quot;: {                          &quot;type&quot;: &quot;long&quot;                        },                        &quot;name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;os&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;os_major&quot;: {                          &quot;type&quot;: &quot;long&quot;                        },                        &quot;os_minor&quot;: {                          &quot;type&quot;: &quot;long&quot;                        },                        &quot;os_name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;patch&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        }                      }                    },                    &quot;user_name&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;win32_status&quot;: {                      &quot;type&quot;: &quot;long&quot;                    }                  }                },                &quot;error&quot;: {                  &quot;properties&quot;: {                    &quot;geoip&quot;: {                      &quot;properties&quot;: {                        &quot;city_name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;continent_name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;country_iso_code&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;location&quot;: {                          &quot;type&quot;: &quot;geo_point&quot;                        },                        &quot;region_iso_code&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;region_name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        }                      }                    },                    &quot;http_version&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;method&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;queue_name&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;reason_phrase&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;remote_ip&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;remote_port&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;response_code&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;server_ip&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;server_port&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;url&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                }              }            },            &quot;input&quot;: {              &quot;properties&quot;: {                &quot;type&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                }              }            },            &quot;kafka&quot;: {              &quot;properties&quot;: {                &quot;log&quot;: {                  &quot;properties&quot;: {                    &quot;class&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;component&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;level&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;message&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;timestamp&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;trace&quot;: {                      &quot;properties&quot;: {                        &quot;class&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;full&quot;: {                          &quot;norms&quot;: false,                          &quot;type&quot;: &quot;text&quot;                        },                        &quot;message&quot;: {                          &quot;norms&quot;: false,                          &quot;type&quot;: &quot;text&quot;                        }                      }                    }                  }                }              }            },            &quot;kibana&quot;: {              &quot;properties&quot;: {                &quot;log&quot;: {                  &quot;properties&quot;: {                    &quot;meta&quot;: {                      &quot;type&quot;: &quot;object&quot;                    },                    &quot;state&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;tags&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                }              }            },            &quot;kubernetes&quot;: {              &quot;properties&quot;: {                &quot;annotations&quot;: {                  &quot;type&quot;: &quot;object&quot;                },                &quot;container&quot;: {                  &quot;properties&quot;: {                    &quot;image&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;name&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                },                &quot;labels&quot;: {                  &quot;type&quot;: &quot;object&quot;                },                &quot;namespace&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                },                &quot;node&quot;: {                  &quot;properties&quot;: {                    &quot;name&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                },                &quot;pod&quot;: {                  &quot;properties&quot;: {                    &quot;name&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;uid&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                }              }            },            &quot;log&quot;: {              &quot;properties&quot;: {                &quot;level&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                }              }            },            &quot;logstash&quot;: {              &quot;properties&quot;: {                &quot;log&quot;: {                  &quot;properties&quot;: {                    &quot;level&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;log_event&quot;: {                      &quot;type&quot;: &quot;object&quot;                    },                    &quot;message&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;module&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;thread&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    }                  }                },                &quot;slowlog&quot;: {                  &quot;properties&quot;: {                    &quot;event&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;level&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;message&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;module&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;plugin_name&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;plugin_params&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;plugin_params_object&quot;: {                      &quot;type&quot;: &quot;object&quot;                    },                    &quot;plugin_type&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;thread&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;took_in_millis&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;took_in_nanos&quot;: {                      &quot;type&quot;: &quot;long&quot;                    }                  }                }              }            },            &quot;message&quot;: {              &quot;norms&quot;: false,              &quot;type&quot;: &quot;text&quot;            },            &quot;meta&quot;: {              &quot;properties&quot;: {                &quot;cloud&quot;: {                  &quot;properties&quot;: {                    &quot;availability_zone&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;instance_id&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;instance_name&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;machine_type&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;project_id&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;provider&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;region&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                }              }            },            &quot;mongodb&quot;: {              &quot;properties&quot;: {                &quot;log&quot;: {                  &quot;properties&quot;: {                    &quot;component&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;context&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;message&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;severity&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                }              }            },            &quot;mysql&quot;: {              &quot;properties&quot;: {                &quot;error&quot;: {                  &quot;properties&quot;: {                    &quot;level&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;message&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;thread_id&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;timestamp&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                },                &quot;slowlog&quot;: {                  &quot;properties&quot;: {                    &quot;host&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;id&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;ip&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;lock_time&quot;: {                      &quot;properties&quot;: {                        &quot;sec&quot;: {                          &quot;type&quot;: &quot;float&quot;                        }                      }                    },                    &quot;query&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;query_time&quot;: {                      &quot;properties&quot;: {                        &quot;sec&quot;: {                          &quot;type&quot;: &quot;float&quot;                        }                      }                    },                    &quot;rows_examined&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;rows_sent&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;timestamp&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;user&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                }              }            },            &quot;nginx&quot;: {              &quot;properties&quot;: {                &quot;access&quot;: {                  &quot;properties&quot;: {                    &quot;agent&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;body_sent&quot;: {                      &quot;properties&quot;: {                        &quot;bytes&quot;: {                          &quot;type&quot;: &quot;long&quot;                        }                      }                    },                    &quot;geoip&quot;: {                      &quot;properties&quot;: {                        &quot;city_name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;continent_name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;country_iso_code&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;location&quot;: {                          &quot;type&quot;: &quot;geo_point&quot;                        },                        &quot;region_iso_code&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;region_name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        }                      }                    },                    &quot;http_version&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;method&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;referrer&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;remote_ip&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;response_code&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;url&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;user_agent&quot;: {                      &quot;properties&quot;: {                        &quot;device&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;major&quot;: {                          &quot;type&quot;: &quot;long&quot;                        },                        &quot;minor&quot;: {                          &quot;type&quot;: &quot;long&quot;                        },                        &quot;name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;os&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;os_major&quot;: {                          &quot;type&quot;: &quot;long&quot;                        },                        &quot;os_minor&quot;: {                          &quot;type&quot;: &quot;long&quot;                        },                        &quot;os_name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;patch&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        }                      }                    },                    &quot;user_name&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                },                &quot;error&quot;: {                  &quot;properties&quot;: {                    &quot;connection_id&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;level&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;message&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;pid&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;tid&quot;: {                      &quot;type&quot;: &quot;long&quot;                    }                  }                }              }            },            &quot;offset&quot;: {              &quot;type&quot;: &quot;long&quot;            },            &quot;osquery&quot;: {              &quot;properties&quot;: {                &quot;result&quot;: {                  &quot;properties&quot;: {                    &quot;action&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;calendar_time&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;host_identifier&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;name&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;unix_time&quot;: {                      &quot;type&quot;: &quot;long&quot;                    }                  }                }              }            },            &quot;postgresql&quot;: {              &quot;properties&quot;: {                &quot;log&quot;: {                  &quot;properties&quot;: {                    &quot;database&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;duration&quot;: {                      &quot;type&quot;: &quot;float&quot;                    },                    &quot;level&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;message&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;query&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;thread_id&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;timestamp&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;timezone&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;user&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                }              }            },            &quot;process&quot;: {              &quot;properties&quot;: {                &quot;pid&quot;: {                  &quot;type&quot;: &quot;long&quot;                },                &quot;program&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                }              }            },            &quot;prospector&quot;: {              &quot;properties&quot;: {                &quot;type&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                }              }            },            &quot;read_timestamp&quot;: {              &quot;ignore_above&quot;: 1024,              &quot;type&quot;: &quot;keyword&quot;            },            &quot;redis&quot;: {              &quot;properties&quot;: {                &quot;log&quot;: {                  &quot;properties&quot;: {                    &quot;level&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;message&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;pid&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;role&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                },                &quot;slowlog&quot;: {                  &quot;properties&quot;: {                    &quot;args&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;cmd&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;duration&quot;: {                      &quot;properties&quot;: {                        &quot;us&quot;: {                          &quot;type&quot;: &quot;long&quot;                        }                      }                    },                    &quot;id&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;key&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                }              }            },            &quot;service&quot;: {              &quot;properties&quot;: {                &quot;name&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                }              }            },            &quot;source&quot;: {              &quot;ignore_above&quot;: 1024,              &quot;type&quot;: &quot;keyword&quot;            },            &quot;stream&quot;: {              &quot;ignore_above&quot;: 1024,              &quot;type&quot;: &quot;keyword&quot;            },            &quot;syslog&quot;: {              &quot;properties&quot;: {                &quot;facility&quot;: {                  &quot;type&quot;: &quot;long&quot;                },                &quot;facility_label&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                },                &quot;priority&quot;: {                  &quot;type&quot;: &quot;long&quot;                },                &quot;severity_label&quot;: {                  &quot;ignore_above&quot;: 1024,                  &quot;type&quot;: &quot;keyword&quot;                }              }            },            &quot;system&quot;: {              &quot;properties&quot;: {                &quot;auth&quot;: {                  &quot;properties&quot;: {                    &quot;groupadd&quot;: {                      &quot;properties&quot;: {                        &quot;gid&quot;: {                          &quot;type&quot;: &quot;long&quot;                        },                        &quot;name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        }                      }                    },                    &quot;hostname&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;message&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;pid&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;program&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;ssh&quot;: {                      &quot;properties&quot;: {                        &quot;dropped_ip&quot;: {                          &quot;type&quot;: &quot;ip&quot;                        },                        &quot;event&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;geoip&quot;: {                          &quot;properties&quot;: {                            &quot;city_name&quot;: {                              &quot;ignore_above&quot;: 1024,                              &quot;type&quot;: &quot;keyword&quot;                            },                            &quot;continent_name&quot;: {                              &quot;ignore_above&quot;: 1024,                              &quot;type&quot;: &quot;keyword&quot;                            },                            &quot;country_iso_code&quot;: {                              &quot;ignore_above&quot;: 1024,                              &quot;type&quot;: &quot;keyword&quot;                            },                            &quot;location&quot;: {                              &quot;type&quot;: &quot;geo_point&quot;                            },                            &quot;region_iso_code&quot;: {                              &quot;ignore_above&quot;: 1024,                              &quot;type&quot;: &quot;keyword&quot;                            },                            &quot;region_name&quot;: {                              &quot;ignore_above&quot;: 1024,                              &quot;type&quot;: &quot;keyword&quot;                            }                          }                        },                        &quot;ip&quot;: {                          &quot;type&quot;: &quot;ip&quot;                        },                        &quot;method&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;port&quot;: {                          &quot;type&quot;: &quot;long&quot;                        },                        &quot;signature&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        }                      }                    },                    &quot;sudo&quot;: {                      &quot;properties&quot;: {                        &quot;command&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;error&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;pwd&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;tty&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;user&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        }                      }                    },                    &quot;timestamp&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;user&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;useradd&quot;: {                      &quot;properties&quot;: {                        &quot;gid&quot;: {                          &quot;type&quot;: &quot;long&quot;                        },                        &quot;home&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;shell&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;uid&quot;: {                          &quot;type&quot;: &quot;long&quot;                        }                      }                    }                  }                },                &quot;syslog&quot;: {                  &quot;properties&quot;: {                    &quot;hostname&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;message&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;pid&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;program&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;timestamp&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                }              }            },            &quot;tags&quot;: {              &quot;ignore_above&quot;: 1024,              &quot;type&quot;: &quot;keyword&quot;            },            &quot;traefik&quot;: {              &quot;properties&quot;: {                &quot;access&quot;: {                  &quot;properties&quot;: {                    &quot;agent&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;backend_url&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;body_sent&quot;: {                      &quot;properties&quot;: {                        &quot;bytes&quot;: {                          &quot;type&quot;: &quot;long&quot;                        }                      }                    },                    &quot;frontend_name&quot;: {                      &quot;norms&quot;: false,                      &quot;type&quot;: &quot;text&quot;                    },                    &quot;geoip&quot;: {                      &quot;properties&quot;: {                        &quot;city_name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;continent_name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;country_iso_code&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;location&quot;: {                          &quot;type&quot;: &quot;geo_point&quot;                        },                        &quot;region_iso_code&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;region_name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        }                      }                    },                    &quot;http_version&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;method&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;referrer&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;remote_ip&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;request_count&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;response_code&quot;: {                      &quot;type&quot;: &quot;long&quot;                    },                    &quot;url&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    },                    &quot;user_agent&quot;: {                      &quot;properties&quot;: {                        &quot;device&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;major&quot;: {                          &quot;type&quot;: &quot;long&quot;                        },                        &quot;minor&quot;: {                          &quot;type&quot;: &quot;long&quot;                        },                        &quot;name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;os&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;os_major&quot;: {                          &quot;type&quot;: &quot;long&quot;                        },                        &quot;os_minor&quot;: {                          &quot;type&quot;: &quot;long&quot;                        },                        &quot;os_name&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        },                        &quot;patch&quot;: {                          &quot;ignore_above&quot;: 1024,                          &quot;type&quot;: &quot;keyword&quot;                        }                      }                    },                    &quot;user_name&quot;: {                      &quot;ignore_above&quot;: 1024,                      &quot;type&quot;: &quot;keyword&quot;                    }                  }                }              }            }          }        }      },      &quot;order&quot;: 1,      &quot;settings&quot;: {        &quot;index&quot;: {          &quot;mapping&quot;: {            &quot;total_fields&quot;: {              &quot;limit&quot;: 10000            }          },          &quot;number_of_routing_shards&quot;: 30,          &quot;refresh_interval&quot;: &quot;5s&quot;        }      }    }</code></pre><h3 id="附录二-fields-all-yml"><a href="#附录二-fields-all-yml" class="headerlink" title="附录二(fields-all.yml)"></a>附录二(fields-all.yml)</h3><pre><code class="yaml">    - key: log      title: Log file content      description: &gt;        Contains log file lines.      fields:        - name: source          type: keyword          required: true          description: &gt;            The file from which the line was read. This field contains the absolute path to the file.            For example: `/var/log/system.log`.        - name: offset          type: long          required: false          description: &gt;            The file offset the reported line starts at.        - name: message          type: text          ignore_above: 0          required: true          description: &gt;            The content of the line read from the log file.        - name: stream          type: keyword          required: false          description: &gt;            Log stream when reading container logs, can be &#39;stdout&#39; or &#39;stderr&#39;        - name: prospector.type          required: true          description: &gt;            The input type from which the event was generated. This field is set to the value specified            for the `type` option in the input section of the Filebeat config file. (DEPRECATED: see `input.type`)        - name: input.type          required: true          description: &gt;            The input type from which the event was generated. This field is set to the value specified            for the `type` option in the input section of the Filebeat config file.        - name: read_timestamp          description: &gt;            In case the ingest pipeline parses the timestamp from the log contents, it stores            the original `@timestamp` (representing the time when the log line was read) in this            field.        - name: fileset.module          description: &gt;            The Filebeat module that generated this event.        - name: fileset.name          description: &gt;            The Filebeat fileset that generated this event.        - name: syslog.facility          type: long          required: false          description: &gt;            The facility extracted from the priority.        - name: syslog.priority          type: long          required: false          description: &gt;            The priority of the syslog event.        - name: syslog.severity_label          type: keyword          required: false          description: &gt;            The human readable severity.        - name: syslog.facility_label          type: keyword          required: false          description: &gt;            The human readable facility.        - name: process.program          type: keyword          required: false          description: &gt;            The name of the program.        - name: process.pid          type: long          required: false          description: &gt;            The pid of the process.        - name: event.severity          type: long          required: false          description: &gt;            The severity of the event.        - name: service.name          type: keyword          description: &gt;            Service name.        - name: log.level          type: keyword          description: &gt;            Logging level.        - name: event.created          type: date          description: &gt;            event.created contains the date on which the event was created. In case of            log events this is when the log line was read by Filebeat. In comparison            @timestamp is the processed timestamp from the log line. If both are identical            only @timestamp should be used.        - name: http.response.status_code          type: long          description: &gt;            HTTP response status_code.          example: 404        - name: http.response.elapsed_time          type: long          description: &gt;            Elapsed time between request and response in milli seconds.        - name: http.response.content_length          type: long          description: &gt;            Content length of the HTTP response body.        - name: http.request.method          type: keyword          description: &gt;            Request method.    - key: beat      title: Beat      description: &gt;        Contains common beat fields available in all event types.      fields:        - name: beat.name          description: &gt;            The name of the Beat sending the log messages. If the Beat name is            set in the configuration file, then that value is used. If it is not            set, the hostname is used. To set the Beat name, use the `name`            option in the configuration file.        - name: beat.hostname          description: &gt;            The hostname as returned by the operating system on which the Beat is            running.        - name: beat.timezone          description: &gt;            The timezone as returned by the operating system on which the Beat is            running.        - name: beat.version          description: &gt;            The version of the beat that generated this event.        - name: &quot;@timestamp&quot;          type: date          required: true          format: date          example: August 26th 2016, 12:35:53.332          description: &gt;            The timestamp when the event log record was generated.        - name: tags          description: &gt;            Arbitrary tags that can be set per Beat and per transaction            type.        - name: fields          type: object          object_type: keyword          description: &gt;            Contains user configurable fields.        - name: error          type: group          description: &gt;            Error fields containing additional info in case of errors.          fields:            - name: message              type: text              description: &gt;                Error message.            - name: code              type: long              description: &gt;                Error code.            - name: type              type: keyword              description: &gt;                Error type.    - key: cloud      title: Cloud provider metadata      description: &gt;        Metadata from cloud providers added by the add_cloud_metadata processor.      fields:        - name: meta.cloud.provider          example: ec2          description: &gt;            Name of the cloud provider. Possible values are ec2, gce, or digitalocean.        - name: meta.cloud.instance_id          description: &gt;            Instance ID of the host machine.        - name: meta.cloud.instance_name          description: &gt;            Instance name of the host machine.        - name: meta.cloud.machine_type          example: t2.medium          description: &gt;            Machine type of the host machine.        - name: meta.cloud.availability_zone          example: us-east-1c          description: &gt;            Availability zone in which this host is running.        - name: meta.cloud.project_id          example: project-x          description: &gt;            Name of the project in Google Cloud.        - name: meta.cloud.region          description: &gt;            Region in which this host is running.    - key: docker      title: Docker      description: &gt;        Docker stats collected from Docker.      short_config: false      anchor: docker-processor      fields:        - name: docker          type: group          fields:            - name: container.id              type: keyword              description: &gt;                Unique container id.            - name: container.image              type: keyword              description: &gt;                Name of the image the container was built on.            - name: container.name              type: keyword              description: &gt;                Container name.            - name: container.labels              type: object              object_type: keyword              description: &gt;                Image labels.    - key: host      title: Host      description: &gt;        Info collected for the host machine.      anchor: host-processor      fields:        - name: host          type: group          fields:            - name: name              type: keyword              description: &gt;                Hostname.            - name: id              type: keyword              description: &gt;                Unique host id.            - name: architecture              type: keyword              description: &gt;                Host architecture (e.g. x86_64, arm, ppc, mips).            - name: os.platform              type: keyword              description: &gt;                OS platform (e.g. centos, ubuntu, windows).            - name: os.version              type: keyword              description: &gt;                OS version.            - name: os.family              type: keyword              description: &gt;                OS family (e.g. redhat, debian, freebsd, windows).            - name: ip              type: ip              description: &gt;                List of IP-addresses.            - name: mac              type: keyword              description: &gt;                List of hardware-addresses, usually MAC-addresses.    - key: kubernetes      title: Kubernetes      description: &gt;        Kubernetes metadata added by the kubernetes processor      short_config: false      anchor: kubernetes-processor      fields:        - name: kubernetes          type: group          fields:            - name: pod.name              type: keyword              description: &gt;                Kubernetes pod name            - name: pod.uid              type: keyword              description: &gt;                Kubernetes Pod UID            - name: namespace              type: keyword              description: &gt;                Kubernetes namespace            - name: node.name              type: keyword              description: &gt;                Kubernetes node name            - name: labels              type: object              description: &gt;                Kubernetes labels map            - name: annotations              type: object              description: &gt;                Kubernetes annotations map            - name: container.name              type: keyword              description: &gt;                Kubernetes container name            - name: container.image              type: keyword              description: &gt;                Kubernetes container image    - key: apache2      title: &quot;Apache2&quot;      description: &gt;        Apache2 Module      short_config: true      fields:        - name: apache2          type: group          description: &gt;            Apache2 fields.          fields:            - name: access              type: group              description: &gt;                Contains fields for the Apache2 HTTPD access logs.              fields:                - name: remote_ip                  type: keyword                  description: &gt;                    Client IP address.                - name: user_name                  type: keyword                  description: &gt;                    The user name used when basic authentication is used.                - name: method                  type: keyword                  example: GET                  description: &gt;                    The request HTTP method.                - name: url                  type: keyword                  description: &gt;                    The request HTTP URL.                - name: http_version                  type: keyword                  description: &gt;                    The HTTP version.                - name: response_code                  type: long                  description: &gt;                    The HTTP response code.                - name: body_sent.bytes                  type: long                  format: bytes                  description: &gt;                    The number of bytes of the server response body.                - name: referrer                  type: keyword                  description: &gt;                    The HTTP referrer.                - name: agent                  type: text                  description: &gt;                    Contains the un-parsed user agent string. Only present if the user                    agent Elasticsearch plugin is not available or not used.                - name: user_agent                  type: group                  description: &gt;                    Contains the parsed User agent field. Only present if the user                    agent Elasticsearch plugin is available and used.                  fields:                    - name: device                      type: keyword                      description: &gt;                        The name of the physical device.                    - name: major                      type: long                      description: &gt;                        The major version of the user agent.                    - name: minor                      type: long                      description: &gt;                        The minor version of the user agent.                    - name: patch                      type: keyword                      description: &gt;                        The patch version of the user agent.                    - name: name                      type: keyword                      example: Chrome                      description: &gt;                        The name of the user agent.                    - name: os                      type: keyword                      description: &gt;                        The name of the operating system.                    - name: os_major                      type: long                      description: &gt;                        The major version of the operating system.                    - name: os_minor                      type: long                      description: &gt;                        The minor version of the operating system.                    - name: os_name                      type: keyword                      description: &gt;                        The name of the operating system.                - name: geoip                  type: group                  description: &gt;                    Contains GeoIP information gathered based on the remote_ip field.                    Only present if the GeoIP Elasticsearch plugin is available and                    used.                  fields:                    - name: continent_name                      type: keyword                      description: &gt;                        The name of the continent.                    - name: country_iso_code                      type: keyword                      description: &gt;                        Country ISO code.                    - name: location                      type: geo_point                      description: &gt;                        The longitude and latitude.                    - name: region_name                      type: keyword                      description: &gt;                        The region name.                    - name: city_name                      type: keyword                      description: &gt;                        The city name.                    - name: region_iso_code                      type: keyword                      description: &gt;                        Region ISO code.            - name: error              type: group              description: &gt;                Fields from the Apache error logs.              fields:                - name: level                  type: keyword                  description: &gt;                    The severity level of the message.                - name: client                  type: keyword                  description: &gt;                    The IP address of the client that generated the error.                - name: message                  type: text                  description: &gt;                    The logged message.                - name: pid                  type: long                  description: &gt;                    The process ID.                - name: tid                  type: long                  description: &gt;                    The thread ID.                - name: module                  type: keyword                  description: &gt;                    The module producing the logged message.    - key: auditd      title: &quot;Auditd&quot;      description: &gt;        Module for parsing auditd logs.      short_config: true      fields:        - name: auditd          type: group          description: &gt;            Fields from the auditd logs.          fields:            - name: log              type: group              description: &gt;                Fields from the Linux audit log. Not all fields are documented here because                they are dynamic and vary by audit event type.              fields:                - name: record_type                  description: &gt;                    The audit event type.                - name: old_auid                  description: &gt;                    For login events this is the old audit ID used for the user prior to                    this login.                - name: new_auid                  description: &gt;                    For login events this is the new audit ID. The audit ID can be used to                    trace future events to the user even if their identity changes (like                    becoming root).                - name: old_ses                  description: &gt;                    For login events this is the old session ID used for the user prior to                    this login.                - name: new_ses                  description: &gt;                    For login events this is the new session ID. It can be used to tie a                    user to future events by session ID.                - name: sequence                  type: long                  description: &gt;                    The audit event sequence number.                - name: acct                  description: &gt;                    The user account name associated with the event.                - name: pid                  description: &gt;                    The ID of the process.                - name: ppid                  description: &gt;                    The ID of the process.                - name: items                  description: &gt;                    The number of items in an event.                - name: item                  description: &gt;                    The item field indicates which item out of the total number of items.                    This number is zero-based; a value of 0 means it is the first item.                - name: a0                  description: &gt;                    The first argument to the system call.                - name: res                  description: &gt;                    The result of the system call (success or failure).                - name: geoip                  type: group                  description: &gt;                    Contains GeoIP information gathered based on the `auditd.log.addr`                    field. Only present if the GeoIP Elasticsearch plugin is available and                    used.                  fields:                    - name: continent_name                      type: keyword                      description: &gt;                        The name of the continent.                    - name: city_name                      type: keyword                      description: &gt;                        The name of the city.                    - name: region_name                      type: keyword                      description: &gt;                        The name of the region.                    - name: country_iso_code                      type: keyword                      description: &gt;                        Country ISO code.                    - name: location                      type: geo_point                      description: &gt;                        The longitude and latitude.                    - name: region_iso_code                      type: keyword                      description: &gt;                        Region ISO code.    - key: elasticsearch      title: &quot;elasticsearch&quot;      description: &gt;        elasticsearch Module      fields:        - name: elasticsearch          type: group          description: &gt;          fields:            - name: node.name              description: &quot;Name of the node&quot;              example: &quot;vWNJsZ3&quot;              type: keyword            - name: index.name              description: &quot;Index name&quot;              example: &quot;filebeat-test-input&quot;              type: keyword            - name: index.id              description: &quot;Index id&quot;              example: &quot;aOGgDwbURfCV57AScqbCgw&quot;              type: keyword            - name: shard.id              description: &quot;Id of the shard&quot;              example: &quot;0&quot;              type: keyword            - name: audit              type: group              description: &gt;              fields:                - name: layer                  description: &quot;The layer from which this event originated: rest, transport or ip_filter&quot;                  example: &quot;rest&quot;                  type: keyword                - name: event_type                  description: &quot;The type of event that occurred: anonymous_access_denied, authentication_failed, access_denied, access_granted, connection_granted, connection_denied, tampered_request, run_as_granted, run_as_denied&quot;                  example: &quot;access_granted&quot;                  type: keyword                - name: origin_type                  description: &quot;Where the request originated: rest (request originated from a REST API request), transport (request was received on the transport channel), local_node (the local node issued the request)&quot;                  example: &quot;local_node&quot;                  type: keyword                - name: origin_address                  description: &quot;The IP address from which the request originated&quot;                  example: &quot;192.168.1.42&quot;                  type: ip                - name: principal                  description: &quot;The principal (username) that failed authentication&quot;                  example: &quot;_anonymous&quot;                  type: keyword                - name: action                  description: &quot;The name of the action that was executed&quot;                  example: &quot;cluster:monitor/main&quot;                  type: keyword                - name: uri                  description: &quot;The REST endpoint URI&quot;                  example: /_xpack/security/_authenticate                  type: keyword                - name: request                  description: &quot;The type of request that was executed&quot;                  example: &quot;ClearScrollRequest&quot;                  type: keyword                - name: request_body                  description: &quot;The body of the request, if enabled&quot;                  example: &quot;body&quot;                  type: text            - name: deprecation              type: group              description: &gt;              fields:            - name: gc              type: group              description: &gt;                GC fileset fields.              fields:                - name: phase                  type: group                  description: &gt;                    Fields specific to GC phase.                  fields:                    - name: name                      type: keyword                      description: &gt;                        Name of the GC collection phase.                    - name: duration_sec                      type: float                      description: &gt;                        Collection phase duration according to the Java virtual machine.                    - name: scrub_symbol_table_time_sec                      type: float                      description: &gt;                         Pause time in seconds cleaning up symbol tables.                    - name: scrub_string_table_time_sec                      type: float                      description: &gt;                        Pause time in seconds cleaning up string tables.                    - name: weak_refs_processing_time_sec                      type: float                      description: &gt;                        Time spent processing weak references in seconds.                    - name: parallel_rescan_time_sec                      type: float                      description: &gt;                        Time spent in seconds marking live objects while application is stopped.                    - name: class_unload_time_sec                      type: float                      description: &gt;                        Time spent unloading unused classes in seconds.                    - name: cpu_time                      type: group                      description: &gt;                        Process CPU time spent performing collections.                      fields:                        - name: user_sec                          type: float                          description: &gt;                            CPU time spent outside the kernel.                        - name: sys_sec                          type: float                          description: &gt;                            CPU time spent inside the kernel.                         - name: real_sec                          type: float                          description: &gt;                            Total elapsed CPU time spent to complete the collection from start to finish.                - name: jvm_runtime_sec                  type: float                  description: &gt;                    The time from JVM start up in seconds, as a floating point number.                - name: threads_total_stop_time_sec                  type: float                  description: &gt;                    Garbage collection threads total stop time seconds.                - name: stopping_threads_time_sec                  type: float                  description: &gt;                    Time took to stop threads seconds.                - name: tags                  type: keyword                  description: &gt;                    GC logging tags.                - name: heap                  type: group                  description: &gt;                    Heap allocation and total size.                  fields:                    - name: size_kb                      type: integer                      description: &gt;                        Total heap size in kilobytes.                    - name: used_kb                      type: integer                      description: &gt;                        Used heap in kilobytes.                - name: old_gen                  type: group                  description: &gt;                    Old generation occupancy and total size.                  fields:                    - name: size_kb                      type: integer                      description: &gt;                        Total size of old generation in kilobytes.                    - name: used_kb                      type: integer                      description: &gt;                        Old generation occupancy in kilobytes.                - name: young_gen                  type: group                  description: &gt;                    Young generation occupancy and total size.                  fields:                    - name: size_kb                      type: integer                      description: &gt;                        Total size of young generation in kilobytes.                    - name: used_kb                      type: integer                      description: &gt;                        Young generation occupancy in kilobytes.            - name: server              description: &quot;Server log file&quot;              type: group              fields:              - name: component                description: &quot;Log component&quot;                example: &quot;o.e.c.m.MetaDataCreateIndexService&quot;                type: keyword              - name: gc                description: &quot;GC log&quot;                type: group                fields:                - name: young                  description: &quot;Young GC&quot;                  example: &quot;&quot;                  type: group                  fields:                  - name: one                    description: &quot;&quot;                    example: &quot;&quot;                    type: long                  - name: two                    description: &quot;&quot;                    example: &quot;&quot;                    type: long              - name: gc_overhead                description: &quot;&quot;                example: &quot;&quot;                type: long            - name: slowlog              description: &quot;Slowlog events from Elasticsearch&quot;              example: &quot;[2018-06-29T10:06:14,933][INFO ][index.search.slowlog.query] [v_VJhjV] [metricbeat-6.3.0-2018.06.26][0] took[4.5ms], took_millis[4], total_hits[19435], types[], stats[], search_type[QUERY_THEN_FETCH], total_shards[1], source[{\&quot;query\&quot;:{\&quot;match_all\&quot;:{\&quot;boost\&quot;:1.0}}}],&quot;              type: group              fields:              - name: logger                description: &quot;Logger name&quot;                example: &quot;index.search.slowlog.fetch&quot;                type: keyword              - name: took                description: &quot;Time it took to execute the query&quot;                example: &quot;300ms&quot;                type: text              - name: types                description: &quot;Types&quot;                example: &quot;&quot;                type: keyword              - name: stats                description: &quot;Statistics&quot;                example: &quot;&quot;                type: text              - name: search_type                description: &quot;Search type&quot;                example: &quot;QUERY_THEN_FETCH&quot;                type: keyword              - name: source_query                description: &quot;Slow query&quot;                example: &quot;{\&quot;query\&quot;:{\&quot;match_all\&quot;:{\&quot;boost\&quot;:1.0}}}&quot;                type: text              - name: extra_source                description: &quot;Extra source information&quot;                example: &quot;&quot;                type: text              - name: took_millis                description: &quot;Time took in milliseconds&quot;                example: 42                type: keyword              - name: total_hits                description: &quot;Total hits&quot;                example: 42                type: keyword              - name: total_shards                description: &quot;Total queried shards&quot;                example: 22                type: keyword              - name: routing                description: &quot;Routing&quot;                example: &quot;s01HZ2QBk9jw4gtgaFtn&quot;                type: keyword              - name: id                description: Id                example: &quot;&quot;                type: keyword              - name: type                description: &quot;Type&quot;                example: &quot;doc&quot;                type: keyword    - key: icinga      title: &quot;Icinga&quot;      description: &gt;        Icinga Module      fields:        - name: icinga          type: group          description: &gt;          fields:            - name: debug              type: group              description: &gt;                Contains fields for the Icinga debug logs.              fields:                - name: facility                  type: keyword                  description: &gt;                    Specifies what component of Icinga logged the message.                - name: severity                  type: keyword                  description: &gt;                    Possible values are &quot;debug&quot;, &quot;notice&quot;, &quot;information&quot;, &quot;warning&quot; or                    &quot;critical&quot;.                - name: message                  type: text                  description: &gt;                    The logged message.            - name: main              type: group              description: &gt;                Contains fields for the Icinga main logs.              fields:                - name: facility                  type: keyword                  description: &gt;                    Specifies what component of Icinga logged the message.                - name: severity                  type: keyword                  description: &gt;                    Possible values are &quot;debug&quot;, &quot;notice&quot;, &quot;information&quot;, &quot;warning&quot; or                    &quot;critical&quot;.                - name: message                  type: text                  description: &gt;                    The logged message.            - name: startup              type: group              description: &gt;                Contains fields for the Icinga startup logs.              fields:                - name: facility                  type: keyword                  description: &gt;                    Specifies what component of Icinga logged the message.                - name: severity                  type: keyword                  description: &gt;                    Possible values are &quot;debug&quot;, &quot;notice&quot;, &quot;information&quot;, &quot;warning&quot; or                    &quot;critical&quot;.                - name: message                  type: text                  description: &gt;                    The logged message.    - key: iis      title: &quot;IIS&quot;      description: &gt;        Module for parsing IIS log files.      fields:        - name: iis          type: group          description: &gt;            Fields from IIS log files.          fields:            - name: access              type: group              description: &gt;                Contains fields for IIS access logs.              fields:                - name: server_ip                  type: keyword                  description: &gt;                    The server IP address.                - name: method                  type: keyword                  example: GET                  description: &gt;                    The request HTTP method.                - name: url                  type: keyword                  description: &gt;                    The request HTTP URL.                - name: query_string                  type: keyword                  description: &gt;                    The request query string, if any.                - name: port                  type: long                  description: &gt;                    The request port number.                - name: user_name                  type: keyword                  description: &gt;                    The user name used when basic authentication is used.                - name: remote_ip                  type: keyword                  description: &gt;                    The client IP address.                - name: referrer                  type: keyword                  description: &gt;                    The HTTP referrer.                - name: response_code                  type: long                  description: &gt;                    The HTTP response code.                - name: sub_status                  type: long                  description: &gt;                    The HTTP substatus code.                - name: win32_status                  type: long                  description: &gt;                    The Windows status code.                - name: request_time_ms                  type: long                  description: &gt;                    The request time in milliseconds.                - name: site_name                  type: keyword                  description: &gt;                    The site name and instance number.                - name: server_name                  type: keyword                  description: &gt;                    The name of the server on which the log file entry was generated.                - name: http_version                  type: keyword                  description: &gt;                    The HTTP version.                - name: cookie                  type: keyword                  description: &gt;                    The content of the cookie sent or received, if any.                - name: hostname                  type: keyword                  description: &gt;                    The host header name, if any.                - name: body_sent.bytes                  type: long                  format: bytes                  description: &gt;                    The number of bytes of the server response body.                - name: body_received.bytes                  type: long                  format: bytes                  description: &gt;                    The number of bytes of the server request body.                - name: agent                  type: text                  description: &gt;                    Contains the un-parsed user agent string. Only present if the user                    agent Elasticsearch plugin is not available or not used.                - name: user_agent                  type: group                  description: &gt;                    Contains the parsed user agent field. Only present if the user                    agent Elasticsearch plugin is available and used.                  fields:                    - name: device                      type: keyword                      description: &gt;                        The name of the physical device.                    - name: major                      type: long                      description: &gt;                        The major version of the user agent.                    - name: minor                      type: long                      description: &gt;                        The minor version of the user agent.                    - name: patch                      type: keyword                      description: &gt;                        The patch version of the user agent.                    - name: name                      type: keyword                      example: Chrome                      description: &gt;                        The name of the user agent.                    - name: os                      type: keyword                      description: &gt;                        The name of the operating system.                    - name: os_major                      type: long                      description: &gt;                        The major version of the operating system.                    - name: os_minor                      type: long                      description: &gt;                        The minor version of the operating system.                    - name: os_name                      type: keyword                      description: &gt;                        The name of the operating system.                - name: geoip                  type: group                  description: &gt;                    Contains GeoIP information gathered based on the remote_ip field.                    Only present if the GeoIP Elasticsearch plugin is available and                    used.                  fields:                    - name: continent_name                      type: keyword                      description: &gt;                        The name of the continent.                    - name: country_iso_code                      type: keyword                      description: &gt;                        Country ISO code.                    - name: location                      type: geo_point                      description: &gt;                        The longitude and latitude.                    - name: region_name                      type: keyword                      description: &gt;                        The region name.                    - name: city_name                      type: keyword                      description: &gt;                        The city name.                    - name: region_iso_code                      type: keyword                      description: &gt;                        Region ISO code.            - name: error              type: group              description: &gt;                Contains fields for IIS error logs.              fields:                - name: remote_ip                  type: keyword                  description: &gt;                    The client IP address.                - name: remote_port                  type: long                  description: &gt;                    The client port number.                - name: server_ip                  type: keyword                  description: &gt;                    The server IP address.                - name: server_port                  type: long                  description: &gt;                    The server port number.                - name: http_version                  type: keyword                  description: &gt;                    The HTTP version.                - name: method                  type: keyword                  example: GET                  description: &gt;                    The request HTTP method.                - name: url                  type: keyword                  description: &gt;                    The request HTTP URL.                - name: response_code                  type: long                  description: &gt;                    The HTTP response code.                - name: reason_phrase                  type: keyword                  description: &gt;                    The HTTP reason phrase.                - name: queue_name                  type: keyword                  description: &gt;                    The IIS application pool name.                - name: geoip                  type: group                  description: &gt;                    Contains GeoIP information gathered based on the remote_ip field.                    Only present if the GeoIP Elasticsearch plugin is available and                    used.                  fields:                    - name: continent_name                      type: keyword                      description: &gt;                        The name of the continent.                    - name: country_iso_code                      type: keyword                      description: &gt;                        Country ISO code.                    - name: location                      type: geo_point                      description: &gt;                        The longitude and latitude.                    - name: region_name                      type: keyword                      description: &gt;                        The region name.                    - name: city_name                      type: keyword                      description: &gt;                        The city name.                    - name: region_iso_code                      type: keyword                      description: &gt;                        Region ISO code.    - key: kafka      title: &quot;Kafka&quot;      description: &gt;        Kafka module      fields:        - name: kafka          type: group          description: &gt;          fields:            - name: log              type: group              description: &gt;                Kafka log lines.              fields:                - name: timestamp                  description: &gt;                    The timestamp from the log line.                - name: level                  example: &quot;WARN&quot;                  description: &gt;                    The log level.                - name: message                  type: text                  description: &gt;                    The logged message.                - name: component                  type: keyword                  description: &gt;                    Component the log is coming from.                - name: class                  type: text                  description: &gt;                    Java class the log is coming from.                - name: trace                  type: group                  description: &gt;                      Trace in the log line.                  fields:                    - name: class                      type: keyword                      description: &gt;                        Java class the trace is coming from.                    - name: message                      type: text                      description: &gt;                          Message part of the trace.                    - name: full                      type: text                      description: &gt;                          The full trace in the log line.    - key: kibana      title: &quot;kibana&quot;      description: &gt;        kibana Module      fields:        - name: kibana          type: group          description: &gt;          fields:            - name: log              type: group              description: &gt;                Kafka log lines.              fields:                - name: tags                  type: keyword                  description: &gt;                    Kibana logging tags.                - name: state                  type: keyword                  description: &gt;                    Current state of Kibana.                - name: meta                  type: object                  object_type: keyword    - key: logstash      title: &quot;logstash&quot;      description: &gt;        logstash Module      fields:        - name: logstash          type: group          description: &gt;          fields:            - name: log              title: &quot;Logstash&quot;              type: group              description: &gt;                Fields from the Logstash logs.              fields:                - name: message                  type: text                  description: &gt;                    Contains the un-parsed log message                - name: level                  type: keyword                  description: &gt;                    The log level of the message, this correspond to Log4j levels.                - name: module                  type: keyword                  description: &gt;                    The module or class where the event originate.                - name: thread                  type: text                  description: &gt;                    Information about the running thread where the log originate.                - name: log_event                  type: object                  description: &gt;                    key and value debugging information.            - name: slowlog              type: group              description: &gt;                slowlog              fields:                - name: message                  type: text                  description: &gt;                    Contains the un-parsed log message                - name: level                  type: keyword                  description: &gt;                    The log level of the message, this correspond to Log4j levels.                - name: module                  type: keyword                  description: &gt;                    The module or class where the event originate.                - name: thread                  type: text                  description: &gt;                    Information about the running thread where the log originate.                - name: event                  type: text                  description: &gt;                    Raw dump of the original event                - name: plugin_name                  type: keyword                  description: &gt;                    Name of the plugin                - name: plugin_type                  type: keyword                  description: &gt;                    Type of the plugin: Inputs, Filters, Outputs or Codecs.                - name: took_in_millis                  type: long                  description: &gt;                    Execution time for the plugin in milliseconds.                - name: took_in_nanos                  type: long                  description: &gt;                    Execution time for the plugin in nanoseconds.                - name: plugin_params                  type: text                  description: &gt;                    String value of the plugin configuration                - name: plugin_params_object                  type: object                  description: &gt;                    key -&gt; value of the configuration used by the plugin.    - key: mongodb      title: &quot;mongodb&quot;      description: &gt;        Module for parsing MongoDB log files.      fields:        - name: mongodb          type: group          description: &gt;              Fields from MongoDB logs.          fields:            - name: log              type: group              description: &gt;                  Contains fields from MongoDB logs.              fields:              - name: severity                description: &gt;                    Severity level of message                example: I                type: keyword              - name: component                description: &gt;                    Functional categorization of message                example: COMMAND                type: keyword              - name: context                description: &gt;                    Context of message                example: initandlisten                type: keyword              - name: message                description: &gt;                    The message in the log line.                type: text    - key: mysql      title: &quot;MySQL&quot;      description: &gt;        Module for parsing the MySQL log files.      short_config: true      fields:        - name: mysql          type: group          description: &gt;            Fields from the MySQL log files.          fields:            - name: error              type: group              description: &gt;                Contains fields from the MySQL error logs.              fields:                - name: timestamp                  description: &gt;                    The timestamp from the log line.                - name: thread_id                  type: long                  description: &gt;                    As of MySQL 5.7.2, this is the thread id. For MySQL versions prior to 5.7.2, this                    field contains the process id.                - name: level                  example: &quot;Warning&quot;                  description:                    The log level.                - name: message                  type: text                  description: &gt;                    The logged message.            - name: slowlog              type: group              description: &gt;                Contains fields from the MySQL slow logs.              fields:                - name: user                  description: &gt;                    The MySQL user that created the query.                - name: host                  description: &gt;                    The host from where the user that created the query logged in.                - name: ip                  description: &gt;                    The IP address from where the user that created the query logged in.                - name: query_time.sec                  type: float                  description: &gt;                    The total time the query took, in seconds, as a floating point number.                - name: lock_time.sec                  type: float                  description: &gt;                    The amount of time the query waited for the lock to be available. The                    value is in seconds, as a floating point number.                - name: rows_sent                  type: long                  description: &gt;                    The number of rows returned by the query.                - name: rows_examined                  type: long                  description: &gt;                    The number of rows scanned by the query.                - name: timestamp                  type: long                  description: &gt;                    The unix timestamp taken from the `SET timestamp` query.                - name: query                  description: &gt;                    The slow query.                - name: id                  type: long                  description: &gt;                    The connection ID for the query.    - key: nginx      title: &quot;Nginx&quot;      description: &gt;        Module for parsing the Nginx log files.      short_config: true      fields:        - name: nginx          type: group          description: &gt;            Fields from the Nginx log files.          fields:            - name: access              type: group              description: &gt;                Contains fields for the Nginx access logs.              fields:                - name: remote_ip_list                  type: array                  description: &gt;                    An array of remote IP addresses. It is a list because it is common to include, besides the client                    IP address, IP addresses from headers like `X-Forwarded-For`. See also the `remote_ip` field.                - name: remote_ip                  type: keyword                  description: &gt;                    Client IP address. The first public IP address from the `remote_ip_list` array. If no public IP                    addresses are present, this field contains the first private IP address from the `remote_ip_list`                    array.                - name: user_name                  type: keyword                  description: &gt;                    The user name used when basic authentication is used.                - name: method                  type: keyword                  example: GET                  description: &gt;                    The request HTTP method.                - name: url                  type: keyword                  description: &gt;                    The request HTTP URL.                - name: http_version                  type: keyword                  description: &gt;                    The HTTP version.                - name: response_code                  type: long                  description: &gt;                    The HTTP response code.                - name: body_sent.bytes                  type: long                  format: bytes                  description: &gt;                    The number of bytes of the server response body.                - name: referrer                  type: keyword                  description: &gt;                    The HTTP referrer.                - name: agent                  type: text                  description: &gt;                    Contains the un-parsed user agent string. Only present if the user                    agent Elasticsearch plugin is not available or not used.                - name: user_agent                  type: group                  description: &gt;                    Contains the parsed User agent field. Only present if the user                    agent Elasticsearch plugin is available and used.                  fields:                    - name: device                      type: keyword                      description: &gt;                        The name of the physical device.                    - name: major                      type: long                      description: &gt;                        The major version of the user agent.                    - name: minor                      type: long                      description: &gt;                        The minor version of the user agent.                    - name: patch                      type: keyword                      description: &gt;                        The patch version of the user agent.                    - name: name                      type: keyword                      example: Chrome                      description: &gt;                        The name of the user agent.                    - name: os                      type: keyword                      description: &gt;                        The name of the operating system.                    - name: os_major                      type: long                      description: &gt;                        The major version of the operating system.                    - name: os_minor                      type: long                      description: &gt;                        The minor version of the operating system.                    - name: os_name                      type: keyword                      description: &gt;                        The name of the operating system.                - name: geoip                  type: group                  description: &gt;                    Contains GeoIP information gathered based on the remote_ip field.                    Only present if the GeoIP Elasticsearch plugin is available and                    used.                  fields:                    - name: continent_name                      type: keyword                      description: &gt;                        The name of the continent.                    - name: country_iso_code                      type: keyword                      description: &gt;                        Country ISO code.                    - name: location                      type: geo_point                      description: &gt;                        The longitude and latitude.                    - name: region_name                      type: keyword                      description: &gt;                        The region name.                    - name: city_name                      type: keyword                      description: &gt;                        The city name.                    - name: region_iso_code                      type: keyword                      description: &gt;                        Region ISO code.            - name: error              type: group              description: &gt;                Contains fields for the Nginx error logs.              fields:                - name: level                  type: keyword                  description: &gt;                    Error level (e.g. error, critical).                - name: pid                  type: long                  description: &gt;                    Process identifier (PID).                - name: tid                  type: long                  description: &gt;                    Thread identifier.                - name: connection_id                  type: long                  description: &gt;                    Connection identifier.                - name: message                  type: text                  description: &gt;                    The error message    - key: osquery      title: &quot;Osquery&quot;      description: &gt;        Fields exported by the `osquery` module      fields:        - name: osquery          type: group          description: &gt;          fields:            - name: result              type: group              description: &gt;                Common fields exported by the result metricset.              fields:                - name: name                  type: keyword                  description: &gt;                    The name of the query that generated this event.                - name: action                  type: keyword                  description: &gt;                    For incremental data, marks whether the entry was added                    or removed. It can be one of &quot;added&quot;, &quot;removed&quot;, or &quot;snapshot&quot;.                - name: host_identifier                  type: keyword                  description: &gt;                    The identifier for the host on which the osquery agent is running.                    Normally the hostname.                - name: unix_time                  type: long                  description: &gt;                    Unix timestamp of the event, in seconds since the epoch. Used for computing the `@timestamp` column.                - name: calendar_time                  tupe: keyword                  description: &gt;                    String representation of the collection time, as formatted by osquery.    - key: postgresql      title: &quot;PostgreSQL&quot;      description: &gt;        Module for parsing the PostgreSQL log files.      short_config: true      fields:        - name: postgresql          type: group          description: &gt;              Fields from PostgreSQL logs.          fields:            - name: log              type: group              description: &gt;                Fields from the PostgreSQL log files.              fields:                - name: timestamp                  description: &gt;                    The timestamp from the log line.                - name: timezone                  description: &gt;                    The timezone of timestamp.                - name: thread_id                  type: long                  description: &gt;                      Process id                - name: user                  example: &quot;admin&quot;                  description:                    Name of user                - name: database                  example: &quot;mydb&quot;                  description:                    Name of database                - name: level                  example: &quot;FATAL&quot;                  description:                    The log level.                - name: duration                  type: float                  example: &quot;30.0&quot;                  description:                    Duration of a query.                - name: query                  example: &quot;SELECT * FROM users;&quot;                  description:                    Query statement.                - name: message                  type: text                  description: &gt;                    The logged message.    - key: redis      title: &quot;Redis&quot;      description: &gt;        Redis Module      fields:        - name: redis          type: group          description: &gt;          fields:            - name: log              type: group              description: &gt;                Redis log files              fields:                - name: pid                  type: long                  description: &gt;                    The process ID of the Redis server.                - name: role                  type: keyword                  description: &gt;                    The role of the Redis instance. Can be one of `master`, `slave`, `child` (for RDF/AOF writing child),                    or `sentinel`.                - name: level                  type: keyword                  description: &gt;                    The log level. Can be one of `debug`, `verbose`, `notice`, or `warning`.                - name: message                  type: text                  description: &gt;                    The log message            - name: slowlog              type: group              description: &gt;                Slow logs are retrieved from Redis via a network connection.              fields:                - name: cmd                  type: keyword                  description: &gt;                    The command executed.                - name: duration.us                  type: long                  description: &gt;                    How long it took to execute the command in microseconds.                - name: id                  type: long                  description: &gt;                    The ID of the query.                - name: key                  type: keyword                  description: &gt;                    The key on which the command was executed.                - name: args                  type: keyword                  description: &gt;                    The arguments with which the command was called.    - key: system      title: &quot;System&quot;      description: &gt;        Module for parsing system log files.      short_config: true      fields:        - name: system          type: group          description: &gt;            Fields from the system log files.          fields:            - name: auth              type: group              description: &gt;                Fields from the Linux authorization logs.              fields:                - name: timestamp                  description: &gt;                    The timestamp as read from the auth message.                - name: hostname                  description: &gt;                    The hostname as read from the auth message.                - name: program                  description: &gt;                    The process name as read from the auth message.                - name: pid                  type: long                  description: &gt;                    The PID of the process that sent the auth message.                - name: message                  type: text                  description: &gt;                    The message in the log line.                - name: user                  description: &gt;                    The Unix user that this event refers to.                - name: ssh                  type: group                  description: &gt;                    Fields specific to SSH login events.                  fields:                  - name: event                    description: &gt;                      The SSH login event. Can be one of &quot;Accepted&quot;, &quot;Failed&quot;, or &quot;Invalid&quot;. &quot;Accepted&quot;                      means a successful login. &quot;Invalid&quot; means that the user is not configured on the                      system. &quot;Failed&quot; means that the SSH login attempt has failed.                  - name: method                    description: &gt;                      The SSH authentication method. Can be one of &quot;password&quot; or &quot;publickey&quot;.                  - name: ip                    type: ip                    description: &gt;                      The client IP from where the login attempt was made.                  - name: dropped_ip                    type: ip                    description: &gt;                      The client IP from SSH connections that are open and immediately dropped.                  - name: port                    type: long                    description: &gt;                      The client port from where the login attempt was made.                  - name: signature                    description: &gt;                      The signature of the client public key.                  - name: geoip                    type: group                    description: &gt;                      Contains GeoIP information gathered based on the `system.auth.ip` field.                      Only present if the GeoIP Elasticsearch plugin is available and                      used.                    fields:                      - name: continent_name                        type: keyword                        description: &gt;                          The name of the continent.                      - name: city_name                        type: keyword                        description: &gt;                          The name of the city.                      - name: region_name                        type: keyword                        description: &gt;                          The name of the region.                      - name: country_iso_code                        type: keyword                        description: &gt;                          Country ISO code.                      - name: location                        type: geo_point                        description: &gt;                          The longitude and latitude.                      - name: region_iso_code                        type: keyword                        description: &gt;                          Region ISO code.                - name: sudo                  type: group                  description: &gt;                    Fields specific to events created by the `sudo` command.                  fields:                  - name: error                    example: user NOT in sudoers                    description: &gt;                      The error message in case the sudo command failed.                  - name: tty                    description: &gt;                      The TTY where the sudo command is executed.                  - name: pwd                    description: &gt;                      The current directory where the sudo command is executed.                  - name: user                    example: root                    description: &gt;                      The target user to which the sudo command is switching.                  - name: command                    description: &gt;                      The command executed via sudo.                - name: useradd                  type: group                  description: &gt;                    Fields specific to events created by the `useradd` command.                  fields:                  - name: name                    description: &gt;                      The user name being added.                  - name: uid                    type: long                    description:                      The user ID.                  - name: gid                    type: long                    description:                      The group ID.                  - name: home                    description:                      The home folder for the new user.                  - name: shell                    description:                      The default shell for the new user.                - name: groupadd                  type: group                  description: &gt;                    Fields specific to events created by the `groupadd` command.                  fields:                  - name: name                    description: &gt;                      The name of the new group.                  - name: gid                    type: long                    description: &gt;                      The ID of the new group.            - name: syslog              type: group              description: &gt;                Contains fields from the syslog system logs.              fields:                - name: timestamp                  description: &gt;                    The timestamp as read from the syslog message.                - name: hostname                  description: &gt;                    The hostname as read from the syslog message.                - name: program                  description: &gt;                    The process name as read from the syslog message.                - name: pid                  description: &gt;                    The PID of the process that sent the syslog message.                - name: message                  type: text                  description: &gt;                    The message in the log line.    - key: traefik      title: &quot;Traefik&quot;      description: &gt;        Module for parsing the Traefik log files.      fields:        - name: traefik          type: group          description: &gt;            Fields from the Traefik log files.          fields:            - name: access              type: group              description: &gt;                Contains fields for the Traefik access logs.              fields:                - name: remote_ip                  type: keyword                  description: &gt;                    Client IP address.                - name: user_name                  type: keyword                  description: &gt;                    The user name used when basic authentication is used.                - name: method                  type: keyword                  example: GET                  description: &gt;                    The request HTTP method.                - name: url                  type: keyword                  description: &gt;                    The request HTTP URL.                - name: http_version                  type: keyword                  description: &gt;                    The HTTP version.                - name: response_code                  type: long                  description: &gt;                    The HTTP response code.                - name: body_sent.bytes                  type: long                  format: bytes                  description: &gt;                    The number of bytes of the server response body.                - name: referrer                  type: keyword                  description: &gt;                    The HTTP referrer.                - name: agent                  type: text                  description: &gt;                    Contains the un-parsed user agent string. Only present if the user                    agent Elasticsearch plugin is not available or not used.                - name: user_agent                  type: group                  description: &gt;                    Contains the parsed User agent field. Only present if the user                    agent Elasticsearch plugin is available and used.                  fields:                    - name: device                      type: keyword                      description: &gt;                        The name of the physical device.                    - name: major                      type: long                      description: &gt;                        The major version of the user agent.                    - name: minor                      type: long                      description: &gt;                        The minor version of the user agent.                    - name: patch                      type: keyword                      description: &gt;                        The patch version of the user agent.                    - name: name                      type: keyword                      example: Chrome                      description: &gt;                        The name of the user agent.                    - name: os                      type: keyword                      description: &gt;                        The name of the operating system.                    - name: os_major                      type: long                      description: &gt;                        The major version of the operating system.                    - name: os_minor                      type: long                      description: &gt;                        The minor version of the operating system.                    - name: os_name                      type: keyword                      description: &gt;                        The name of the operating system.                - name: geoip                  type: group                  description: &gt;                    Contains GeoIP information gathered based on the remote_ip field.                    Only present if the GeoIP Elasticsearch plugin is available and                    used.                  fields:                    - name: continent_name                      type: keyword                      description: &gt;                        The name of the continent.                    - name: country_iso_code                      type: keyword                      description: &gt;                        Country ISO code.                    - name: location                      type: geo_point                      description: &gt;                        The longitude and latitude.                    - name: region_name                      type: keyword                      description: &gt;                        The region name.                    - name: city_name                      type: keyword                      description: &gt;                        The city name.                    - name: region_iso_code                      type: keyword                      description: &gt;                        Region ISO code.                - name: request_count                  type: long                  description: &gt;                    The number of requests                - name: frontend_name                  type: text                  description: &gt;                    The name of the frontend used                - name: backend_url                  type: text                  description:                    The url of the backend where request is forwarded</code></pre>]]></content>
    
    <summary type="html">
    
      Filebeat 实时收集 SpringBoot 的方法
    
    </summary>
    
    
      <category term="SpringBoot" scheme="http://blog.joylau.cn/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://blog.joylau.cn/tags/SpringBoot/"/>
    
      <category term="Filebeat" scheme="http://blog.joylau.cn/tags/Filebeat/"/>
    
  </entry>
  
</feed>
